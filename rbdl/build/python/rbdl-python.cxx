/* Generated by Cython 0.26.1 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_26_1"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x03030000 || (PY_MAJOR_VERSION == 2 && PY_VERSION_HEX >= 0x02070000)
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX < 0x030700A0 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject **args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject **args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #ifdef __cplusplus
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough) || (defined(__GNUC__) && defined(__attribute__))
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__rbdl
#define __PYX_HAVE_API__rbdl
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include <stdint.h>
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <rbdl/rbdl_math.h>
#include <rbdl/Quaternion.h>
#include <rbdl/SpatialAlgebraOperators.h>
#include <rbdl/Body.h>
#include <rbdl/Joint.h>
#include <rbdl/Model.h>
#include <rbdl/Kinematics.h>
#include <rbdl/rbdl_utils.h>
#include <rbdl/Constraints.h>
#include "rbdl_ptr_functions.h"
#include "rbdl_loadmodel.cc"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "rbdl.pyx",
  "stringsource",
  "__init__.pxd",
  "type.pxd",
};
/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":725
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":726
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":727
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":728
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":732
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":733
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":734
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":735
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":739
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":740
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":749
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":750
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":751
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":754
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":755
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":757
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":758
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":761
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_4rbdl_Vector3d;
struct __pyx_obj_4rbdl_Matrix3d;
struct __pyx_obj_4rbdl_VectorNd;
struct __pyx_obj_4rbdl_Quaternion;
struct __pyx_obj_4rbdl_SpatialVector;
struct __pyx_obj_4rbdl_SpatialMatrix;
struct __pyx_obj_4rbdl_SpatialTransform;
struct __pyx_obj_4rbdl_SpatialRigidBodyInertia;
struct __pyx_obj_4rbdl_Body;
struct __pyx_obj_4rbdl_FixedBody;
struct __pyx_obj_4rbdl_Joint;
struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper;
struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper;
struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper;
struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper;
struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper;
struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper;
struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper;
struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper;
struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper;
struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper;
struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper;
struct __pyx_obj_4rbdl_Model;
struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper;
struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper;
struct __pyx_obj_4rbdl_ConstraintSet;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":764
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":765
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":766
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "rbdl.pyx":753
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]
 * 
 * cdef enum JointType:             # <<<<<<<<<<<<<<
 *     JointTypeUndefined = 0
 *     JointTypeRevolute
 */
enum __pyx_t_4rbdl_JointType {
  __pyx_e_4rbdl_JointTypeUndefined = 0,
  __pyx_e_4rbdl_JointTypeRevolute,
  __pyx_e_4rbdl_JointTypePrismatic,
  __pyx_e_4rbdl_JointTypeRevoluteX,
  __pyx_e_4rbdl_JointTypeRevoluteY,
  __pyx_e_4rbdl_JointTypeRevoluteZ,
  __pyx_e_4rbdl_JointTypeSpherical,
  __pyx_e_4rbdl_JointTypeEulerZYX,
  __pyx_e_4rbdl_JointTypeEulerXYZ,
  __pyx_e_4rbdl_JointTypeEulerYXZ,
  __pyx_e_4rbdl_JointTypeTranslationXYZ,
  __pyx_e_4rbdl_JointTypeFloatingBase,
  __pyx_e_4rbdl_JointTypeFixed,
  __pyx_e_4rbdl_JointTypeHelical,
  __pyx_e_4rbdl_JointType1DoF,
  __pyx_e_4rbdl_JointType2DoF,
  __pyx_e_4rbdl_JointType3DoF,
  __pyx_e_4rbdl_JointType4DoF,
  __pyx_e_4rbdl_JointType5DoF,
  __pyx_e_4rbdl_JointType6DoF,
  __pyx_e_4rbdl_JointTypeCustom
};

/* "rbdl.pyx":21
 * ##############################
 * 
 * cdef class Vector3d:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Vector3d *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_Vector3d {
  PyObject_HEAD
  RigidBodyDynamics::Math::Vector3d *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":74
 *         return Vector3d (0, python_values)
 * 
 * cdef class Matrix3d:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Matrix3d *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_Matrix3d {
  PyObject_HEAD
  RigidBodyDynamics::Math::Matrix3d *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":125
 * 
 * 
 * cdef class VectorNd:             # <<<<<<<<<<<<<<
 *     cdef crbdl.VectorNd *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_VectorNd {
  PyObject_HEAD
  RigidBodyDynamics::Math::VectorNd *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":181
 *         return VectorNd (vector_ptr.rows(), <uintptr_t> address)
 * 
 * cdef class Quaternion:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Quaternion *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_Quaternion {
  PyObject_HEAD
  RigidBodyDynamics::Math::Quaternion *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":261
 *         return Quaternion (0, None, python_matrix_values)
 * 
 * cdef class SpatialVector:             # <<<<<<<<<<<<<<
 *     cdef crbdl.SpatialVector *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_SpatialVector {
  PyObject_HEAD
  RigidBodyDynamics::Math::SpatialVector *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":315
 *         return SpatialVector (0, python_values)
 * 
 * cdef class SpatialMatrix:             # <<<<<<<<<<<<<<
 *     cdef crbdl.SpatialMatrix *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_SpatialMatrix {
  PyObject_HEAD
  RigidBodyDynamics::Math::SpatialMatrix *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":446
 * ##############################
 * 
 * cdef class SpatialTransform:             # <<<<<<<<<<<<<<
 *     cdef crbdl.SpatialTransform *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_SpatialTransform {
  PyObject_HEAD
  RigidBodyDynamics::Math::SpatialTransform *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":502
 *         return SpatialTransform (address)
 * 
 * cdef class SpatialRigidBodyInertia:             # <<<<<<<<<<<<<<
 *     cdef crbdl.SpatialRigidBodyInertia *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_SpatialRigidBodyInertia {
  PyObject_HEAD
  RigidBodyDynamics::Math::SpatialRigidBodyInertia *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":594
 * ##############################
 * 
 * cdef class Body:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Body *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_Body {
  PyObject_HEAD
  RigidBodyDynamics::Body *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":695
 *             self.thisptr.mIsVirtual = value
 * 
 * cdef class FixedBody:             # <<<<<<<<<<<<<<
 *     cdef crbdl.FixedBody *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_FixedBody {
  PyObject_HEAD
  RigidBodyDynamics::FixedBody *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":776
 *     JointTypeCustom
 * 
 * cdef class Joint:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Joint *thisptr
 *     cdef free_on_dealloc
 */
struct __pyx_obj_4rbdl_Joint {
  PyObject_HEAD
  RigidBodyDynamics::Joint *thisptr;
  PyObject *free_on_dealloc;
};


/* "rbdl.pyx":885
 * cdef class Model
 * 
 * cdef class _Model_v_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":913
 *         return self.parent.v.size()
 * 
 * cdef class _Model_a_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":941
 *         return self.parent.a.size()
 * 
 * cdef class _Model_mJoints_Joint_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":969
 *         return self.parent.mJoints.size()
 * 
 * cdef class _Model_S_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":997
 *         return self.parent.S.size()
 * 
 * cdef class _Model_X_J_SpatialTransform_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1025
 *         return self.parent.X_J.size()
 * 
 * cdef class _Model_v_J_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1053
 *         return self.parent.v_J.size()
 * 
 * cdef class _Model_c_J_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1081
 *         return self.parent.c_J.size()
 * 
 * cdef class _Model_X_T_SpatialTransform_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1109
 *         return self.parent.X_T.size()
 * 
 * cdef class _Model_c_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1137
 *         return self.parent.c.size()
 * 
 * cdef class _Model_IA_SpatialMatrix_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1165
 *         return self.parent.IA.size()
 * 
 * cdef class _Model_pA_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1193
 *         return self.parent.pA.size()
 * 
 * cdef class _Model_U_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1221
 *         return self.parent.U.size()
 * 
 * cdef class _Model_f_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1249
 *         return self.parent.f.size()
 * 
 * cdef class _Model_I_SpatialRigidBodyInertia_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1277
 *         return self.parent.I.size()
 * 
 * cdef class _Model_Ic_SpatialRigidBodyInertia_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1305
 *         return self.parent.Ic.size()
 * 
 * cdef class _Model_hc_SpatialVector_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1333
 *         return self.parent.hc.size()
 * 
 * cdef class _Model_X_lambda_SpatialTransform_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1361
 *         return self.parent.X_lambda.size()
 * 
 * cdef class _Model_X_base_SpatialTransform_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1389
 *         return self.parent.X_base.size()
 * 
 * cdef class _Model_mFixedBodies_FixedBody_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":1417
 *         return self.parent.mFixedBodies.size()
 * 
 * cdef class _Model_mBodies_Body_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.Model *parent
 * 
 */
struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::Model *parent;
};


/* "rbdl.pyx":883
 *             self.thisptr.mJointAxes[index][i]
 * 
 * cdef class Model             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_v_SpatialVector_VectorWrapper:
 */
struct __pyx_obj_4rbdl_Model {
  PyObject_HEAD
  RigidBodyDynamics::Model *thisptr;
  struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *v;
  struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *a;
  struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *mJoints;
  struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *S;
  struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *X_J;
  struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *v_J;
  struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *c_J;
  struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *X_T;
  struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *c;
  struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *IA;
  struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *pA;
  struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *U;
  struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *f;
  struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *I;
  struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *Ic;
  struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *hc;
  struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *X_lambda;
  struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *X_base;
  struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *mFixedBodies;
  struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *mBodies;
};


/* "rbdl.pyx":1709
 * cdef class ConstraintSet
 * 
 * cdef class _ConstraintSet_point_Vector3d_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.ConstraintSet *parent
 * 
 */
struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::ConstraintSet *parent;
};


/* "rbdl.pyx":1737
 *         return self.parent.point.size()
 * 
 * cdef class _ConstraintSet_normal_Vector3d_VectorWrapper:             # <<<<<<<<<<<<<<
 *     cdef crbdl.ConstraintSet *parent
 * 
 */
struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper {
  PyObject_HEAD
  RigidBodyDynamics::ConstraintSet *parent;
};


/* "rbdl.pyx":1707
 * ##############################
 * 
 * cdef class ConstraintSet             # <<<<<<<<<<<<<<
 * 
 * cdef class _ConstraintSet_point_Vector3d_VectorWrapper:
 */
struct __pyx_obj_4rbdl_ConstraintSet {
  PyObject_HEAD
  RigidBodyDynamics::ConstraintSet *thisptr;
  struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *point;
  struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *normal;
};


/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* SetItemInt.proto */
#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

#define __Pyx_BufPtrCContig1d(type, buf, i0, s0) ((type)buf + i0)
/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

#define __Pyx_BufPtrCContig2d(type, buf, i0, s0, i1, s1) ((type)((char*)buf + i0 * s0) + i1)
/* KeywordStringCheck.proto */
static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* py_dict_keys.proto */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod0.proto */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CallUnboundCMethod0(cfunc, self)\
    ((likely((cfunc)->func)) ?\
        (likely((cfunc)->flag == METH_NOARGS) ?  (*((cfunc)->func))(self, NULL) :\
         (likely((cfunc)->flag == (METH_VARARGS | METH_KEYWORDS)) ?  ((*(PyCFunctionWithKeywords)(cfunc)->func)(self, __pyx_empty_tuple, NULL)) :\
             ((cfunc)->flag == METH_VARARGS ?  (*((cfunc)->func))(self, __pyx_empty_tuple) :\
              (PY_VERSION_HEX >= 0x030600B1 && (cfunc)->flag == METH_FASTCALL ?\
                (PY_VERSION_HEX >= 0x030700A0 ?\
                    (*(__Pyx_PyCFunctionFast)(cfunc)->func)(self, &PyTuple_GET_ITEM(__pyx_empty_tuple, 0), 0) :\
                    (*(__Pyx_PyCFunctionFastWithKeywords)(cfunc)->func)(self, &PyTuple_GET_ITEM(__pyx_empty_tuple, 0), 0, NULL)) :\
              (PY_VERSION_HEX >= 0x030700A0 && (cfunc)->flag == (METH_FASTCALL | METH_KEYWORDS) ?\
                    (*(__Pyx_PyCFunctionFastWithKeywords)(cfunc)->func)(self, &PyTuple_GET_ITEM(__pyx_empty_tuple, 0), 0, NULL) :\
                    __Pyx__CallUnboundCMethod0(cfunc, self)))))) :\
        __Pyx__CallUnboundCMethod0(cfunc, self))
#else
#define __Pyx_CallUnboundCMethod0(cfunc, self)  __Pyx__CallUnboundCMethod0(cfunc, self)
#endif

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** value1, PyObject** value2,
                                             int is_tuple, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_EqObjC(op1, op2, intval, inplace)\
    PyObject_RichCompare(op1, op2, Py_EQ)
    #endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* GetNameInClass.proto */
static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

/* ClassMethod.proto */
#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* CLineInTraceback.proto */
static int __Pyx_CLineForTraceback(int c_line);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* None.proto */
static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};
static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(enum __pyx_t_4rbdl_JointType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__RigidBodyDynamics_3a__3a_JointType(enum RigidBodyDynamics::JointType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);

/* Print.proto */
static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE Py_intptr_t __Pyx_PyInt_As_Py_intptr_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE enum RigidBodyDynamics::JointType __Pyx_PyInt_As_enum__RigidBodyDynamics_3a__3a_JointType(PyObject *);

/* PrintOne.proto */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'crbdl' */

/* Module declarations from 'rbdl' */
static PyTypeObject *__pyx_ptype_4rbdl_Vector3d = 0;
static PyTypeObject *__pyx_ptype_4rbdl_Matrix3d = 0;
static PyTypeObject *__pyx_ptype_4rbdl_VectorNd = 0;
static PyTypeObject *__pyx_ptype_4rbdl_Quaternion = 0;
static PyTypeObject *__pyx_ptype_4rbdl_SpatialVector = 0;
static PyTypeObject *__pyx_ptype_4rbdl_SpatialMatrix = 0;
static PyTypeObject *__pyx_ptype_4rbdl_SpatialTransform = 0;
static PyTypeObject *__pyx_ptype_4rbdl_SpatialRigidBodyInertia = 0;
static PyTypeObject *__pyx_ptype_4rbdl_Body = 0;
static PyTypeObject *__pyx_ptype_4rbdl_FixedBody = 0;
static PyTypeObject *__pyx_ptype_4rbdl_Joint = 0;
static PyTypeObject *__pyx_ptype_4rbdl_Model = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_v_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_a_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_mJoints_Joint_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_S_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_X_J_SpatialTransform_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_v_J_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_c_J_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_X_T_SpatialTransform_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_c_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_IA_SpatialMatrix_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_pA_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_U_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_f_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_hc_SpatialVector_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_X_base_SpatialTransform_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__Model_mBodies_Body_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl_ConstraintSet = 0;
static PyTypeObject *__pyx_ptype_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper = 0;
static PyTypeObject *__pyx_ptype_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper = 0;
static RigidBodyDynamics::Math::Vector3d __pyx_f_4rbdl_NumpyToVector3d(PyArrayObject *); /*proto*/
static PyArrayObject *__pyx_f_4rbdl_Vector3dToNumpy(RigidBodyDynamics::Math::Vector3d); /*proto*/
static PyArrayObject *__pyx_f_4rbdl_Matrix3dToNumpy(RigidBodyDynamics::Math::Matrix3d); /*proto*/
static RigidBodyDynamics::Math::VectorNd __pyx_f_4rbdl_NumpyToVectorNd(PyArrayObject *); /*proto*/
static PyArrayObject *__pyx_f_4rbdl_VectorNdToNumpy(RigidBodyDynamics::Math::VectorNd); /*proto*/
static PyArrayObject *__pyx_f_4rbdl_SpatialVectorToNumpy(RigidBodyDynamics::Math::SpatialVector); /*proto*/
static PyArrayObject *__pyx_f_4rbdl_QuaternionToNumpy(RigidBodyDynamics::Math::Quaternion); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_unsigned_int(const std::vector<unsigned int>  &); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
#define __Pyx_MODULE_NAME "rbdl"
int __pyx_module_is_main_rbdl = 0;

/* Implementation of 'rbdl' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_G[] = "G";
static const char __pyx_k_H[] = "H";
static const char __pyx_k_q[] = "q";
static const char __pyx_k_CS[] = "CS";
static const char __pyx_k_np[] = "np";
static const char __pyx_k__31[] = "'!";
static const char __pyx_k__34[] = ".";
static const char __pyx_k__94[] = "";
static const char __pyx_k_com[] = "com";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_ptr[] = "ptr";
static const char __pyx_k_tau[] = "tau";
static const char __pyx_k_zmp[] = "zmp";
static const char __pyx_k_axis[] = "axis";
static const char __pyx_k_body[] = "body";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mass[] = "mass";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_ndim[] = "ndim";
static const char __pyx_k_qdot[] = "qdot";
static const char __pyx_k_quat[] = "quat";
static const char __pyx_k_rbdl[] = "rbdl";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_c_com[] = "c_com";
static const char __pyx_k_cmass[] = "cmass";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_joint[] = "joint";
static const char __pyx_k_model[] = "model";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_point[] = "point";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_qddot[] = "qddot";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_normal[] = "normal";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_result[] = "result";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_xrange[] = "xrange";
static const char __pyx_k_address[] = "address";
static const char __pyx_k_body_id[] = "body_id";
static const char __pyx_k_c_point[] = "c_point";
static const char __pyx_k_indices[] = "indices";
static const char __pyx_k_inertia[] = "inertia";
static const char __pyx_k_verbose[] = "verbose";
static const char __pyx_k_c_normal[] = "c_normal";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_pyvalues[] = "pyvalues";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_body_name[] = "body_name";
static const char __pyx_k_c_zmp_ptr[] = "c_zmp_ptr";
static const char __pyx_k_iteritems[] = "iteritems";
static const char __pyx_k_loadModel[] = "loadModel";
static const char __pyx_k_parent_id[] = "parent_id";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_body_point[] = "body_point";
static const char __pyx_k_joint_type[] = "joint_type";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_X_successor[] = "X_successor";
static const char __pyx_k_fromPointer[] = "fromPointer";
static const char __pyx_k_joint_frame[] = "joint_frame";
static const char __pyx_k_pymatvalues[] = "pymatvalues";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_com_velocity[] = "com_velocity";
static const char __pyx_k_id_successor[] = "id_successor";
static const char __pyx_k_setJointAxis[] = "setJointAxis";
static const char __pyx_k_world_normal[] = "world_normal";
static const char __pyx_k_JointType1DoF[] = "JointType1DoF";
static const char __pyx_k_JointType2DoF[] = "JointType2DoF";
static const char __pyx_k_JointType3DoF[] = "JointType3DoF";
static const char __pyx_k_JointType4DoF[] = "JointType4DoF";
static const char __pyx_k_JointType5DoF[] = "JointType5DoF";
static const char __pyx_k_JointType6DoF[] = "JointType6DoF";
static const char __pyx_k_X_predecessor[] = "X_predecessor";
static const char __pyx_k_c_com_vel_ptr[] = "c_com_vel_ptr";
static const char __pyx_k_floating_base[] = "floating_base";
static const char __pyx_k_fromJointAxes[] = "fromJointAxes";
static const char __pyx_k_fromJointType[] = "fromJointType";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_JointTypeFixed[] = "JointTypeFixed";
static const char __pyx_k_id_predecessor[] = "id_predecessor";
static const char __pyx_k_joint_type_map[] = "joint_type_map";
static const char __pyx_k_qddot_vectornd[] = "qddot_vectornd";
static const char __pyx_k_ForwardDynamics[] = "ForwardDynamics";
static const char __pyx_k_InverseDynamics[] = "InverseDynamics";
static const char __pyx_k_JointTypeCustom[] = "JointTypeCustom";
static const char __pyx_k_c_com_accel_ptr[] = "c_com_accel_ptr";
static const char __pyx_k_constraint_name[] = "constraint_name";
static const char __pyx_k_fromPythonArray[] = "fromPythonArray";
static const char __pyx_k_rbdl_Body_0x_0x[] = "rbdl.Body (0x{:0x})";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_CalcCenterOfMass[] = "CalcCenterOfMass";
static const char __pyx_k_JointTypeHelical[] = "JointTypeHelical";
static const char __pyx_k_NonlinearEffects[] = "NonlinearEffects";
static const char __pyx_k_UpdateKinematics[] = "UpdateKinematics";
static const char __pyx_k_angular_momentum[] = "angular_momentum";
static const char __pyx_k_com_acceleration[] = "com_acceleration";
static const char __pyx_k_fromPythonMatrix[] = "fromPythonMatrix";
static const char __pyx_k_rbdl_Model_0x_0x[] = "rbdl.Model (0x{:0x})";
static const char __pyx_k_CalcPointJacobian[] = "CalcPointJacobian";
static const char __pyx_k_CalcPointVelocity[] = "CalcPointVelocity";
static const char __pyx_k_Invalid_JointType[] = "Invalid JointType '";
static const char __pyx_k_JointTypeEulerXYZ[] = "JointTypeEulerXYZ";
static const char __pyx_k_JointTypeEulerYXZ[] = "JointTypeEulerYXZ";
static const char __pyx_k_JointTypeEulerZYX[] = "JointTypeEulerZYX";
static const char __pyx_k_JointTypeRevolute[] = "JointTypeRevolute";
static const char __pyx_k_update_kinematics[] = "update_kinematics";
static const char __pyx_k_JointTypePrismatic[] = "JointTypePrismatic";
static const char __pyx_k_JointTypeRevoluteX[] = "JointTypeRevoluteX";
static const char __pyx_k_JointTypeRevoluteY[] = "JointTypeRevoluteY";
static const char __pyx_k_JointTypeRevoluteZ[] = "JointTypeRevoluteZ";
static const char __pyx_k_JointTypeSpherical[] = "JointTypeSpherical";
static const char __pyx_k_JointTypeUndefined[] = "JointTypeUndefined";
static const char __pyx_k_c_ang_momentum_ptr[] = "c_ang_momentum_ptr";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_fromMassComInertia[] = "fromMassComInertia";
static const char __pyx_k_CalcPointJacobian6D[] = "CalcPointJacobian6D";
static const char __pyx_k_CalcPointVelocity6D[] = "CalcPointVelocity6D";
static const char __pyx_k_CalcZeroMomentPoint[] = "CalcZeroMomentPoint";
static const char __pyx_k_Error_loading_model[] = "Error loading model {}!";
static const char __pyx_k_body_point_position[] = "body_point_position";
static const char __pyx_k_joint_type_from_str[] = "_joint_type_from_str";
static const char __pyx_k_normal_acceleration[] = "normal_acceleration";
static const char __pyx_k_stabilization_param[] = "stabilization_param";
static const char __pyx_k_enable_stabilization[] = "enable_stabilization";
static const char __pyx_k_rbdl_FixedBody_0x_0x[] = "rbdl.FixedBody (0x{:0x})";
static const char __pyx_k_CalcPointAcceleration[] = "CalcPointAcceleration";
static const char __pyx_k_JointTypeFloatingBase[] = "JointTypeFloatingBase";
static const char __pyx_k_CalcBodySpatialJacobian[] = "CalcBodySpatialJacobian";
static const char __pyx_k_CalcPointAcceleration6D[] = "CalcPointAcceleration6D";
static const char __pyx_k_JointTypeTranslationXYZ[] = "JointTypeTranslationXYZ";
static const char __pyx_k_Matrix3d_3_4f_3_4f_3_4f[] = "Matrix3d [{:3.4f}, {:3.4f}, {:3.4f}]";
static const char __pyx_k_Vector3d_3_4f_3_4f_3_4f[] = "Vector3d [{:3.4f}, {:3.4f}, {:3.4f}]";
static const char __pyx_k_CalcBodyWorldOrientation[] = "CalcBodyWorldOrientation";
static const char __pyx_k_Invalid_joint_axis_index[] = "Invalid joint axis index!";
static const char __pyx_k_rbdl_ConstraintSet_0x_0x[] = "rbdl.ConstraintSet (0x{:0x})";
static const char __pyx_k_CalcBaseToBodyCoordinates[] = "CalcBaseToBodyCoordinates";
static const char __pyx_k_CalcBodyToBaseCoordinates[] = "CalcBodyToBaseCoordinates";
static const char __pyx_k_change_of_angular_momentum[] = "change_of_angular_momentum";
static const char __pyx_k_CompositeRigidBodyAlgorithm[] = "CompositeRigidBodyAlgorithm";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_c_change_of_ang_momentum_ptr[] = "c_change_of_ang_momentum_ptr";
static const char __pyx_k_rbdl_Joint_0x_0x_JointType_s[] = "rbdl.Joint (0x{:0x}), JointType: {:s}";
static const char __pyx_k_Quaternion_3_4f_3_4f_3_4f_3_4[] = "Quaternion [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4}]";
static const char __pyx_k_Invalid_type_Expected_FixedBody[] = "Invalid type! Expected FixedBody, but got ";
static const char __pyx_k_Invalid_type_Expected_Joint_but[] = "Invalid type! Expected Joint, but got ";
static const char __pyx_k_home_utec_ros_ws_src_rbdl_pytho[] = "/home/utec/ros_ws/src/rbdl/python/rbdl.pyx";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_rbdl_SpatialRigidBodyInertia_0x[] = "rbdl.SpatialRigidBodyInertia (0x{:0x})";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_ForwardDynamicsConstraintsDirect[] = "ForwardDynamicsConstraintsDirect";
static const char __pyx_k_Invalid_type_Expected_Body_but_g[] = "Invalid type! Expected Body, but got ";
static const char __pyx_k_Invalid_type_Expected_SpatialMat[] = "Invalid type! Expected SpatialMatrix, but got ";
static const char __pyx_k_Invalid_type_Expected_SpatialRig[] = "Invalid type! Expected SpatialRigidBodyInertia, but got ";
static const char __pyx_k_Invalid_type_Expected_SpatialTra[] = "Invalid type! Expected SpatialTransform, but got ";
static const char __pyx_k_Invalid_type_Expected_SpatialVec[] = "Invalid type! Expected SpatialVector, but got ";
static const char __pyx_k_Invalid_type_Expected_Vector3d_b[] = "Invalid type! Expected Vector3d, but got ";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_Parameter_com_for_call_to_CalcCe[] = "Parameter com for call to CalcCenterOfMass() is not provided (value is 'None').";
static const char __pyx_k_SpatialMatrix_3_4f_3_4f_3_4f_3_4[] = "SpatialMatrix [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]";
static const char __pyx_k_SpatialTransform_E_3_4f_3_4f_3_4[] = "SpatialTransform E = [ [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}] ], r = [{:3.4f}, {:3.4f}, {:3.4f}]";
static const char __pyx_k_SpatialVector_3_4f_3_4f_3_4f_3_4[] = "SpatialVector [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_n_s_CS;
static PyObject *__pyx_n_s_CalcBaseToBodyCoordinates;
static PyObject *__pyx_n_s_CalcBodySpatialJacobian;
static PyObject *__pyx_n_s_CalcBodyToBaseCoordinates;
static PyObject *__pyx_n_s_CalcBodyWorldOrientation;
static PyObject *__pyx_n_s_CalcCenterOfMass;
static PyObject *__pyx_n_s_CalcPointAcceleration;
static PyObject *__pyx_n_s_CalcPointAcceleration6D;
static PyObject *__pyx_n_s_CalcPointJacobian;
static PyObject *__pyx_n_s_CalcPointJacobian6D;
static PyObject *__pyx_n_s_CalcPointVelocity;
static PyObject *__pyx_n_s_CalcPointVelocity6D;
static PyObject *__pyx_n_s_CalcZeroMomentPoint;
static PyObject *__pyx_n_s_CompositeRigidBodyAlgorithm;
static PyObject *__pyx_kp_s_Error_loading_model;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_ForwardDynamics;
static PyObject *__pyx_n_s_ForwardDynamicsConstraintsDirect;
static PyObject *__pyx_n_s_G;
static PyObject *__pyx_n_s_H;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_s_Invalid_JointType;
static PyObject *__pyx_kp_s_Invalid_joint_axis_index;
static PyObject *__pyx_kp_s_Invalid_type_Expected_Body_but_g;
static PyObject *__pyx_kp_s_Invalid_type_Expected_FixedBody;
static PyObject *__pyx_kp_s_Invalid_type_Expected_Joint_but;
static PyObject *__pyx_kp_s_Invalid_type_Expected_SpatialMat;
static PyObject *__pyx_kp_s_Invalid_type_Expected_SpatialRig;
static PyObject *__pyx_kp_s_Invalid_type_Expected_SpatialTra;
static PyObject *__pyx_kp_s_Invalid_type_Expected_SpatialVec;
static PyObject *__pyx_kp_s_Invalid_type_Expected_Vector3d_b;
static PyObject *__pyx_n_s_InverseDynamics;
static PyObject *__pyx_n_s_JointType1DoF;
static PyObject *__pyx_n_s_JointType2DoF;
static PyObject *__pyx_n_s_JointType3DoF;
static PyObject *__pyx_n_s_JointType4DoF;
static PyObject *__pyx_n_s_JointType5DoF;
static PyObject *__pyx_n_s_JointType6DoF;
static PyObject *__pyx_n_s_JointTypeCustom;
static PyObject *__pyx_n_s_JointTypeEulerXYZ;
static PyObject *__pyx_n_s_JointTypeEulerYXZ;
static PyObject *__pyx_n_s_JointTypeEulerZYX;
static PyObject *__pyx_n_s_JointTypeFixed;
static PyObject *__pyx_n_s_JointTypeFloatingBase;
static PyObject *__pyx_n_s_JointTypeHelical;
static PyObject *__pyx_n_s_JointTypePrismatic;
static PyObject *__pyx_n_s_JointTypeRevolute;
static PyObject *__pyx_n_s_JointTypeRevoluteX;
static PyObject *__pyx_n_s_JointTypeRevoluteY;
static PyObject *__pyx_n_s_JointTypeRevoluteZ;
static PyObject *__pyx_n_s_JointTypeSpherical;
static PyObject *__pyx_n_s_JointTypeTranslationXYZ;
static PyObject *__pyx_n_s_JointTypeUndefined;
static PyObject *__pyx_kp_s_Matrix3d_3_4f_3_4f_3_4f;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_NonlinearEffects;
static PyObject *__pyx_kp_s_Parameter_com_for_call_to_CalcCe;
static PyObject *__pyx_kp_s_Quaternion_3_4f_3_4f_3_4f_3_4;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_kp_s_SpatialMatrix_3_4f_3_4f_3_4f_3_4;
static PyObject *__pyx_kp_s_SpatialTransform_E_3_4f_3_4f_3_4;
static PyObject *__pyx_kp_s_SpatialVector_3_4f_3_4f_3_4f_3_4;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_UpdateKinematics;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_s_Vector3d_3_4f_3_4f_3_4f;
static PyObject *__pyx_n_s_X_predecessor;
static PyObject *__pyx_n_s_X_successor;
static PyObject *__pyx_kp_s__31;
static PyObject *__pyx_kp_s__34;
static PyObject *__pyx_kp_b__94;
static PyObject *__pyx_n_s_address;
static PyObject *__pyx_n_s_angular_momentum;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_axis;
static PyObject *__pyx_n_s_body;
static PyObject *__pyx_n_s_body_id;
static PyObject *__pyx_n_s_body_name;
static PyObject *__pyx_n_s_body_point;
static PyObject *__pyx_n_s_body_point_position;
static PyObject *__pyx_n_s_c_ang_momentum_ptr;
static PyObject *__pyx_n_s_c_change_of_ang_momentum_ptr;
static PyObject *__pyx_n_s_c_com;
static PyObject *__pyx_n_s_c_com_accel_ptr;
static PyObject *__pyx_n_s_c_com_vel_ptr;
static PyObject *__pyx_n_s_c_normal;
static PyObject *__pyx_n_s_c_point;
static PyObject *__pyx_n_s_c_zmp_ptr;
static PyObject *__pyx_n_s_change_of_angular_momentum;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_cmass;
static PyObject *__pyx_n_s_com;
static PyObject *__pyx_n_s_com_acceleration;
static PyObject *__pyx_n_s_com_velocity;
static PyObject *__pyx_n_s_constraint_name;
static PyObject *__pyx_n_s_enable_stabilization;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_filename;
static PyObject *__pyx_n_s_floating_base;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_fromJointAxes;
static PyObject *__pyx_n_s_fromJointType;
static PyObject *__pyx_n_s_fromMassComInertia;
static PyObject *__pyx_n_s_fromPointer;
static PyObject *__pyx_n_s_fromPythonArray;
static PyObject *__pyx_n_s_fromPythonMatrix;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho;
static PyObject *__pyx_n_s_id_predecessor;
static PyObject *__pyx_n_s_id_successor;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_indices;
static PyObject *__pyx_n_s_inertia;
static PyObject *__pyx_n_s_iteritems;
static PyObject *__pyx_n_s_joint;
static PyObject *__pyx_n_s_joint_frame;
static PyObject *__pyx_n_s_joint_type;
static PyObject *__pyx_n_s_joint_type_from_str;
static PyObject *__pyx_n_s_joint_type_map;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_kwargs;
static PyObject *__pyx_n_s_loadModel;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mass;
static PyObject *__pyx_n_s_model;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_ndim;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_s_normal;
static PyObject *__pyx_n_s_normal_acceleration;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_parent_id;
static PyObject *__pyx_n_s_point;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_ptr;
static PyObject *__pyx_n_s_pymatvalues;
static PyObject *__pyx_n_s_pyvalues;
static PyObject *__pyx_n_s_q;
static PyObject *__pyx_n_s_qddot;
static PyObject *__pyx_n_s_qddot_vectornd;
static PyObject *__pyx_n_s_qdot;
static PyObject *__pyx_n_s_quat;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rbdl;
static PyObject *__pyx_kp_s_rbdl_Body_0x_0x;
static PyObject *__pyx_kp_s_rbdl_ConstraintSet_0x_0x;
static PyObject *__pyx_kp_s_rbdl_FixedBody_0x_0x;
static PyObject *__pyx_kp_s_rbdl_Joint_0x_0x_JointType_s;
static PyObject *__pyx_kp_s_rbdl_Model_0x_0x;
static PyObject *__pyx_kp_s_rbdl_SpatialRigidBodyInertia_0x;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_result;
static PyObject *__pyx_n_s_setJointAxis;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_stabilization_param;
static PyObject *__pyx_n_s_tau;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_update_kinematics;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_verbose;
static PyObject *__pyx_n_s_world_normal;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_n_s_zmp;
static int __pyx_pf_4rbdl_8Vector3d___cinit__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues); /* proto */
static void __pyx_pf_4rbdl_8Vector3d_2__dealloc__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Vector3d_4__repr__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Vector3d_6__getitem__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_8Vector3d_8__setitem__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_8Vector3d_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Vector3d_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_8Vector3d_14fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /* proto */
static PyObject *__pyx_pf_4rbdl_8Vector3d_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Vector3d_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_8Matrix3d___cinit__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues); /* proto */
static void __pyx_pf_4rbdl_8Matrix3d_2__dealloc__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Matrix3d_4__repr__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Matrix3d_6__getitem__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_8Matrix3d_8__setitem__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_8Matrix3d_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Matrix3d_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_8Matrix3d_14fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /* proto */
static PyObject *__pyx_pf_4rbdl_8Matrix3d_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8Matrix3d_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_8VectorNd___cinit__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, PyObject *__pyx_v_ndim, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues); /* proto */
static void __pyx_pf_4rbdl_8VectorNd_2__dealloc__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8VectorNd_4__getitem__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_8VectorNd_6__setitem__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_8VectorNd_8__len__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8VectorNd_10toNumpy(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8VectorNd_12fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /* proto */
static PyObject *__pyx_pf_4rbdl_8VectorNd_14fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_8VectorNd_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_8VectorNd_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_10Quaternion___cinit__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues, PyObject *__pyx_v_pymatvalues); /* proto */
static void __pyx_pf_4rbdl_10Quaternion_2__dealloc__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_4__repr__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_6__getitem__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_10Quaternion_8__setitem__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_10Quaternion_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_12toMatrix(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_14toNumpy(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_16fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_18fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_20fromPythonMatrix(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_matrix_values); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_10Quaternion_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_13SpatialVector___cinit__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues); /* proto */
static void __pyx_pf_4rbdl_13SpatialVector_2__dealloc__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialVector_4__repr__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialVector_6__getitem__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_13SpatialVector_8__setitem__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_13SpatialVector_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialVector_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialVector_14fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialVector_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialVector_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_13SpatialMatrix___cinit__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, uintptr_t __pyx_v_address); /* proto */
static void __pyx_pf_4rbdl_13SpatialMatrix_2__dealloc__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_4__repr__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_6__getitem__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_13SpatialMatrix_8__setitem__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_13SpatialMatrix_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_14__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_16__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_16SpatialTransform___cinit__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, uintptr_t __pyx_v_address); /* proto */
static void __pyx_pf_4rbdl_16SpatialTransform_2__dealloc__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_16SpatialTransform_4__repr__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_16SpatialTransform_1E___get__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_16SpatialTransform_1E_2__set__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_16SpatialTransform_1r___get__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_16SpatialTransform_1r_2__set__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_16SpatialTransform_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_16SpatialTransform_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_16SpatialTransform_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia___cinit__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, uintptr_t __pyx_v_address); /* proto */
static void __pyx_pf_4rbdl_23SpatialRigidBodyInertia_2__dealloc__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_4__repr__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_1m___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1m_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_1h___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1h_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Ixx___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Ixx_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyx___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyx_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyy___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyy_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izx___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izx_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izy___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izy_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izz___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izz_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_4Body___cinit__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_kwargs); /* proto */
static void __pyx_pf_4rbdl_4Body_2__dealloc__(struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_4__repr__(struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_8fromMassComInertia(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, double __pyx_v_mass, PyArrayObject *__pyx_v_com, PyArrayObject *__pyx_v_inertia); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_5mMass___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_4Body_5mMass_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_13mCenterOfMass___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_4Body_13mCenterOfMass_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_8mInertia___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_4Body_8mInertia_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_10mIsVirtual___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_4Body_10mIsVirtual_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Body *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_4Body_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Body *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_9FixedBody___cinit__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, uintptr_t __pyx_v_address); /* proto */
static void __pyx_pf_4rbdl_9FixedBody_2__dealloc__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_4__repr__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_5mMass___get__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_9FixedBody_5mMass_2__set__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_13mCenterOfMass___get__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_9FixedBody_13mCenterOfMass_2__set__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_8mInertia___get__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_9FixedBody_8mInertia_2__set__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_9FixedBody_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint__joint_type_from_str(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_joint_type_str); /* proto */
static int __pyx_pf_4rbdl_5Joint_2__cinit__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_joint_type); /* proto */
static void __pyx_pf_4rbdl_5Joint_4__dealloc__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_6__repr__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_8fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_10fromJointType(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_joint_type); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_12fromJointAxes(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_axes); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_9mDoFCount___get__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_5Joint_9mDoFCount_2__set__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_10mJointType___get__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_7q_index___get__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_14getJointAxis(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_16setJointAxis(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Joint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Joint_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Joint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_5Model___cinit__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static void __pyx_pf_4rbdl_5Model_2__dealloc__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_4__repr__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_6AddBody(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_parent_id, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_joint_frame, struct __pyx_obj_4rbdl_Joint *__pyx_v_joint, struct __pyx_obj_4rbdl_Body *__pyx_v_body, std::string __pyx_v_body_name); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_8AppendBody(struct __pyx_obj_4rbdl_Model *__pyx_v_self, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_joint_frame, struct __pyx_obj_4rbdl_Joint *__pyx_v_joint, struct __pyx_obj_4rbdl_Body *__pyx_v_body, std::string __pyx_v_body_name); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_10SetQuaternion(struct __pyx_obj_4rbdl_Model *__pyx_v_self, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_quat, PyArrayObject *__pyx_v_q); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_12GetQuaternion(struct __pyx_obj_4rbdl_Model *__pyx_v_self, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_q); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_14GetBody(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_16GetParentBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_18GetBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_20GetBodyName(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_22IsBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_24IsFixedBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_9dof_count___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_6q_size___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_9qdot_size___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_24previously_added_body_id___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_7gravity___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static int __pyx_pf_4rbdl_5Model_7gravity_2__set__(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1v___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1a___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_7mJoints___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1S___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_3X_J___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_3v_J___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_3c_J___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_17mJointUpdateOrder___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_3X_T___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_16mFixedJointCount___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_16multdof3_w_index___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1c___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_2IA___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_2pA___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1U___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1f___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_1I___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_2Ic___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_2hc___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_8X_lambda___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_6X_base___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_12mFixedBodies___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_24fixed_body_discriminator___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_7mBodies___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_26__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_5Model_28__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Model *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr); /* proto */
static PyObject *__pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static Py_ssize_t __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4rbdl_13ConstraintSet___cinit__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static void __pyx_pf_4rbdl_13ConstraintSet_2__dealloc__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_4__repr__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_6AddContactConstraint(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, PyObject *__pyx_v_body_id, PyObject *__pyx_v_body_point, PyObject *__pyx_v_world_normal, PyObject *__pyx_v_constraint_name, PyObject *__pyx_v_normal_acceleration); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_8AddLoopConstraint(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, PyObject *__pyx_v_id_predecessor, PyObject *__pyx_v_id_successor, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_X_predecessor, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_X_successor, struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_axis, PyObject *__pyx_v_enable_stabilization, PyObject *__pyx_v_stabilization_param, PyObject *__pyx_v_constraint_name); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_10Bind(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, PyObject *__pyx_v_model); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_12size(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_14clear(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_5bound___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_5point___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_6normal___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_5force___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4rbdl_13ConstraintSet_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_4rbdl_UpdateKinematics(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot); /* proto */
static PyObject *__pyx_pf_4rbdl_2CalcBodyToBaseCoordinates(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_4CalcBaseToBodyCoordinates(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_6CalcBodyWorldOrientation(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_8CalcPointVelocity(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_10CalcPointAcceleration(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_12CalcPointVelocity6D(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_14CalcPointAcceleration6D(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_16CalcPointJacobian(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyArrayObject *__pyx_v_G, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_18CalcPointJacobian6D(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyArrayObject *__pyx_v_G, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_20CalcBodySpatialJacobian(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, CYTHON_UNUSED PyArrayObject *__pyx_v_body_point_position, PyArrayObject *__pyx_v_G, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_22CalcCenterOfMass(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, PyArrayObject *__pyx_v_com, PyArrayObject *__pyx_v_com_velocity, PyArrayObject *__pyx_v_com_acceleration, PyArrayObject *__pyx_v_angular_momentum, PyArrayObject *__pyx_v_change_of_angular_momentum, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_24CalcZeroMomentPoint(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, PyArrayObject *__pyx_v_zmp, PyArrayObject *__pyx_v_normal, PyArrayObject *__pyx_v_point, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_26InverseDynamics(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, PyArrayObject *__pyx_v_tau); /* proto */
static PyObject *__pyx_pf_4rbdl_28NonlinearEffects(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_tau); /* proto */
static PyObject *__pyx_pf_4rbdl_30CompositeRigidBodyAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_H, PyObject *__pyx_v_update_kinematics); /* proto */
static PyObject *__pyx_pf_4rbdl_32ForwardDynamics(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_tau, PyArrayObject *__pyx_v_qddot); /* proto */
static PyObject *__pyx_pf_4rbdl_34ForwardDynamicsConstraintsDirect(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_tau, struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_CS, PyArrayObject *__pyx_v_qddot); /* proto */
static PyObject *__pyx_pf_4rbdl_36loadModel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_4rbdl_Vector3d(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_Matrix3d(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_VectorNd(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_Quaternion(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_SpatialVector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_SpatialMatrix(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_SpatialTransform(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_SpatialRigidBodyInertia(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_Body(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_FixedBody(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_Joint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_Model(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_v_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_a_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_mJoints_Joint_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_S_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_X_J_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_v_J_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_c_J_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_X_T_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_c_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_IA_SpatialMatrix_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_pA_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_U_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_f_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_hc_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_X_base_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__Model_mBodies_Body_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl_ConstraintSet(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_keys = {0, &__pyx_n_s_keys, 0, 0, 0};
static PyObject *__pyx_float_0_;
static PyObject *__pyx_float_0_1;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_neg_1;
static std::string __pyx_k__75;
static std::string __pyx_k__76;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__55;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__67;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__73;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__87;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__89;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_tuple__99;
static PyObject *__pyx_tuple__101;
static PyObject *__pyx_tuple__103;
static PyObject *__pyx_tuple__105;
static PyObject *__pyx_tuple__107;
static PyObject *__pyx_tuple__109;
static PyObject *__pyx_tuple__111;
static PyObject *__pyx_tuple__113;
static PyObject *__pyx_tuple__115;
static PyObject *__pyx_tuple__117;
static PyObject *__pyx_tuple__119;
static PyObject *__pyx_tuple__121;
static PyObject *__pyx_tuple__123;
static PyObject *__pyx_tuple__125;
static PyObject *__pyx_tuple__127;
static PyObject *__pyx_tuple__129;
static PyObject *__pyx_tuple__131;
static PyObject *__pyx_codeobj__96;
static PyObject *__pyx_codeobj__98;
static PyObject *__pyx_codeobj__100;
static PyObject *__pyx_codeobj__102;
static PyObject *__pyx_codeobj__104;
static PyObject *__pyx_codeobj__106;
static PyObject *__pyx_codeobj__108;
static PyObject *__pyx_codeobj__110;
static PyObject *__pyx_codeobj__112;
static PyObject *__pyx_codeobj__114;
static PyObject *__pyx_codeobj__116;
static PyObject *__pyx_codeobj__118;
static PyObject *__pyx_codeobj__120;
static PyObject *__pyx_codeobj__122;
static PyObject *__pyx_codeobj__124;
static PyObject *__pyx_codeobj__126;
static PyObject *__pyx_codeobj__128;
static PyObject *__pyx_codeobj__130;
static PyObject *__pyx_codeobj__132;

/* "rbdl.pyx":25
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_8Vector3d_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_8Vector3d_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_pyvalues = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,&__pyx_n_s_pyvalues,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyvalues);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 25, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 25, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
    __pyx_v_pyvalues = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 25, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Vector3d.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_8Vector3d___cinit__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self), __pyx_v_address, __pyx_v_pyvalues);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_8Vector3d___cinit__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":26
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Vector3d()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":27
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.Vector3d()
 * 
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":28
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *             if pyvalues is not None:
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::Vector3d();

    /* "rbdl.pyx":30
 *             self.thisptr = new crbdl.Vector3d()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (3):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    __pyx_t_1 = (__pyx_v_pyvalues != Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "rbdl.pyx":31
 * 
 *             if pyvalues is not None:
 *                 for i in range (3):             # <<<<<<<<<<<<<<
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 */
      for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
        __pyx_v_i = __pyx_t_3;

        /* "rbdl.pyx":32
 *             if pyvalues is not None:
 *                 for i in range (3):
 *                     self.thisptr.data()[i] = pyvalues[i]             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_pyvalues, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 32, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        (__pyx_v_self->thisptr->data()[__pyx_v_i]) = __pyx_t_5;
      }

      /* "rbdl.pyx":30
 *             self.thisptr = new crbdl.Vector3d()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (3):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    }

    /* "rbdl.pyx":26
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Vector3d()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":34
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.Vector3d*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":35
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.Vector3d*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::Vector3d *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":25
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("rbdl.Vector3d.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":37
 *             self.thisptr = <crbdl.Vector3d*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_8Vector3d_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_8Vector3d_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_8Vector3d_2__dealloc__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_8Vector3d_2__dealloc__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":38
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 38, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":39
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":38
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":37
 *             self.thisptr = <crbdl.Vector3d*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.Vector3d.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":41
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Vector3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Vector3d_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_8Vector3d_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_4__repr__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Vector3d_4__repr__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":42
 * 
 *     def __repr__(self):
 *         return "Vector3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Vector3d_3_4f_3_4f_3_4f, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":43
 *     def __repr__(self):
 *         return "Vector3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":41
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Vector3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Vector3d.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":45
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Vector3d_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_8Vector3d_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_6__getitem__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Vector3d_6__getitem__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":46
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":48
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return self.thisptr.data()[key]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 48, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 48, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 48, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 48, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 48, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 48, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 48, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 48, __pyx_L1_error)
      __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_11])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 48, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":46
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":50
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 *         else:
 *             return self.thisptr.data()[key]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 50, __pyx_L1_error)
    __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_6])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":45
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.Vector3d.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":52
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_8Vector3d_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_8Vector3d_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_8__setitem__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_8Vector3d_8__setitem__(struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":53
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":55
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":56
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 56, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 56, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 56, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 56, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 56, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 56, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 56, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":57
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 57, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 57, __pyx_L1_error)
      (__pyx_v_self->thisptr->data()[__pyx_t_11]) = __pyx_t_10;

      /* "rbdl.pyx":58
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.data()[key] = value
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 58, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":56
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":53
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":60
 *                 src_index = src_index + 1
 *         else:
 *             self.thisptr.data()[key] = value             # <<<<<<<<<<<<<<
 * 
 *     def __len__ (self):
 */
  /*else*/ {
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 60, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 60, __pyx_L1_error)
    (__pyx_v_self->thisptr->data()[__pyx_t_5]) = __pyx_t_10;
  }
  __pyx_L3:;

  /* "rbdl.pyx":52
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Vector3d.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":62
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 3
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_8Vector3d_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_8Vector3d_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_10__len__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_8Vector3d_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":63
 * 
 *     def __len__ (self):
 *         return 3             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __pyx_r = 3;
  goto __pyx_L0;

  /* "rbdl.pyx":62
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 3
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":67
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Vector3d (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Vector3d_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_8Vector3d_12fromPointer[] = "Vector3d.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_8Vector3d_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Vector3d.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_12fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Vector3d_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":68
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return Vector3d (address)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Vector3d), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":67
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Vector3d (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Vector3d.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":71
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Vector3d (0, python_values)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Vector3d_15fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /*proto*/
static char __pyx_doc_4rbdl_8Vector3d_14fromPythonArray[] = "Vector3d.fromPythonArray(type cls, python_values)";
static PyObject *__pyx_pw_4rbdl_8Vector3d_15fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPythonArray (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_14fromPythonArray(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_python_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Vector3d_14fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPythonArray", 0);

  /* "rbdl.pyx":72
 *     @classmethod
 *     def fromPythonArray (cls, python_values):
 *         return Vector3d (0, python_values)             # <<<<<<<<<<<<<<
 * 
 * cdef class Matrix3d:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_python_values);
  __Pyx_GIVEREF(__pyx_v_python_values);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_python_values);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Vector3d), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":71
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Vector3d (0, python_values)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Vector3d.fromPythonArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Vector3d_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_8Vector3d_16__reduce_cython__[] = "Vector3d.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_8Vector3d_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_16__reduce_cython__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Vector3d_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Vector3d.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Vector3d_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_8Vector3d_18__setstate_cython__[] = "Vector3d.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_8Vector3d_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Vector3d_18__setstate_cython__(((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Vector3d_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Vector3d *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Vector3d.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":78
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_8Matrix3d_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_8Matrix3d_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_pyvalues = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,&__pyx_n_s_pyvalues,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyvalues);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 78, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
    __pyx_v_pyvalues = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 78, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Matrix3d.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d___cinit__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self), __pyx_v_address, __pyx_v_pyvalues);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_8Matrix3d___cinit__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues) {
  long __pyx_v_i;
  long __pyx_v_j;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  long __pyx_t_3;
  long __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  double __pyx_t_8;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":79
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Matrix3d()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":80
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.Matrix3d()
 * 
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":81
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Matrix3d()             # <<<<<<<<<<<<<<
 * 
 *             if pyvalues is not None:
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::Matrix3d();

    /* "rbdl.pyx":83
 *             self.thisptr = new crbdl.Matrix3d()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (3):
 *                     for j in range (3):
 */
    __pyx_t_1 = (__pyx_v_pyvalues != Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "rbdl.pyx":84
 * 
 *             if pyvalues is not None:
 *                 for i in range (3):             # <<<<<<<<<<<<<<
 *                     for j in range (3):
 *                         (&(self.thisptr.coeff(i,j)))[0] = pyvalues[i,j]
 */
      for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
        __pyx_v_i = __pyx_t_3;

        /* "rbdl.pyx":85
 *             if pyvalues is not None:
 *                 for i in range (3):
 *                     for j in range (3):             # <<<<<<<<<<<<<<
 *                         (&(self.thisptr.coeff(i,j)))[0] = pyvalues[i,j]
 *         else:
 */
        for (__pyx_t_4 = 0; __pyx_t_4 < 3; __pyx_t_4+=1) {
          __pyx_v_j = __pyx_t_4;

          /* "rbdl.pyx":86
 *                 for i in range (3):
 *                     for j in range (3):
 *                         (&(self.thisptr.coeff(i,j)))[0] = pyvalues[i,j]             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
          __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
          __pyx_t_5 = 0;
          __pyx_t_6 = 0;
          __pyx_t_6 = PyObject_GetItem(__pyx_v_pyvalues, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 86, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          ((&__pyx_v_self->thisptr->operator()(__pyx_v_i, __pyx_v_j))[0]) = __pyx_t_8;
        }
      }

      /* "rbdl.pyx":83
 *             self.thisptr = new crbdl.Matrix3d()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (3):
 *                     for j in range (3):
 */
    }

    /* "rbdl.pyx":79
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Matrix3d()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":88
 *                         (&(self.thisptr.coeff(i,j)))[0] = pyvalues[i,j]
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.Matrix3d*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":89
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.Matrix3d*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::Matrix3d *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":78
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("rbdl.Matrix3d.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":91
 *             self.thisptr = <crbdl.Matrix3d*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_8Matrix3d_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_8Matrix3d_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_8Matrix3d_2__dealloc__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_8Matrix3d_2__dealloc__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":92
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 92, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":93
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":92
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":91
 *             self.thisptr = <crbdl.Matrix3d*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.Matrix3d.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":95
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Matrix3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Matrix3d_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_8Matrix3d_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_4__repr__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Matrix3d_4__repr__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":96
 * 
 *     def __repr__(self):
 *         return "Matrix3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Matrix3d_3_4f_3_4f_3_4f, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":97
 *     def __repr__(self):
 *         return "Matrix3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 96, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":95
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Matrix3d [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Matrix3d.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":99
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         return self.thisptr.data()[key]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Matrix3d_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_8Matrix3d_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_6__getitem__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Matrix3d_6__getitem__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":100
 * 
 *     def __getitem__(self, key):
 *         return self.thisptr.data()[key]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_1 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 100, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":99
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         return self.thisptr.data()[key]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Matrix3d.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":102
 *         return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_8Matrix3d_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_8Matrix3d_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_8__setitem__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_8Matrix3d_8__setitem__(struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":103
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":105
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":106
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 106, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 106, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 106, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 106, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 106, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 106, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 106, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":107
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 107, __pyx_L1_error)
      (__pyx_v_self->thisptr->data()[__pyx_t_11]) = __pyx_t_10;

      /* "rbdl.pyx":108
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.data()[key] = value
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 108, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":106
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":103
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":110
 *                 src_index = src_index + 1
 *         else:
 *             self.thisptr.data()[key] = value             # <<<<<<<<<<<<<<
 * 
 *     def __len__ (self):
 */
  /*else*/ {
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 110, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 110, __pyx_L1_error)
    (__pyx_v_self->thisptr->data()[__pyx_t_5]) = __pyx_t_10;
  }
  __pyx_L3:;

  /* "rbdl.pyx":102
 *         return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Matrix3d.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":112
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 3
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_8Matrix3d_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_8Matrix3d_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_10__len__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_8Matrix3d_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":113
 * 
 *     def __len__ (self):
 *         return 3             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __pyx_r = 3;
  goto __pyx_L0;

  /* "rbdl.pyx":112
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 3
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":117
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Matrix3d (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Matrix3d_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_8Matrix3d_12fromPointer[] = "Matrix3d.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_8Matrix3d_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 117, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Matrix3d.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_12fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Matrix3d_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":118
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return Matrix3d (address)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Matrix3d), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":117
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Matrix3d (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Matrix3d.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":121
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Matrix3d (0, python_values)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Matrix3d_15fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /*proto*/
static char __pyx_doc_4rbdl_8Matrix3d_14fromPythonArray[] = "Matrix3d.fromPythonArray(type cls, python_values)";
static PyObject *__pyx_pw_4rbdl_8Matrix3d_15fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPythonArray (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_14fromPythonArray(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_python_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Matrix3d_14fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPythonArray", 0);

  /* "rbdl.pyx":122
 *     @classmethod
 *     def fromPythonArray (cls, python_values):
 *         return Matrix3d (0, python_values)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_python_values);
  __Pyx_GIVEREF(__pyx_v_python_values);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_python_values);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Matrix3d), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":121
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Matrix3d (0, python_values)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Matrix3d.fromPythonArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Matrix3d_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_8Matrix3d_16__reduce_cython__[] = "Matrix3d.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_8Matrix3d_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_16__reduce_cython__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Matrix3d_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Matrix3d.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8Matrix3d_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_8Matrix3d_18__setstate_cython__[] = "Matrix3d.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_8Matrix3d_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8Matrix3d_18__setstate_cython__(((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8Matrix3d_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Matrix3d.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":129
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, ndim, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_8VectorNd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_8VectorNd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ndim = 0;
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_pyvalues = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ndim,&__pyx_n_s_address,&__pyx_n_s_pyvalues,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyvalues);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 129, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ndim = values[0];
    if (values[1]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[1]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 129, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
    __pyx_v_pyvalues = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 129, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.VectorNd.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_8VectorNd___cinit__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self), __pyx_v_ndim, __pyx_v_address, __pyx_v_pyvalues);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_8VectorNd___cinit__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, PyObject *__pyx_v_ndim, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues) {
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  double __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":130
 * 
 *     def __cinit__(self, ndim, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.VectorNd(ndim)
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":131
 *     def __cinit__(self, ndim, uintptr_t address=0, pyvalues=None):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.VectorNd(ndim)
 * 
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":132
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.VectorNd(ndim)             # <<<<<<<<<<<<<<
 * 
 *             if pyvalues is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_ndim); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 132, __pyx_L1_error)
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::VectorNd(__pyx_t_2);

    /* "rbdl.pyx":134
 *             self.thisptr = new crbdl.VectorNd(ndim)
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (ndim):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    __pyx_t_1 = (__pyx_v_pyvalues != Py_None);
    __pyx_t_3 = (__pyx_t_1 != 0);
    if (__pyx_t_3) {

      /* "rbdl.pyx":135
 * 
 *             if pyvalues is not None:
 *                 for i in range (ndim):             # <<<<<<<<<<<<<<
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_ndim);
      __Pyx_GIVEREF(__pyx_v_ndim);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_ndim);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 135, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
        __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
        __pyx_t_7 = NULL;
      } else {
        __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 135, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (likely(!__pyx_t_7)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 135, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 135, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 135, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 135, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_7(__pyx_t_4);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 135, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "rbdl.pyx":136
 *             if pyvalues is not None:
 *                 for i in range (ndim):
 *                     self.thisptr.data()[i] = pyvalues[i]             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
        __pyx_t_5 = PyObject_GetItem(__pyx_v_pyvalues, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 136, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L1_error)
        (__pyx_v_self->thisptr->data()[__pyx_t_9]) = __pyx_t_8;

        /* "rbdl.pyx":135
 * 
 *             if pyvalues is not None:
 *                 for i in range (ndim):             # <<<<<<<<<<<<<<
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 */
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "rbdl.pyx":134
 *             self.thisptr = new crbdl.VectorNd(ndim)
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (ndim):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    }

    /* "rbdl.pyx":130
 * 
 *     def __cinit__(self, ndim, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.VectorNd(ndim)
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":138
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.VectorNd*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":139
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.VectorNd*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::VectorNd *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":129
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, ndim, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.VectorNd.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":141
 *             self.thisptr = <crbdl.VectorNd*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_8VectorNd_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_8VectorNd_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_8VectorNd_2__dealloc__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_8VectorNd_2__dealloc__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":142
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 142, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":143
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":142
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":141
 *             self.thisptr = <crbdl.VectorNd*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.VectorNd.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":145
 *             del self.thisptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8VectorNd_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_8VectorNd_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_4__getitem__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8VectorNd_4__getitem__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":146
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":148
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return self.thisptr.data()[key]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 148, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 148, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 148, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 148, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 148, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 148, __pyx_L1_error)
      __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_11])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":146
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":150
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 *         else:
 *             return self.thisptr.data()[key]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 150, __pyx_L1_error)
    __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_6])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":145
 *             del self.thisptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.VectorNd.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":152
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_8VectorNd_7__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_8VectorNd_7__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_6__setitem__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_8VectorNd_6__setitem__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":153
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":155
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":156
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 156, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 156, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 156, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 156, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 156, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":157
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 157, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 157, __pyx_L1_error)
      (__pyx_v_self->thisptr->data()[__pyx_t_11]) = __pyx_t_10;

      /* "rbdl.pyx":158
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.data()[key] = value
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":156
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":153
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":160
 *                 src_index = src_index + 1
 *         else:
 *             self.thisptr.data()[key] = value             # <<<<<<<<<<<<<<
 * 
 *     def __len__ (self):
 */
  /*else*/ {
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 160, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 160, __pyx_L1_error)
    (__pyx_v_self->thisptr->data()[__pyx_t_5]) = __pyx_t_10;
  }
  __pyx_L3:;

  /* "rbdl.pyx":152
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.VectorNd.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":162
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.rows()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_8VectorNd_9__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_8VectorNd_9__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_8__len__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_8VectorNd_8__len__(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":163
 * 
 *     def __len__ (self):
 *         return self.thisptr.rows()             # <<<<<<<<<<<<<<
 * 
 *     def toNumpy (self):
 */
  __pyx_r = __pyx_v_self->thisptr->rows();
  goto __pyx_L0;

  /* "rbdl.pyx":162
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.rows()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":165
 *         return self.thisptr.rows()
 * 
 *     def toNumpy (self):             # <<<<<<<<<<<<<<
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8VectorNd_11toNumpy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_8VectorNd_10toNumpy[] = "VectorNd.toNumpy(self)";
static PyObject *__pyx_pw_4rbdl_8VectorNd_11toNumpy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("toNumpy (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_10toNumpy(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8VectorNd_10toNumpy(struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  long __pyx_t_4;
  __Pyx_RefNannySetupContext("toNumpy", 0);

  /* "rbdl.pyx":166
 * 
 *     def toNumpy (self):
 *         result = np.ndarray (self.thisptr.rows())             # <<<<<<<<<<<<<<
 *         for i in range (0, self.thisptr.rows()):
 *             result[i] = self.thisptr[0][i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":167
 *     def toNumpy (self):
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):             # <<<<<<<<<<<<<<
 *             result[i] = self.thisptr[0][i]
 *         return result
 */
  __pyx_t_3 = __pyx_v_self->thisptr->rows();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "rbdl.pyx":168
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):
 *             result[i] = self.thisptr[0][i]             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
    __pyx_t_1 = PyFloat_FromDouble(((__pyx_v_self->thisptr[0])[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, long, 1, __Pyx_PyInt_From_long, 0, 1, 0) < 0)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":169
 *         for i in range (0, self.thisptr.rows()):
 *             result[i] = self.thisptr[0][i]
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":165
 *         return self.thisptr.rows()
 * 
 *     def toNumpy (self):             # <<<<<<<<<<<<<<
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.VectorNd.toNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":173
 *     # Constructors
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return VectorNd (len(python_values), 0, python_values)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8VectorNd_13fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /*proto*/
static char __pyx_doc_4rbdl_8VectorNd_12fromPythonArray[] = "VectorNd.fromPythonArray(type cls, python_values)";
static PyObject *__pyx_pw_4rbdl_8VectorNd_13fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPythonArray (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_12fromPythonArray(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_python_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8VectorNd_12fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("fromPythonArray", 0);

  /* "rbdl.pyx":174
 *     @classmethod
 *     def fromPythonArray (cls, python_values):
 *         return VectorNd (len(python_values), 0, python_values)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Length(__pyx_v_python_values); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 174, __pyx_L1_error)
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_python_values);
  __Pyx_GIVEREF(__pyx_v_python_values);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_python_values);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_VectorNd), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":173
 *     # Constructors
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return VectorNd (len(python_values), 0, python_values)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("rbdl.VectorNd.fromPythonArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":177
 * 
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         cdef crbdl.VectorNd* vector_ptr = <crbdl.VectorNd*> address
 *         return VectorNd (vector_ptr.rows(), <uintptr_t> address)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8VectorNd_15fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_8VectorNd_14fromPointer[] = "VectorNd.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_8VectorNd_15fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 177, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.VectorNd.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_14fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8VectorNd_14fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  RigidBodyDynamics::Math::VectorNd *__pyx_v_vector_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":178
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         cdef crbdl.VectorNd* vector_ptr = <crbdl.VectorNd*> address             # <<<<<<<<<<<<<<
 *         return VectorNd (vector_ptr.rows(), <uintptr_t> address)
 * 
 */
  __pyx_v_vector_ptr = ((RigidBodyDynamics::Math::VectorNd *)__pyx_v_address);

  /* "rbdl.pyx":179
 *     def fromPointer(cls, uintptr_t address):
 *         cdef crbdl.VectorNd* vector_ptr = <crbdl.VectorNd*> address
 *         return VectorNd (vector_ptr.rows(), <uintptr_t> address)             # <<<<<<<<<<<<<<
 * 
 * cdef class Quaternion:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_vector_ptr->rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_address)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_VectorNd), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":177
 * 
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         cdef crbdl.VectorNd* vector_ptr = <crbdl.VectorNd*> address
 *         return VectorNd (vector_ptr.rows(), <uintptr_t> address)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("rbdl.VectorNd.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8VectorNd_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_8VectorNd_16__reduce_cython__[] = "VectorNd.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_8VectorNd_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_16__reduce_cython__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8VectorNd_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.VectorNd.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_8VectorNd_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_8VectorNd_18__setstate_cython__[] = "VectorNd.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_8VectorNd_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_8VectorNd_18__setstate_cython__(((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8VectorNd_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_VectorNd *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.VectorNd.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":185
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None, pymatvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_10Quaternion_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_10Quaternion_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_pyvalues = 0;
  PyObject *__pyx_v_pymatvalues = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,&__pyx_n_s_pyvalues,&__pyx_n_s_pymatvalues,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyvalues);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pymatvalues);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 185, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 185, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
    __pyx_v_pyvalues = values[1];
    __pyx_v_pymatvalues = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 185, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Quaternion.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_10Quaternion___cinit__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self), __pyx_v_address, __pyx_v_pyvalues, __pyx_v_pymatvalues);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_10Quaternion___cinit__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues, PyObject *__pyx_v_pymatvalues) {
  long __pyx_v_i;
  struct __pyx_obj_4rbdl_Matrix3d *__pyx_v_mat = NULL;
  long __pyx_v_j;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  long __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":186
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None, pymatvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Quaternion()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":187
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None, pymatvalues=None):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.Quaternion()
 * 
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":188
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Quaternion()             # <<<<<<<<<<<<<<
 * 
 *             if pyvalues is not None:
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::Quaternion();

    /* "rbdl.pyx":190
 *             self.thisptr = new crbdl.Quaternion()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (4):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    __pyx_t_1 = (__pyx_v_pyvalues != Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "rbdl.pyx":191
 * 
 *             if pyvalues is not None:
 *                 for i in range (4):             # <<<<<<<<<<<<<<
 *                     self.thisptr.data()[i] = pyvalues[i]
 *             elif pymatvalues is not None:
 */
      for (__pyx_t_3 = 0; __pyx_t_3 < 4; __pyx_t_3+=1) {
        __pyx_v_i = __pyx_t_3;

        /* "rbdl.pyx":192
 *             if pyvalues is not None:
 *                 for i in range (4):
 *                     self.thisptr.data()[i] = pyvalues[i]             # <<<<<<<<<<<<<<
 *             elif pymatvalues is not None:
 *                 mat = Matrix3d()
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_pyvalues, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 192, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 192, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        (__pyx_v_self->thisptr->data()[__pyx_v_i]) = __pyx_t_5;
      }

      /* "rbdl.pyx":190
 *             self.thisptr = new crbdl.Quaternion()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (4):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
      goto __pyx_L4;
    }

    /* "rbdl.pyx":193
 *                 for i in range (4):
 *                     self.thisptr.data()[i] = pyvalues[i]
 *             elif pymatvalues is not None:             # <<<<<<<<<<<<<<
 *                 mat = Matrix3d()
 *                 for i in range (3):
 */
    __pyx_t_2 = (__pyx_v_pymatvalues != Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "rbdl.pyx":194
 *                     self.thisptr.data()[i] = pyvalues[i]
 *             elif pymatvalues is not None:
 *                 mat = Matrix3d()             # <<<<<<<<<<<<<<
 *                 for i in range (3):
 *                     for j in range (3):
 */
      __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Matrix3d), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 194, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_v_mat = ((struct __pyx_obj_4rbdl_Matrix3d *)__pyx_t_4);
      __pyx_t_4 = 0;

      /* "rbdl.pyx":195
 *             elif pymatvalues is not None:
 *                 mat = Matrix3d()
 *                 for i in range (3):             # <<<<<<<<<<<<<<
 *                     for j in range (3):
 *                         (&(mat.thisptr.coeff(i,j)))[0] = pymatvalues[i,j]
 */
      for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
        __pyx_v_i = __pyx_t_3;

        /* "rbdl.pyx":196
 *                 mat = Matrix3d()
 *                 for i in range (3):
 *                     for j in range (3):             # <<<<<<<<<<<<<<
 *                         (&(mat.thisptr.coeff(i,j)))[0] = pymatvalues[i,j]
 *                 self.thisptr[0] = crbdl.fromMatrix (mat.thisptr[0])
 */
        for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
          __pyx_v_j = __pyx_t_6;

          /* "rbdl.pyx":197
 *                 for i in range (3):
 *                     for j in range (3):
 *                         (&(mat.thisptr.coeff(i,j)))[0] = pymatvalues[i,j]             # <<<<<<<<<<<<<<
 *                 self.thisptr[0] = crbdl.fromMatrix (mat.thisptr[0])
 *         else:
 */
          __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_7);
          __pyx_t_4 = 0;
          __pyx_t_7 = 0;
          __pyx_t_7 = PyObject_GetItem(__pyx_v_pymatvalues, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          ((&__pyx_v_mat->thisptr->operator()(__pyx_v_i, __pyx_v_j))[0]) = __pyx_t_5;
        }
      }

      /* "rbdl.pyx":198
 *                     for j in range (3):
 *                         (&(mat.thisptr.coeff(i,j)))[0] = pymatvalues[i,j]
 *                 self.thisptr[0] = crbdl.fromMatrix (mat.thisptr[0])             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
      (__pyx_v_self->thisptr[0]) = RigidBodyDynamics::Math::Quaternion::fromMatrix((__pyx_v_mat->thisptr[0]));

      /* "rbdl.pyx":193
 *                 for i in range (4):
 *                     self.thisptr.data()[i] = pyvalues[i]
 *             elif pymatvalues is not None:             # <<<<<<<<<<<<<<
 *                 mat = Matrix3d()
 *                 for i in range (3):
 */
    }
    __pyx_L4:;

    /* "rbdl.pyx":186
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None, pymatvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.Quaternion()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":200
 *                 self.thisptr[0] = crbdl.fromMatrix (mat.thisptr[0])
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.Quaternion*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":201
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.Quaternion*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::Quaternion *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":185
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None, pymatvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Quaternion.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_mat);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":203
 *             self.thisptr = <crbdl.Quaternion*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_10Quaternion_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_10Quaternion_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_10Quaternion_2__dealloc__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_10Quaternion_2__dealloc__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":204
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 204, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":205
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":204
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":203
 *             self.thisptr = <crbdl.Quaternion*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.Quaternion.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":207
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Quaternion [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1],
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_10Quaternion_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_4__repr__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_4__repr__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":208
 * 
 *     def __repr__(self):
 *         return "Quaternion [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4}]".format (             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[0], self.thisptr.data()[1],
 *                 self.thisptr.data()[2], self.thisptr.data()[3])
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Quaternion_3_4f_3_4f_3_4f_3_4, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":209
 *     def __repr__(self):
 *         return "Quaternion [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1],             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[2], self.thisptr.data()[3])
 * 
 */
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "rbdl.pyx":210
 *         return "Quaternion [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1],
 *                 self.thisptr.data()[2], self.thisptr.data()[3])             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[3])); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 208, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 208, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_6);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":207
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Quaternion [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1],
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.Quaternion.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":212
 *                 self.thisptr.data()[2], self.thisptr.data()[3])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_10Quaternion_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_6__getitem__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_6__getitem__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":213
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":215
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return self.thisptr.data()[key]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 215, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 215, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 215, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 215, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 215, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 215, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 215, __pyx_L1_error)
      __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_11])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 215, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":213
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":217
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 *         else:
 *             return self.thisptr.data()[key]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 217, __pyx_L1_error)
    __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_6])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 217, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":212
 *                 self.thisptr.data()[2], self.thisptr.data()[3])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.Quaternion.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":219
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_10Quaternion_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_10Quaternion_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_8__setitem__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_10Quaternion_8__setitem__(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":220
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":222
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":223
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 223, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 223, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 223, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 223, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 223, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":224
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 224, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 224, __pyx_L1_error)
      (__pyx_v_self->thisptr->data()[__pyx_t_11]) = __pyx_t_10;

      /* "rbdl.pyx":225
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.data()[key] = value
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":223
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":220
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":227
 *                 src_index = src_index + 1
 *         else:
 *             self.thisptr.data()[key] = value             # <<<<<<<<<<<<<<
 * 
 *     def __len__ (self):
 */
  /*else*/ {
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 227, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 227, __pyx_L1_error)
    (__pyx_v_self->thisptr->data()[__pyx_t_5]) = __pyx_t_10;
  }
  __pyx_L3:;

  /* "rbdl.pyx":219
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Quaternion.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":229
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 4
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_10Quaternion_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_10Quaternion_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_10__len__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_10Quaternion_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":230
 * 
 *     def __len__ (self):
 *         return 4             # <<<<<<<<<<<<<<
 * 
 *     def toMatrix(self):
 */
  __pyx_r = 4;
  goto __pyx_L0;

  /* "rbdl.pyx":229
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 4
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":232
 *         return 4
 * 
 *     def toMatrix(self):             # <<<<<<<<<<<<<<
 *         cdef crbdl.Matrix3d mat
 *         mat = self.thisptr.toMatrix()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_13toMatrix(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_12toMatrix[] = "Quaternion.toMatrix(self)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_13toMatrix(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("toMatrix (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_12toMatrix(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_12toMatrix(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self) {
  RigidBodyDynamics::Math::Matrix3d __pyx_v_mat;
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  long __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  long __pyx_t_6;
  long __pyx_t_7;
  __Pyx_RefNannySetupContext("toMatrix", 0);

  /* "rbdl.pyx":234
 *     def toMatrix(self):
 *         cdef crbdl.Matrix3d mat
 *         mat = self.thisptr.toMatrix()             # <<<<<<<<<<<<<<
 *         result = np.array ([3,3])
 *         for i in range (3):
 */
  __pyx_v_mat = __pyx_v_self->thisptr->toMatrix();

  /* "rbdl.pyx":235
 *         cdef crbdl.Matrix3d mat
 *         mat = self.thisptr.toMatrix()
 *         result = np.array ([3,3])             # <<<<<<<<<<<<<<
 *         for i in range (3):
 *             for j in range (3):
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_int_3);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_int_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 235, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_2};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_2};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":236
 *         mat = self.thisptr.toMatrix()
 *         result = np.array ([3,3])
 *         for i in range (3):             # <<<<<<<<<<<<<<
 *             for j in range (3):
 *                 result[i,j] = mat.coeff(i,j)
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "rbdl.pyx":237
 *         result = np.array ([3,3])
 *         for i in range (3):
 *             for j in range (3):             # <<<<<<<<<<<<<<
 *                 result[i,j] = mat.coeff(i,j)
 * 
 */
    for (__pyx_t_7 = 0; __pyx_t_7 < 3; __pyx_t_7+=1) {
      __pyx_v_j = __pyx_t_7;

      /* "rbdl.pyx":238
 *         for i in range (3):
 *             for j in range (3):
 *                 result[i,j] = mat.coeff(i,j)             # <<<<<<<<<<<<<<
 * 
 *         return result
 */
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_mat.operator()(__pyx_v_i, __pyx_v_j)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_result, __pyx_t_2, __pyx_t_1) < 0)) __PYX_ERR(0, 238, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "rbdl.pyx":240
 *                 result[i,j] = mat.coeff(i,j)
 * 
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     def toNumpy(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":232
 *         return 4
 * 
 *     def toMatrix(self):             # <<<<<<<<<<<<<<
 *         cdef crbdl.Matrix3d mat
 *         mat = self.thisptr.toMatrix()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.Quaternion.toMatrix", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":242
 *         return result
 * 
 *     def toNumpy(self):             # <<<<<<<<<<<<<<
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_15toNumpy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_14toNumpy[] = "Quaternion.toNumpy(self)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_15toNumpy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("toNumpy (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_14toNumpy(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_14toNumpy(struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  long __pyx_t_4;
  __Pyx_RefNannySetupContext("toNumpy", 0);

  /* "rbdl.pyx":243
 * 
 *     def toNumpy(self):
 *         result = np.ndarray (self.thisptr.rows())             # <<<<<<<<<<<<<<
 *         for i in range (0, self.thisptr.rows()):
 *             result[i] = self.thisptr[0][i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":244
 *     def toNumpy(self):
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):             # <<<<<<<<<<<<<<
 *             result[i] = self.thisptr[0][i]
 *         return result
 */
  __pyx_t_3 = __pyx_v_self->thisptr->rows();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "rbdl.pyx":245
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):
 *             result[i] = self.thisptr[0][i]             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
    __pyx_t_1 = PyFloat_FromDouble(((__pyx_v_self->thisptr[0])[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, long, 1, __Pyx_PyInt_From_long, 0, 1, 0) < 0)) __PYX_ERR(0, 245, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":246
 *         for i in range (0, self.thisptr.rows()):
 *             result[i] = self.thisptr[0][i]
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":242
 *         return result
 * 
 *     def toNumpy(self):             # <<<<<<<<<<<<<<
 *         result = np.ndarray (self.thisptr.rows())
 *         for i in range (0, self.thisptr.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Quaternion.toNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":250
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Quaternion (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_17fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_16fromPointer[] = "Quaternion.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_17fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 250, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Quaternion.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_16fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_16fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":251
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return Quaternion (address)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Quaternion), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":250
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Quaternion (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Quaternion.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":254
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Quaternion (0, python_values)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_19fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_18fromPythonArray[] = "Quaternion.fromPythonArray(type cls, python_values)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_19fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPythonArray (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_18fromPythonArray(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_python_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_18fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPythonArray", 0);

  /* "rbdl.pyx":255
 *     @classmethod
 *     def fromPythonArray (cls, python_values):
 *         return Quaternion (0, python_values)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_python_values);
  __Pyx_GIVEREF(__pyx_v_python_values);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_python_values);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Quaternion), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":254
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Quaternion (0, python_values)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Quaternion.fromPythonArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":258
 * 
 *     @classmethod
 *     def fromPythonMatrix (cls, python_matrix_values):             # <<<<<<<<<<<<<<
 *         return Quaternion (0, None, python_matrix_values)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_21fromPythonMatrix(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_matrix_values); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_20fromPythonMatrix[] = "Quaternion.fromPythonMatrix(type cls, python_matrix_values)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_21fromPythonMatrix(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_matrix_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPythonMatrix (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_20fromPythonMatrix(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_python_matrix_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_20fromPythonMatrix(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_matrix_values) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPythonMatrix", 0);

  /* "rbdl.pyx":259
 *     @classmethod
 *     def fromPythonMatrix (cls, python_matrix_values):
 *         return Quaternion (0, None, python_matrix_values)             # <<<<<<<<<<<<<<
 * 
 * cdef class SpatialVector:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 1, Py_None);
  __Pyx_INCREF(__pyx_v_python_matrix_values);
  __Pyx_GIVEREF(__pyx_v_python_matrix_values);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_python_matrix_values);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Quaternion), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":258
 * 
 *     @classmethod
 *     def fromPythonMatrix (cls, python_matrix_values):             # <<<<<<<<<<<<<<
 *         return Quaternion (0, None, python_matrix_values)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Quaternion.fromPythonMatrix", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_23__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_22__reduce_cython__[] = "Quaternion.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_23__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_22__reduce_cython__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Quaternion.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_10Quaternion_25__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_10Quaternion_24__setstate_cython__[] = "Quaternion.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_10Quaternion_25__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_10Quaternion_24__setstate_cython__(((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10Quaternion_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Quaternion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Quaternion.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":265
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_13SpatialVector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_13SpatialVector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_pyvalues = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,&__pyx_n_s_pyvalues,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyvalues);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 265, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 265, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
    __pyx_v_pyvalues = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 265, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialVector.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector___cinit__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self), __pyx_v_address, __pyx_v_pyvalues);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_13SpatialVector___cinit__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_pyvalues) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":266
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialVector()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":267
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.SpatialVector()
 * 
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":268
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialVector()             # <<<<<<<<<<<<<<
 * 
 *             if pyvalues is not None:
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::SpatialVector();

    /* "rbdl.pyx":270
 *             self.thisptr = new crbdl.SpatialVector()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (6):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    __pyx_t_1 = (__pyx_v_pyvalues != Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "rbdl.pyx":271
 * 
 *             if pyvalues is not None:
 *                 for i in range (6):             # <<<<<<<<<<<<<<
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 */
      for (__pyx_t_3 = 0; __pyx_t_3 < 6; __pyx_t_3+=1) {
        __pyx_v_i = __pyx_t_3;

        /* "rbdl.pyx":272
 *             if pyvalues is not None:
 *                 for i in range (6):
 *                     self.thisptr.data()[i] = pyvalues[i]             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_pyvalues, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 272, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 272, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        (__pyx_v_self->thisptr->data()[__pyx_v_i]) = __pyx_t_5;
      }

      /* "rbdl.pyx":270
 *             self.thisptr = new crbdl.SpatialVector()
 * 
 *             if pyvalues is not None:             # <<<<<<<<<<<<<<
 *                 for i in range (6):
 *                     self.thisptr.data()[i] = pyvalues[i]
 */
    }

    /* "rbdl.pyx":266
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialVector()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":274
 *                     self.thisptr.data()[i] = pyvalues[i]
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.SpatialVector*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":275
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.SpatialVector*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::SpatialVector *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":265
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0, pyvalues=None):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("rbdl.SpatialVector.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":277
 *             self.thisptr = <crbdl.SpatialVector*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_13SpatialVector_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_13SpatialVector_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_13SpatialVector_2__dealloc__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_13SpatialVector_2__dealloc__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":278
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 278, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":279
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":278
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":277
 *             self.thisptr = <crbdl.SpatialVector*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.SpatialVector.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":281
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "SpatialVector [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialVector_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13SpatialVector_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_4__repr__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialVector_4__repr__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":282
 * 
 *     def __repr__(self):
 *         return "SpatialVector [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_SpatialVector_3_4f_3_4f_3_4f_3_4, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":283
 *     def __repr__(self):
 *         return "SpatialVector [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 * 
 */
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "rbdl.pyx":284
 *         return "SpatialVector [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[3])); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[4])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[5])); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_10 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[7] = {__pyx_t_9, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_10, 6+__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 282, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[7] = {__pyx_t_9, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_10, 6+__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 282, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  {
    __pyx_t_11 = PyTuple_New(6+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    if (__pyx_t_9) {
      __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_10, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_11, 3+__pyx_t_10, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_11, 4+__pyx_t_10, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_11, 5+__pyx_t_10, __pyx_t_8);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":281
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "SpatialVector [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("rbdl.SpatialVector.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":286
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialVector_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_13SpatialVector_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_6__getitem__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialVector_6__getitem__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":287
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":289
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return self.thisptr.data()[key]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 289, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 289, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 289, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 289, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 289, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 289, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 289, __pyx_L1_error)
      __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_11])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 289, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":287
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":291
 *             return [self.thisptr.data()[i] for i in xrange(*key.indices(len(self)))]
 *         else:
 *             return self.thisptr.data()[key]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 291, __pyx_L1_error)
    __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_6])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":286
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.SpatialVector.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":293
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_13SpatialVector_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_13SpatialVector_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_8__setitem__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_13SpatialVector_8__setitem__(struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":294
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":296
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":297
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 297, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 297, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 297, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 297, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 297, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 297, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 297, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":298
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 298, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 298, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 298, __pyx_L1_error)
      (__pyx_v_self->thisptr->data()[__pyx_t_11]) = __pyx_t_10;

      /* "rbdl.pyx":299
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.data()[key] = value
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 299, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":297
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":294
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":301
 *                 src_index = src_index + 1
 *         else:
 *             self.thisptr.data()[key] = value             # <<<<<<<<<<<<<<
 * 
 *     def __len__ (self):
 */
  /*else*/ {
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 301, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 301, __pyx_L1_error)
    (__pyx_v_self->thisptr->data()[__pyx_t_5]) = __pyx_t_10;
  }
  __pyx_L3:;

  /* "rbdl.pyx":293
 *             return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.SpatialVector.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":303
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 6
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_13SpatialVector_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_13SpatialVector_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_10__len__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_13SpatialVector_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":304
 * 
 *     def __len__ (self):
 *         return 6             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __pyx_r = 6;
  goto __pyx_L0;

  /* "rbdl.pyx":303
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 6
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":308
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialVector (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialVector_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_13SpatialVector_12fromPointer[] = "SpatialVector.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_13SpatialVector_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 308, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialVector.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_12fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialVector_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":309
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialVector (address)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":308
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialVector (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialVector.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":312
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return SpatialVector (0, python_values)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialVector_15fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values); /*proto*/
static char __pyx_doc_4rbdl_13SpatialVector_14fromPythonArray[] = "SpatialVector.fromPythonArray(type cls, python_values)";
static PyObject *__pyx_pw_4rbdl_13SpatialVector_15fromPythonArray(PyObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPythonArray (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_14fromPythonArray(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_python_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialVector_14fromPythonArray(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_python_values) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPythonArray", 0);

  /* "rbdl.pyx":313
 *     @classmethod
 *     def fromPythonArray (cls, python_values):
 *         return SpatialVector (0, python_values)             # <<<<<<<<<<<<<<
 * 
 * cdef class SpatialMatrix:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_python_values);
  __Pyx_GIVEREF(__pyx_v_python_values);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_python_values);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":312
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return SpatialVector (0, python_values)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialVector.fromPythonArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialVector_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_13SpatialVector_16__reduce_cython__[] = "SpatialVector.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_13SpatialVector_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_16__reduce_cython__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialVector_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialVector.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialVector_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_13SpatialVector_18__setstate_cython__[] = "SpatialVector.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_13SpatialVector_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialVector_18__setstate_cython__(((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialVector_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialVector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":319
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_13SpatialMatrix_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_13SpatialMatrix_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 319, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 319, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 319, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialMatrix.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix___cinit__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self), __pyx_v_address);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_13SpatialMatrix___cinit__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, uintptr_t __pyx_v_address) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":320
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialMatrix()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":321
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.SpatialMatrix()
 *         else:
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":322
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialMatrix()             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::SpatialMatrix();

    /* "rbdl.pyx":320
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialMatrix()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":324
 *             self.thisptr = new crbdl.SpatialMatrix()
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.SpatialMatrix*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":325
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.SpatialMatrix*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::SpatialMatrix *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":319
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":327
 *             self.thisptr = <crbdl.SpatialMatrix*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_13SpatialMatrix_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_13SpatialMatrix_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_13SpatialMatrix_2__dealloc__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_13SpatialMatrix_2__dealloc__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":328
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 328, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":329
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":328
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":327
 *             self.thisptr = <crbdl.SpatialMatrix*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.SpatialMatrix.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":331
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "SpatialMatrix [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_4__repr__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_4__repr__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":332
 * 
 *     def __repr__(self):
 *         return "SpatialMatrix [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_SpatialMatrix_3_4f_3_4f_3_4f_3_4, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":333
 *     def __repr__(self):
 *         return "SpatialMatrix [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 * 
 */
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "rbdl.pyx":334
 *         return "SpatialMatrix [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[3])); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[4])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[5])); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_10 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[7] = {__pyx_t_9, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_10, 6+__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[7] = {__pyx_t_9, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_10, 6+__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  {
    __pyx_t_11 = PyTuple_New(6+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 332, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    if (__pyx_t_9) {
      __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_10, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_11, 3+__pyx_t_10, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_11, 4+__pyx_t_10, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_11, 5+__pyx_t_10, __pyx_t_8);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":331
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "SpatialMatrix [{:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.data()[0], self.thisptr.data()[1], self.thisptr.data()[2],
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("rbdl.SpatialMatrix.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":336
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         return self.thisptr.data()[key]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_6__getitem__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_6__getitem__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":337
 * 
 *     def __getitem__(self, key):
 *         return self.thisptr.data()[key]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_1 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 337, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_self->thisptr->data()[__pyx_t_1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":336
 *                 self.thisptr.data()[3], self.thisptr.data()[4], self.thisptr.data()[5])
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         return self.thisptr.data()[key]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialMatrix.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":339
 *         return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_13SpatialMatrix_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_13SpatialMatrix_9__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_8__setitem__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_13SpatialMatrix_8__setitem__(struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":340
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":342
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":343
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 343, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 343, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 343, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 343, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 343, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":344
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 344, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L1_error)
      (__pyx_v_self->thisptr->data()[__pyx_t_11]) = __pyx_t_10;

      /* "rbdl.pyx":345
 *             for i in xrange (*key.indices(len(self))):
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.data()[key] = value
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":343
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 self.thisptr.data()[i] = value[src_index]
 *                 src_index = src_index + 1
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":340
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":347
 *                 src_index = src_index + 1
 *         else:
 *             self.thisptr.data()[key] = value             # <<<<<<<<<<<<<<
 * 
 *     def __len__ (self):
 */
  /*else*/ {
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 347, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 347, __pyx_L1_error)
    (__pyx_v_self->thisptr->data()[__pyx_t_5]) = __pyx_t_10;
  }
  __pyx_L3:;

  /* "rbdl.pyx":339
 *         return self.thisptr.data()[key]
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.SpatialMatrix.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":349
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 6
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_13SpatialMatrix_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_13SpatialMatrix_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_10__len__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_13SpatialMatrix_10__len__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":350
 * 
 *     def __len__ (self):
 *         return 6             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __pyx_r = 6;
  goto __pyx_L0;

  /* "rbdl.pyx":349
 *             self.thisptr.data()[key] = value
 * 
 *     def __len__ (self):             # <<<<<<<<<<<<<<
 *         return 6
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":354
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialMatrix (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_13SpatialMatrix_12fromPointer[] = "SpatialMatrix.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_13fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 354, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialMatrix.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_12fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_12fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":355
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialMatrix (address)             # <<<<<<<<<<<<<<
 * 
 * ##############################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_SpatialMatrix), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":354
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialMatrix (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialMatrix.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_13SpatialMatrix_14__reduce_cython__[] = "SpatialMatrix.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_14__reduce_cython__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_14__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialMatrix.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_13SpatialMatrix_16__setstate_cython__[] = "SpatialMatrix.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_13SpatialMatrix_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13SpatialMatrix_16__setstate_cython__(((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13SpatialMatrix_16__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialMatrix *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialMatrix.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":364
 * 
 * # Vector3d
 * cdef crbdl.Vector3d NumpyToVector3d (np.ndarray[double, ndim=1, mode="c"] x):             # <<<<<<<<<<<<<<
 *     cdef crbdl.Vector3d cx = crbdl.Vector3d()
 *     for i in range (3):
 */

static RigidBodyDynamics::Math::Vector3d __pyx_f_4rbdl_NumpyToVector3d(PyArrayObject *__pyx_v_x) {
  RigidBodyDynamics::Math::Vector3d __pyx_v_cx;
  long __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  RigidBodyDynamics::Math::Vector3d __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("NumpyToVector3d", 0);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 364, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":365
 * # Vector3d
 * cdef crbdl.Vector3d NumpyToVector3d (np.ndarray[double, ndim=1, mode="c"] x):
 *     cdef crbdl.Vector3d cx = crbdl.Vector3d()             # <<<<<<<<<<<<<<
 *     for i in range (3):
 *         cx[i] = x[i]
 */
  __pyx_v_cx = RigidBodyDynamics::Math::Vector3d();

  /* "rbdl.pyx":366
 * cdef crbdl.Vector3d NumpyToVector3d (np.ndarray[double, ndim=1, mode="c"] x):
 *     cdef crbdl.Vector3d cx = crbdl.Vector3d()
 *     for i in range (3):             # <<<<<<<<<<<<<<
 *         cx[i] = x[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":367
 *     cdef crbdl.Vector3d cx = crbdl.Vector3d()
 *     for i in range (3):
 *         cx[i] = x[i]             # <<<<<<<<<<<<<<
 * 
 *     return cx
 */
    __pyx_t_2 = __pyx_v_i;
    if (__pyx_t_2 < 0) __pyx_t_2 += __pyx_pybuffernd_x.diminfo[0].shape;
    (__pyx_v_cx[__pyx_v_i]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_x.diminfo[0].strides));
  }

  /* "rbdl.pyx":369
 *         cx[i] = x[i]
 * 
 *     return cx             # <<<<<<<<<<<<<<
 * 
 * cdef np.ndarray Vector3dToNumpy (crbdl.Vector3d cx):
 */
  __pyx_r = __pyx_v_cx;
  goto __pyx_L0;

  /* "rbdl.pyx":364
 * 
 * # Vector3d
 * cdef crbdl.Vector3d NumpyToVector3d (np.ndarray[double, ndim=1, mode="c"] x):             # <<<<<<<<<<<<<<
 *     cdef crbdl.Vector3d cx = crbdl.Vector3d()
 *     for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("rbdl.NumpyToVector3d", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":371
 *     return cx
 * 
 * cdef np.ndarray Vector3dToNumpy (crbdl.Vector3d cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

static PyArrayObject *__pyx_f_4rbdl_Vector3dToNumpy(RigidBodyDynamics::Math::Vector3d __pyx_v_cx) {
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_i;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("Vector3dToNumpy", 0);

  /* "rbdl.pyx":372
 * 
 * cdef np.ndarray Vector3dToNumpy (crbdl.Vector3d cx):
 *     result = np.ndarray ((cx.rows()))             # <<<<<<<<<<<<<<
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_cx.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":373
 * cdef np.ndarray Vector3dToNumpy (crbdl.Vector3d cx):
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):             # <<<<<<<<<<<<<<
 *         result[i] = cx[i]
 * 
 */
  __pyx_t_3 = __pyx_v_cx.rows();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "rbdl.pyx":374
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_cx[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 0) < 0)) __PYX_ERR(0, 374, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":376
 *         result[i] = cx[i]
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef np.ndarray Matrix3dToNumpy (crbdl.Matrix3d cM):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (!(likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_5numpy_ndarray)))) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = ((PyArrayObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":371
 *     return cx
 * 
 * cdef np.ndarray Vector3dToNumpy (crbdl.Vector3d cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Vector3dToNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":378
 *     return result
 * 
 * cdef np.ndarray Matrix3dToNumpy (crbdl.Matrix3d cM):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ([3, 3])
 *     for i in range (3):
 */

static PyArrayObject *__pyx_f_4rbdl_Matrix3dToNumpy(RigidBodyDynamics::Math::Matrix3d __pyx_v_cM) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  long __pyx_v_j;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  long __pyx_t_3;
  long __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("Matrix3dToNumpy", 0);

  /* "rbdl.pyx":379
 * 
 * cdef np.ndarray Matrix3dToNumpy (crbdl.Matrix3d cM):
 *     result = np.ndarray ([3, 3])             # <<<<<<<<<<<<<<
 *     for i in range (3):
 *         for j in range (3):
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_int_3);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_int_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":380
 * cdef np.ndarray Matrix3dToNumpy (crbdl.Matrix3d cM):
 *     result = np.ndarray ([3, 3])
 *     for i in range (3):             # <<<<<<<<<<<<<<
 *         for j in range (3):
 *             result[i,j] = cM.coeff(i,j)
 */
  for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "rbdl.pyx":381
 *     result = np.ndarray ([3, 3])
 *     for i in range (3):
 *         for j in range (3):             # <<<<<<<<<<<<<<
 *             result[i,j] = cM.coeff(i,j)
 * 
 */
    for (__pyx_t_4 = 0; __pyx_t_4 < 3; __pyx_t_4+=1) {
      __pyx_v_j = __pyx_t_4;

      /* "rbdl.pyx":382
 *     for i in range (3):
 *         for j in range (3):
 *             result[i,j] = cM.coeff(i,j)             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_cM.operator()(__pyx_v_i, __pyx_v_j)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 382, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 382, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 382, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 382, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_2 = 0;
      __pyx_t_5 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_result, __pyx_t_6, __pyx_t_1) < 0)) __PYX_ERR(0, 382, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "rbdl.pyx":384
 *             result[i,j] = cM.coeff(i,j)
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * # VectorNd
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (!(likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_5numpy_ndarray)))) __PYX_ERR(0, 384, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = ((PyArrayObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":378
 *     return result
 * 
 * cdef np.ndarray Matrix3dToNumpy (crbdl.Matrix3d cM):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ([3, 3])
 *     for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("rbdl.Matrix3dToNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":387
 * 
 * # VectorNd
 * cdef crbdl.VectorNd NumpyToVectorNd (np.ndarray[double, ndim=1, mode="c"] x):             # <<<<<<<<<<<<<<
 *     cdef crbdl.VectorNd cx = crbdl.VectorNd(x.shape[0])
 *     for i in range (x.shape[0]):
 */

static RigidBodyDynamics::Math::VectorNd __pyx_f_4rbdl_NumpyToVectorNd(PyArrayObject *__pyx_v_x) {
  RigidBodyDynamics::Math::VectorNd __pyx_v_cx;
  npy_intp __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  RigidBodyDynamics::Math::VectorNd __pyx_r;
  __Pyx_RefNannyDeclarations
  npy_intp __pyx_t_1;
  npy_intp __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  __Pyx_RefNannySetupContext("NumpyToVectorNd", 0);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 387, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":388
 * # VectorNd
 * cdef crbdl.VectorNd NumpyToVectorNd (np.ndarray[double, ndim=1, mode="c"] x):
 *     cdef crbdl.VectorNd cx = crbdl.VectorNd(x.shape[0])             # <<<<<<<<<<<<<<
 *     for i in range (x.shape[0]):
 *         cx[i] = x[i]
 */
  __pyx_v_cx = RigidBodyDynamics::Math::VectorNd((__pyx_v_x->dimensions[0]));

  /* "rbdl.pyx":389
 * cdef crbdl.VectorNd NumpyToVectorNd (np.ndarray[double, ndim=1, mode="c"] x):
 *     cdef crbdl.VectorNd cx = crbdl.VectorNd(x.shape[0])
 *     for i in range (x.shape[0]):             # <<<<<<<<<<<<<<
 *         cx[i] = x[i]
 * 
 */
  __pyx_t_1 = (__pyx_v_x->dimensions[0]);
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":390
 *     cdef crbdl.VectorNd cx = crbdl.VectorNd(x.shape[0])
 *     for i in range (x.shape[0]):
 *         cx[i] = x[i]             # <<<<<<<<<<<<<<
 * 
 *     return cx
 */
    __pyx_t_3 = __pyx_v_i;
    if (__pyx_t_3 < 0) __pyx_t_3 += __pyx_pybuffernd_x.diminfo[0].shape;
    (__pyx_v_cx[__pyx_v_i]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_x.diminfo[0].strides));
  }

  /* "rbdl.pyx":392
 *         cx[i] = x[i]
 * 
 *     return cx             # <<<<<<<<<<<<<<
 * 
 * cdef np.ndarray VectorNdToNumpy (crbdl.VectorNd cx):
 */
  __pyx_r = __pyx_v_cx;
  goto __pyx_L0;

  /* "rbdl.pyx":387
 * 
 * # VectorNd
 * cdef crbdl.VectorNd NumpyToVectorNd (np.ndarray[double, ndim=1, mode="c"] x):             # <<<<<<<<<<<<<<
 *     cdef crbdl.VectorNd cx = crbdl.VectorNd(x.shape[0])
 *     for i in range (x.shape[0]):
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("rbdl.NumpyToVectorNd", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":394
 *     return cx
 * 
 * cdef np.ndarray VectorNdToNumpy (crbdl.VectorNd cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

static PyArrayObject *__pyx_f_4rbdl_VectorNdToNumpy(RigidBodyDynamics::Math::VectorNd __pyx_v_cx) {
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_i;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("VectorNdToNumpy", 0);

  /* "rbdl.pyx":395
 * 
 * cdef np.ndarray VectorNdToNumpy (crbdl.VectorNd cx):
 *     result = np.ndarray ((cx.rows()))             # <<<<<<<<<<<<<<
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_cx.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":396
 * cdef np.ndarray VectorNdToNumpy (crbdl.VectorNd cx):
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):             # <<<<<<<<<<<<<<
 *         result[i] = cx[i]
 * 
 */
  __pyx_t_3 = __pyx_v_cx.rows();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "rbdl.pyx":397
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_cx[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 0) < 0)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":399
 *         result[i] = cx[i]
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * # MatrixNd
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (!(likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_5numpy_ndarray)))) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = ((PyArrayObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":394
 *     return cx
 * 
 * cdef np.ndarray VectorNdToNumpy (crbdl.VectorNd cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.VectorNdToNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":402
 * 
 * # MatrixNd
 * cdef crbdl.MatrixNd NumpyToMatrixNd (np.ndarray[double, ndim=2, mode="c"] M):             # <<<<<<<<<<<<<<
 *     cdef crbdl.MatrixNd cM = crbdl.MatrixNd(M.shape[0], M.shape[1])
 *     for i in range (M.shape[0]):
 */

static RigidBodyDynamics::Math::MatrixNd __pyx_f_4rbdl_NumpyToMatrixNd(PyArrayObject *__pyx_v_M) {
  RigidBodyDynamics::Math::MatrixNd __pyx_v_cM;
  npy_intp __pyx_v_i;
  npy_intp __pyx_v_j;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_M;
  __Pyx_Buffer __pyx_pybuffer_M;
  RigidBodyDynamics::Math::MatrixNd __pyx_r;
  __Pyx_RefNannyDeclarations
  npy_intp __pyx_t_1;
  npy_intp __pyx_t_2;
  npy_intp __pyx_t_3;
  npy_intp __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  __Pyx_RefNannySetupContext("NumpyToMatrixNd", 0);
  __pyx_pybuffer_M.pybuffer.buf = NULL;
  __pyx_pybuffer_M.refcount = 0;
  __pyx_pybuffernd_M.data = NULL;
  __pyx_pybuffernd_M.rcbuffer = &__pyx_pybuffer_M;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_M.rcbuffer->pybuffer, (PyObject*)__pyx_v_M, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 402, __pyx_L1_error)
  }
  __pyx_pybuffernd_M.diminfo[0].strides = __pyx_pybuffernd_M.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_M.diminfo[0].shape = __pyx_pybuffernd_M.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_M.diminfo[1].strides = __pyx_pybuffernd_M.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_M.diminfo[1].shape = __pyx_pybuffernd_M.rcbuffer->pybuffer.shape[1];

  /* "rbdl.pyx":403
 * # MatrixNd
 * cdef crbdl.MatrixNd NumpyToMatrixNd (np.ndarray[double, ndim=2, mode="c"] M):
 *     cdef crbdl.MatrixNd cM = crbdl.MatrixNd(M.shape[0], M.shape[1])             # <<<<<<<<<<<<<<
 *     for i in range (M.shape[0]):
 *         for j in range (M.shape[1]):
 */
  __pyx_v_cM = RigidBodyDynamics::Math::MatrixNd((__pyx_v_M->dimensions[0]), (__pyx_v_M->dimensions[1]));

  /* "rbdl.pyx":404
 * cdef crbdl.MatrixNd NumpyToMatrixNd (np.ndarray[double, ndim=2, mode="c"] M):
 *     cdef crbdl.MatrixNd cM = crbdl.MatrixNd(M.shape[0], M.shape[1])
 *     for i in range (M.shape[0]):             # <<<<<<<<<<<<<<
 *         for j in range (M.shape[1]):
 *             (&(cM.coeff(i,j)))[0] = M[i,j]
 */
  __pyx_t_1 = (__pyx_v_M->dimensions[0]);
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":405
 *     cdef crbdl.MatrixNd cM = crbdl.MatrixNd(M.shape[0], M.shape[1])
 *     for i in range (M.shape[0]):
 *         for j in range (M.shape[1]):             # <<<<<<<<<<<<<<
 *             (&(cM.coeff(i,j)))[0] = M[i,j]
 * 
 */
    __pyx_t_3 = (__pyx_v_M->dimensions[1]);
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_j = __pyx_t_4;

      /* "rbdl.pyx":406
 *     for i in range (M.shape[0]):
 *         for j in range (M.shape[1]):
 *             (&(cM.coeff(i,j)))[0] = M[i,j]             # <<<<<<<<<<<<<<
 * 
 *     return cM
 */
      __pyx_t_5 = __pyx_v_i;
      __pyx_t_6 = __pyx_v_j;
      if (__pyx_t_5 < 0) __pyx_t_5 += __pyx_pybuffernd_M.diminfo[0].shape;
      if (__pyx_t_6 < 0) __pyx_t_6 += __pyx_pybuffernd_M.diminfo[1].shape;
      ((&__pyx_v_cM.operator()(__pyx_v_i, __pyx_v_j))[0]) = (*__Pyx_BufPtrCContig2d(double *, __pyx_pybuffernd_M.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_M.diminfo[0].strides, __pyx_t_6, __pyx_pybuffernd_M.diminfo[1].strides));
    }
  }

  /* "rbdl.pyx":408
 *             (&(cM.coeff(i,j)))[0] = M[i,j]
 * 
 *     return cM             # <<<<<<<<<<<<<<
 * 
 * cdef np.ndarray MatrixNdToNumpy (crbdl.MatrixNd cM):
 */
  __pyx_r = __pyx_v_cM;
  goto __pyx_L0;

  /* "rbdl.pyx":402
 * 
 * # MatrixNd
 * cdef crbdl.MatrixNd NumpyToMatrixNd (np.ndarray[double, ndim=2, mode="c"] M):             # <<<<<<<<<<<<<<
 *     cdef crbdl.MatrixNd cM = crbdl.MatrixNd(M.shape[0], M.shape[1])
 *     for i in range (M.shape[0]):
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_M.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("rbdl.NumpyToMatrixNd", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_M.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":410
 *     return cM
 * 
 * cdef np.ndarray MatrixNdToNumpy (crbdl.MatrixNd cM):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ([cM.rows(), cM.cols()])
 *     for i in range (cM.rows()):
 */

static PyArrayObject *__pyx_f_4rbdl_MatrixNdToNumpy(RigidBodyDynamics::Math::MatrixNd __pyx_v_cM) {
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_i;
  int __pyx_v_j;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("MatrixNdToNumpy", 0);

  /* "rbdl.pyx":411
 * 
 * cdef np.ndarray MatrixNdToNumpy (crbdl.MatrixNd cM):
 *     result = np.ndarray ([cM.rows(), cM.cols()])             # <<<<<<<<<<<<<<
 *     for i in range (cM.rows()):
 *         for j in range (cM.cols()):
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_cM.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_cM.cols()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "rbdl.pyx":412
 * cdef np.ndarray MatrixNdToNumpy (crbdl.MatrixNd cM):
 *     result = np.ndarray ([cM.rows(), cM.cols()])
 *     for i in range (cM.rows()):             # <<<<<<<<<<<<<<
 *         for j in range (cM.cols()):
 *             result[i,j] = cM.coeff(i,j)
 */
  __pyx_t_4 = __pyx_v_cM.rows();
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "rbdl.pyx":413
 *     result = np.ndarray ([cM.rows(), cM.cols()])
 *     for i in range (cM.rows()):
 *         for j in range (cM.cols()):             # <<<<<<<<<<<<<<
 *             result[i,j] = cM.coeff(i,j)
 * 
 */
    __pyx_t_6 = __pyx_v_cM.cols();
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_j = __pyx_t_7;

      /* "rbdl.pyx":414
 *     for i in range (cM.rows()):
 *         for j in range (cM.cols()):
 *             result[i,j] = cM.coeff(i,j)             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_cM.operator()(__pyx_v_i, __pyx_v_j)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 414, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 414, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_j); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 414, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_1);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_result, __pyx_t_8, __pyx_t_3) < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }

  /* "rbdl.pyx":416
 *             result[i,j] = cM.coeff(i,j)
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * # SpatialVector
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (!(likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_5numpy_ndarray)))) __PYX_ERR(0, 416, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = ((PyArrayObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":410
 *     return cM
 * 
 * cdef np.ndarray MatrixNdToNumpy (crbdl.MatrixNd cM):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ([cM.rows(), cM.cols()])
 *     for i in range (cM.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.MatrixNdToNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":419
 * 
 * # SpatialVector
 * cdef np.ndarray SpatialVectorToNumpy (crbdl.SpatialVector cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

static PyArrayObject *__pyx_f_4rbdl_SpatialVectorToNumpy(RigidBodyDynamics::Math::SpatialVector __pyx_v_cx) {
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_i;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("SpatialVectorToNumpy", 0);

  /* "rbdl.pyx":420
 * # SpatialVector
 * cdef np.ndarray SpatialVectorToNumpy (crbdl.SpatialVector cx):
 *     result = np.ndarray ((cx.rows()))             # <<<<<<<<<<<<<<
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_cx.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":421
 * cdef np.ndarray SpatialVectorToNumpy (crbdl.SpatialVector cx):
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):             # <<<<<<<<<<<<<<
 *         result[i] = cx[i]
 * 
 */
  __pyx_t_3 = __pyx_v_cx.rows();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "rbdl.pyx":422
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_cx[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 422, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 0) < 0)) __PYX_ERR(0, 422, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":424
 *         result[i] = cx[i]
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef crbdl.Quaternion NumpyToQuaternion (np.ndarray[double, ndim=1, mode="c"] x):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (!(likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_5numpy_ndarray)))) __PYX_ERR(0, 424, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = ((PyArrayObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":419
 * 
 * # SpatialVector
 * cdef np.ndarray SpatialVectorToNumpy (crbdl.SpatialVector cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialVectorToNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":426
 *     return result
 * 
 * cdef crbdl.Quaternion NumpyToQuaternion (np.ndarray[double, ndim=1, mode="c"] x):             # <<<<<<<<<<<<<<
 *     cdef crbdl.Quaternion cx = crbdl.Quaternion()
 *     for i in range (3):
 */

static RigidBodyDynamics::Math::Quaternion __pyx_f_4rbdl_NumpyToQuaternion(PyArrayObject *__pyx_v_x) {
  RigidBodyDynamics::Math::Quaternion __pyx_v_cx;
  long __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  RigidBodyDynamics::Math::Quaternion __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("NumpyToQuaternion", 0);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 426, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":427
 * 
 * cdef crbdl.Quaternion NumpyToQuaternion (np.ndarray[double, ndim=1, mode="c"] x):
 *     cdef crbdl.Quaternion cx = crbdl.Quaternion()             # <<<<<<<<<<<<<<
 *     for i in range (3):
 *         cx[i] = x[i]
 */
  __pyx_v_cx = RigidBodyDynamics::Math::Quaternion();

  /* "rbdl.pyx":428
 * cdef crbdl.Quaternion NumpyToQuaternion (np.ndarray[double, ndim=1, mode="c"] x):
 *     cdef crbdl.Quaternion cx = crbdl.Quaternion()
 *     for i in range (3):             # <<<<<<<<<<<<<<
 *         cx[i] = x[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":429
 *     cdef crbdl.Quaternion cx = crbdl.Quaternion()
 *     for i in range (3):
 *         cx[i] = x[i]             # <<<<<<<<<<<<<<
 * 
 *     return cx
 */
    __pyx_t_2 = __pyx_v_i;
    if (__pyx_t_2 < 0) __pyx_t_2 += __pyx_pybuffernd_x.diminfo[0].shape;
    (__pyx_v_cx[__pyx_v_i]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_x.diminfo[0].strides));
  }

  /* "rbdl.pyx":431
 *         cx[i] = x[i]
 * 
 *     return cx             # <<<<<<<<<<<<<<
 * 
 * cdef np.ndarray QuaternionToNumpy (crbdl.Quaternion cx):
 */
  __pyx_r = __pyx_v_cx;
  goto __pyx_L0;

  /* "rbdl.pyx":426
 *     return result
 * 
 * cdef crbdl.Quaternion NumpyToQuaternion (np.ndarray[double, ndim=1, mode="c"] x):             # <<<<<<<<<<<<<<
 *     cdef crbdl.Quaternion cx = crbdl.Quaternion()
 *     for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("rbdl.NumpyToQuaternion", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":433
 *     return cx
 * 
 * cdef np.ndarray QuaternionToNumpy (crbdl.Quaternion cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

static PyArrayObject *__pyx_f_4rbdl_QuaternionToNumpy(RigidBodyDynamics::Math::Quaternion __pyx_v_cx) {
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_i;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("QuaternionToNumpy", 0);

  /* "rbdl.pyx":434
 * 
 * cdef np.ndarray QuaternionToNumpy (crbdl.Quaternion cx):
 *     result = np.ndarray ((cx.rows()))             # <<<<<<<<<<<<<<
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_cx.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":435
 * cdef np.ndarray QuaternionToNumpy (crbdl.Quaternion cx):
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):             # <<<<<<<<<<<<<<
 *         result[i] = cx[i]
 * 
 */
  __pyx_t_3 = __pyx_v_cx.rows();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "rbdl.pyx":436
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 *         result[i] = cx[i]             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_cx[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 436, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 0) < 0)) __PYX_ERR(0, 436, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":438
 *         result[i] = cx[i]
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * ##############################
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (!(likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_5numpy_ndarray)))) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = ((PyArrayObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":433
 *     return cx
 * 
 * cdef np.ndarray QuaternionToNumpy (crbdl.Quaternion cx):             # <<<<<<<<<<<<<<
 *     result = np.ndarray ((cx.rows()))
 *     for i in range (cx.rows()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.QuaternionToNumpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":450
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *          if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_16SpatialTransform_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_16SpatialTransform_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 450, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 450, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 450, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialTransform.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform___cinit__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self), __pyx_v_address);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_16SpatialTransform___cinit__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, uintptr_t __pyx_v_address) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":451
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *          if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialTransform()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":452
 *     def __cinit__(self, uintptr_t address=0):
 *          if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.SpatialTransform()
 *          else:
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":453
 *          if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialTransform()             # <<<<<<<<<<<<<<
 *          else:
 *             self.free_on_dealloc = False
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::SpatialTransform();

    /* "rbdl.pyx":451
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *          if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialTransform()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":455
 *             self.thisptr = new crbdl.SpatialTransform()
 *          else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.SpatialTransform*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":456
 *          else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.SpatialTransform*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::SpatialTransform *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":450
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *          if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":458
 *             self.thisptr = <crbdl.SpatialTransform*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_16SpatialTransform_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_16SpatialTransform_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_16SpatialTransform_2__dealloc__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_16SpatialTransform_2__dealloc__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":459
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 459, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":460
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":459
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":458
 *             self.thisptr = <crbdl.SpatialTransform*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.SpatialTransform.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":462
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "SpatialTransform E = [ [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}] ], r = [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.E.coeff(0,0), self.thisptr.E.coeff(0,1), self.thisptr.E.coeff(0,2),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_4__repr__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16SpatialTransform_4__repr__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":463
 * 
 *     def __repr__(self):
 *         return "SpatialTransform E = [ [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}] ], r = [{:3.4f}, {:3.4f}, {:3.4f}]".format (             # <<<<<<<<<<<<<<
 *                 self.thisptr.E.coeff(0,0), self.thisptr.E.coeff(0,1), self.thisptr.E.coeff(0,2),
 *                 self.thisptr.E.coeff(1,0), self.thisptr.E.coeff(1,1), self.thisptr.E.coeff(1,2),
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_SpatialTransform_E_3_4f_3_4f_3_4, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":464
 *     def __repr__(self):
 *         return "SpatialTransform E = [ [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}] ], r = [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.E.coeff(0,0), self.thisptr.E.coeff(0,1), self.thisptr.E.coeff(0,2),             # <<<<<<<<<<<<<<
 *                 self.thisptr.E.coeff(1,0), self.thisptr.E.coeff(1,1), self.thisptr.E.coeff(1,2),
 *                 self.thisptr.E.coeff(2,0), self.thisptr.E.coeff(2,1), self.thisptr.E.coeff(2,2),
 */
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(0, 0)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(0, 1)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(0, 2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "rbdl.pyx":465
 *         return "SpatialTransform E = [ [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}] ], r = [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.E.coeff(0,0), self.thisptr.E.coeff(0,1), self.thisptr.E.coeff(0,2),
 *                 self.thisptr.E.coeff(1,0), self.thisptr.E.coeff(1,1), self.thisptr.E.coeff(1,2),             # <<<<<<<<<<<<<<
 *                 self.thisptr.E.coeff(2,0), self.thisptr.E.coeff(2,1), self.thisptr.E.coeff(2,2),
 *                 self.thisptr.r[0], self.thisptr.r[1], self.thisptr.r[2])
 */
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(1, 0)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(1, 1)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(1, 2)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);

  /* "rbdl.pyx":466
 *                 self.thisptr.E.coeff(0,0), self.thisptr.E.coeff(0,1), self.thisptr.E.coeff(0,2),
 *                 self.thisptr.E.coeff(1,0), self.thisptr.E.coeff(1,1), self.thisptr.E.coeff(1,2),
 *                 self.thisptr.E.coeff(2,0), self.thisptr.E.coeff(2,1), self.thisptr.E.coeff(2,2),             # <<<<<<<<<<<<<<
 *                 self.thisptr.r[0], self.thisptr.r[1], self.thisptr.r[2])
 * 
 */
  __pyx_t_9 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(2, 0)); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(2, 1)); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(2, 2)); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);

  /* "rbdl.pyx":467
 *                 self.thisptr.E.coeff(1,0), self.thisptr.E.coeff(1,1), self.thisptr.E.coeff(1,2),
 *                 self.thisptr.E.coeff(2,0), self.thisptr.E.coeff(2,1), self.thisptr.E.coeff(2,2),
 *                 self.thisptr.r[0], self.thisptr.r[1], self.thisptr.r[2])             # <<<<<<<<<<<<<<
 * 
 *     property E:
 */
  __pyx_t_12 = PyFloat_FromDouble((__pyx_v_self->thisptr->r[0])); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_13 = PyFloat_FromDouble((__pyx_v_self->thisptr->r[1])); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_14 = PyFloat_FromDouble((__pyx_v_self->thisptr->r[2])); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_15 = NULL;
  __pyx_t_16 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_15)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_15);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_16 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[13] = {__pyx_t_15, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, __pyx_t_13, __pyx_t_14};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_16, 12+__pyx_t_16); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[13] = {__pyx_t_15, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, __pyx_t_13, __pyx_t_14};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_16, 12+__pyx_t_16); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  } else
  #endif
  {
    __pyx_t_17 = PyTuple_New(12+__pyx_t_16); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    if (__pyx_t_15) {
      __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_15); __pyx_t_15 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_16, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_16, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_17, 2+__pyx_t_16, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_17, 3+__pyx_t_16, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_17, 4+__pyx_t_16, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_17, 5+__pyx_t_16, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_17, 6+__pyx_t_16, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_17, 7+__pyx_t_16, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_11);
    PyTuple_SET_ITEM(__pyx_t_17, 8+__pyx_t_16, __pyx_t_11);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_17, 9+__pyx_t_16, __pyx_t_12);
    __Pyx_GIVEREF(__pyx_t_13);
    PyTuple_SET_ITEM(__pyx_t_17, 10+__pyx_t_16, __pyx_t_13);
    __Pyx_GIVEREF(__pyx_t_14);
    PyTuple_SET_ITEM(__pyx_t_17, 11+__pyx_t_16, __pyx_t_14);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_9 = 0;
    __pyx_t_10 = 0;
    __pyx_t_11 = 0;
    __pyx_t_12 = 0;
    __pyx_t_13 = 0;
    __pyx_t_14 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":462
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "SpatialTransform E = [ [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}], [{:3.4f}, {:3.4f}, {:3.4f}] ], r = [{:3.4f}, {:3.4f}, {:3.4f}]".format (
 *                 self.thisptr.E.coeff(0,0), self.thisptr.E.coeff(0,1), self.thisptr.E.coeff(0,2),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("rbdl.SpatialTransform.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":471
 *     property E:
 *         """ Rotational part of the SpatialTransform. """
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_1E_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_1E_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_1E___get__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16SpatialTransform_1E___get__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  long __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":472
 *         """ Rotational part of the SpatialTransform. """
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":473
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 for j in range (3):
 *                     result[i,j] = self.thisptr.E.coeff(i,j)
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":474
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 *                 for j in range (3):             # <<<<<<<<<<<<<<
 *                     result[i,j] = self.thisptr.E.coeff(i,j)
 * 
 */
    for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
      __pyx_v_j = __pyx_t_3;

      /* "rbdl.pyx":475
 *             for i in range (3):
 *                 for j in range (3):
 *                     result[i,j] = self.thisptr.E.coeff(i,j)             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->E.operator()(__pyx_v_i, __pyx_v_j)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_result, __pyx_t_6, __pyx_t_1) < 0)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "rbdl.pyx":477
 *                     result[i,j] = self.thisptr.E.coeff(i,j)
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":471
 *     property E:
 *         """ Rotational part of the SpatialTransform. """
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("rbdl.SpatialTransform.E.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":479
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_16SpatialTransform_1E_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_16SpatialTransform_1E_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_1E_2__set__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_16SpatialTransform_1E_2__set__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  long __pyx_v_j;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  double __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":480
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 for j in range (3):
 *                     (&(self.thisptr.E.coeff(i,j)))[0] = value[i,j]
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":481
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 for j in range (3):             # <<<<<<<<<<<<<<
 *                     (&(self.thisptr.E.coeff(i,j)))[0] = value[i,j]
 * 
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "rbdl.pyx":482
 *             for i in range (3):
 *                 for j in range (3):
 *                     (&(self.thisptr.E.coeff(i,j)))[0] = value[i,j]             # <<<<<<<<<<<<<<
 * 
 *     property r:
 */
      __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_GetItem(__pyx_v_value, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 482, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      ((&__pyx_v_self->thisptr->E.operator()(__pyx_v_i, __pyx_v_j))[0]) = __pyx_t_6;
    }
  }

  /* "rbdl.pyx":479
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.SpatialTransform.E.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":486
 *     property r:
 *         """ Translational part of the SpatialTransform. """
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_1r_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_1r_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_1r___get__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16SpatialTransform_1r___get__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":487
 *         """ Translational part of the SpatialTransform. """
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.r[i]
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":488
 *         def __get__ (self):
 *             result = np.ndarray ((3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 result[i] = self.thisptr.r[i]
 * 
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":489
 *             result = np.ndarray ((3))
 *             for i in range (3):
 *                 result[i] = self.thisptr.r[i]             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->thisptr->r[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, long, 1, __Pyx_PyInt_From_long, 0, 1, 0) < 0)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":491
 *                 result[i] = self.thisptr.r[i]
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":486
 *     property r:
 *         """ Translational part of the SpatialTransform. """
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialTransform.r.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":493
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.r[i]))[0] = value[i]
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_16SpatialTransform_1r_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_16SpatialTransform_1r_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_1r_2__set__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_16SpatialTransform_1r_2__set__(struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":494
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 (&(self.thisptr.r[i]))[0] = value[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":495
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 (&(self.thisptr.r[i]))[0] = value[i]             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 495, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 495, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    ((&(__pyx_v_self->thisptr->r[__pyx_v_i]))[0]) = __pyx_t_3;
  }

  /* "rbdl.pyx":493
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.r[i]))[0] = value[i]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialTransform.r.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":499
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialTransform (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_16SpatialTransform_6fromPointer[] = "SpatialTransform.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 499, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialTransform.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_6fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16SpatialTransform_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":500
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialTransform (address)             # <<<<<<<<<<<<<<
 * 
 * cdef class SpatialRigidBodyInertia:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 500, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 500, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 500, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":499
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialTransform (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialTransform.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_16SpatialTransform_8__reduce_cython__[] = "SpatialTransform.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_8__reduce_cython__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16SpatialTransform_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialTransform.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_16SpatialTransform_10__setstate_cython__[] = "SpatialTransform.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_16SpatialTransform_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_16SpatialTransform_10__setstate_cython__(((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16SpatialTransform_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialTransform.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":506
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 506, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 506, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 506, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia___cinit__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), __pyx_v_address);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia___cinit__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, uintptr_t __pyx_v_address) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":507
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialRigidBodyInertia()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":508
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.SpatialRigidBodyInertia()
 *         else:
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":509
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialRigidBodyInertia()             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::Math::SpatialRigidBodyInertia();

    /* "rbdl.pyx":507
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.SpatialRigidBodyInertia()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":511
 *             self.thisptr = new crbdl.SpatialRigidBodyInertia()
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.SpatialRigidBodyInertia*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":512
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.SpatialRigidBodyInertia*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Math::SpatialRigidBodyInertia *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":506
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":514
 *             self.thisptr = <crbdl.SpatialRigidBodyInertia*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_23SpatialRigidBodyInertia_2__dealloc__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_23SpatialRigidBodyInertia_2__dealloc__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":515
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 515, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":516
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":515
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":514
 *             self.thisptr = <crbdl.SpatialRigidBodyInertia*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.SpatialRigidBodyInertia.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":518
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.SpatialRigidBodyInertia (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_4__repr__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_4__repr__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":519
 * 
 *     def __repr__(self):
 *         return "rbdl.SpatialRigidBodyInertia (0x{:0x})".format(<uintptr_t><void *> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_rbdl_SpatialRigidBodyInertia_0x, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(((uintptr_t)((void *)__pyx_v_self->thisptr))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 519, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 519, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 519, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 519, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 519, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":518
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.SpatialRigidBodyInertia (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":523
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialRigidBodyInertia (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_23SpatialRigidBodyInertia_6fromPointer[] = "SpatialRigidBodyInertia.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 523, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_6fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":524
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialRigidBodyInertia (address)             # <<<<<<<<<<<<<<
 * 
 *     property m:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":523
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialRigidBodyInertia (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":527
 * 
 *     property m:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.m
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_1m_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_1m_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1m___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_1m___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":528
 *     property m:
 *         def __get__ (self):
 *             return self.thisptr.m             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":527
 * 
 *     property m:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.m
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.m.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":530
 *             return self.thisptr.m
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.m = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1m_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1m_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1m_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1m_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":531
 * 
 *         def __set__ (self, value):
 *             self.thisptr.m = value             # <<<<<<<<<<<<<<
 * 
 *     property h:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L1_error)
  __pyx_v_self->thisptr->m = __pyx_t_1;

  /* "rbdl.pyx":530
 *             return self.thisptr.m
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.m = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.m.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":535
 *     property h:
 *         """ Translational part of the SpatialRigidBodyInertia. """
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_1h_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_1h_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1h___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_1h___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":536
 *         """ Translational part of the SpatialRigidBodyInertia. """
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.h[i]
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":537
 *         def __get__ (self):
 *             result = np.ndarray ((3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 result[i] = self.thisptr.h[i]
 * 
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":538
 *             result = np.ndarray ((3))
 *             for i in range (3):
 *                 result[i] = self.thisptr.h[i]             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->thisptr->h[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 538, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, long, 1, __Pyx_PyInt_From_long, 0, 1, 0) < 0)) __PYX_ERR(0, 538, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":540
 *                 result[i] = self.thisptr.h[i]
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":535
 *     property h:
 *         """ Translational part of the SpatialRigidBodyInertia. """
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.h.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":542
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.h[i]))[0] = value[i]
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1h_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1h_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1h_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_1h_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":543
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 (&(self.thisptr.h[i]))[0] = value[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":544
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 (&(self.thisptr.h[i]))[0] = value[i]             # <<<<<<<<<<<<<<
 * 
 *     property Ixx:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    ((&(__pyx_v_self->thisptr->h[__pyx_v_i]))[0]) = __pyx_t_3;
  }

  /* "rbdl.pyx":542
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.h[i]))[0] = value[i]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.h.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":547
 * 
 *     property Ixx:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Ixx
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Ixx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Ixx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Ixx___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Ixx___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":548
 *     property Ixx:
 *         def __get__ (self):
 *             return self.thisptr.Ixx             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->Ixx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":547
 * 
 *     property Ixx:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Ixx
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Ixx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":550
 *             return self.thisptr.Ixx
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Ixx = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Ixx_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Ixx_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Ixx_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Ixx_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":551
 * 
 *         def __set__ (self, value):
 *             self.thisptr.Ixx = value             # <<<<<<<<<<<<<<
 * 
 *     property Iyx:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 551, __pyx_L1_error)
  __pyx_v_self->thisptr->Ixx = __pyx_t_1;

  /* "rbdl.pyx":550
 *             return self.thisptr.Ixx
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Ixx = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Ixx.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":554
 * 
 *     property Iyx:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Iyx
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyx___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyx___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":555
 *     property Iyx:
 *         def __get__ (self):
 *             return self.thisptr.Iyx             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->Iyx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":554
 * 
 *     property Iyx:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Iyx
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Iyx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":557
 *             return self.thisptr.Iyx
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Iyx = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyx_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyx_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyx_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyx_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":558
 * 
 *         def __set__ (self, value):
 *             self.thisptr.Iyx = value             # <<<<<<<<<<<<<<
 * 
 *     property Iyy:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 558, __pyx_L1_error)
  __pyx_v_self->thisptr->Iyx = __pyx_t_1;

  /* "rbdl.pyx":557
 *             return self.thisptr.Iyx
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Iyx = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Iyx.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":561
 * 
 *     property Iyy:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Iyy
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyy___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyy___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":562
 *     property Iyy:
 *         def __get__ (self):
 *             return self.thisptr.Iyy             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->Iyy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":561
 * 
 *     property Iyy:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Iyy
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Iyy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":564
 *             return self.thisptr.Iyy
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Iyy = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyy_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Iyy_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":565
 * 
 *         def __set__ (self, value):
 *             self.thisptr.Iyy = value             # <<<<<<<<<<<<<<
 * 
 *     property Izx:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 565, __pyx_L1_error)
  __pyx_v_self->thisptr->Iyy = __pyx_t_1;

  /* "rbdl.pyx":564
 *             return self.thisptr.Iyy
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Iyy = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Iyy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":568
 * 
 *     property Izx:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Izx
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izx___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izx___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":569
 *     property Izx:
 *         def __get__ (self):
 *             return self.thisptr.Izx             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->Izx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":568
 * 
 *     property Izx:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Izx
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Izx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":571
 *             return self.thisptr.Izx
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Izx = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izx_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izx_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izx_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izx_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":572
 * 
 *         def __set__ (self, value):
 *             self.thisptr.Izx = value             # <<<<<<<<<<<<<<
 * 
 *     property Izy:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 572, __pyx_L1_error)
  __pyx_v_self->thisptr->Izx = __pyx_t_1;

  /* "rbdl.pyx":571
 *             return self.thisptr.Izx
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Izx = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Izx.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":575
 * 
 *     property Izy:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Izy
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izy___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izy___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":576
 *     property Izy:
 *         def __get__ (self):
 *             return self.thisptr.Izy             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->Izy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":575
 * 
 *     property Izy:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Izy
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Izy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":578
 *             return self.thisptr.Izy
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Izy = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izy_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izy_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":579
 * 
 *         def __set__ (self, value):
 *             self.thisptr.Izy = value             # <<<<<<<<<<<<<<
 * 
 *     property Izz:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 579, __pyx_L1_error)
  __pyx_v_self->thisptr->Izy = __pyx_t_1;

  /* "rbdl.pyx":578
 *             return self.thisptr.Izy
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Izy = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Izy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":582
 * 
 *     property Izz:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Izz
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izz___get__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izz___get__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":583
 *     property Izz:
 *         def __get__ (self):
 *             return self.thisptr.Izz             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->Izz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":582
 * 
 *     property Izz:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.Izz
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Izz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":585
 *             return self.thisptr.Izz
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Izz = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izz_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izz_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izz_2__set__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_23SpatialRigidBodyInertia_3Izz_2__set__(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":586
 * 
 *         def __set__ (self, value):
 *             self.thisptr.Izz = value             # <<<<<<<<<<<<<<
 * 
 * ##############################
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 586, __pyx_L1_error)
  __pyx_v_self->thisptr->Izz = __pyx_t_1;

  /* "rbdl.pyx":585
 *             return self.thisptr.Izz
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.Izz = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.Izz.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_23SpatialRigidBodyInertia_8__reduce_cython__[] = "SpatialRigidBodyInertia.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_8__reduce_cython__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_23SpatialRigidBodyInertia_10__setstate_cython__[] = "SpatialRigidBodyInertia.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_23SpatialRigidBodyInertia_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_23SpatialRigidBodyInertia_10__setstate_cython__(((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_23SpatialRigidBodyInertia_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.SpatialRigidBodyInertia.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":598
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, **kwargs):             # <<<<<<<<<<<<<<
 *         cdef double c_mass
 *         cdef crbdl.Vector3d c_com
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_4Body_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_4Body_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (__pyx_kwds && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_r = __pyx_pf_4rbdl_4Body___cinit__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self), __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_4Body___cinit__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_kwargs) {
  double __pyx_v_c_mass;
  RigidBodyDynamics::Math::Vector3d __pyx_v_c_com;
  RigidBodyDynamics::Math::Matrix3d __pyx_v_c_inertia;
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_mass = NULL;
  PyObject *__pyx_v_com = NULL;
  PyObject *__pyx_v_inertia = NULL;
  long __pyx_v_i;
  long __pyx_v_j;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  uintptr_t __pyx_t_4;
  int __pyx_t_5;
  double __pyx_t_6;
  long __pyx_t_7;
  long __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":602
 *         cdef crbdl.Vector3d c_com
 *         cdef crbdl.Matrix3d c_inertia
 *         cdef uintptr_t address=0             # <<<<<<<<<<<<<<
 * 
 *         if "address" in kwargs.keys():
 */
  __pyx_v_address = 0;

  /* "rbdl.pyx":604
 *         cdef uintptr_t address=0
 * 
 *         if "address" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             address=kwargs["address"]
 *         mass = None
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_address, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "rbdl.pyx":605
 * 
 *         if "address" in kwargs.keys():
 *             address=kwargs["address"]             # <<<<<<<<<<<<<<
 *         mass = None
 *         if "mass" in kwargs.keys():
 */
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_n_s_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 605, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_t_1); if (unlikely((__pyx_t_4 == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 605, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_address = __pyx_t_4;

    /* "rbdl.pyx":604
 *         cdef uintptr_t address=0
 * 
 *         if "address" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             address=kwargs["address"]
 *         mass = None
 */
  }

  /* "rbdl.pyx":606
 *         if "address" in kwargs.keys():
 *             address=kwargs["address"]
 *         mass = None             # <<<<<<<<<<<<<<
 *         if "mass" in kwargs.keys():
 *             mass=kwargs["mass"]
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_mass = Py_None;

  /* "rbdl.pyx":607
 *             address=kwargs["address"]
 *         mass = None
 *         if "mass" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             mass=kwargs["mass"]
 *         com = None
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_mass, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":608
 *         mass = None
 *         if "mass" in kwargs.keys():
 *             mass=kwargs["mass"]             # <<<<<<<<<<<<<<
 *         com = None
 *         if "com" in kwargs.keys():
 */
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_n_s_mass); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 608, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_mass, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "rbdl.pyx":607
 *             address=kwargs["address"]
 *         mass = None
 *         if "mass" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             mass=kwargs["mass"]
 *         com = None
 */
  }

  /* "rbdl.pyx":609
 *         if "mass" in kwargs.keys():
 *             mass=kwargs["mass"]
 *         com = None             # <<<<<<<<<<<<<<
 *         if "com" in kwargs.keys():
 *             com=kwargs["com"]
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_com = Py_None;

  /* "rbdl.pyx":610
 *             mass=kwargs["mass"]
 *         com = None
 *         if "com" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             com=kwargs["com"]
 *         inertia = None
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_com, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "rbdl.pyx":611
 *         com = None
 *         if "com" in kwargs.keys():
 *             com=kwargs["com"]             # <<<<<<<<<<<<<<
 *         inertia = None
 *         if "inertia" in kwargs.keys():
 */
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_n_s_com); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_com, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "rbdl.pyx":610
 *             mass=kwargs["mass"]
 *         com = None
 *         if "com" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             com=kwargs["com"]
 *         inertia = None
 */
  }

  /* "rbdl.pyx":612
 *         if "com" in kwargs.keys():
 *             com=kwargs["com"]
 *         inertia = None             # <<<<<<<<<<<<<<
 *         if "inertia" in kwargs.keys():
 *             inertia=kwargs["inertia"]
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_inertia = Py_None;

  /* "rbdl.pyx":613
 *             com=kwargs["com"]
 *         inertia = None
 *         if "inertia" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             inertia=kwargs["inertia"]
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_inertia, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":614
 *         inertia = None
 *         if "inertia" in kwargs.keys():
 *             inertia=kwargs["inertia"]             # <<<<<<<<<<<<<<
 * 
 *         if address == 0:
 */
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_n_s_inertia); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_inertia, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "rbdl.pyx":613
 *             com=kwargs["com"]
 *         inertia = None
 *         if "inertia" in kwargs.keys():             # <<<<<<<<<<<<<<
 *             inertia=kwargs["inertia"]
 * 
 */
  }

  /* "rbdl.pyx":616
 *             inertia=kwargs["inertia"]
 * 
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             if (mass is not None) and (com is not None) and (inertia is not None):
 */
  __pyx_t_2 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":617
 * 
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             if (mass is not None) and (com is not None) and (inertia is not None):
 *                 c_mass = mass
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":618
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             if (mass is not None) and (com is not None) and (inertia is not None):             # <<<<<<<<<<<<<<
 *                 c_mass = mass
 * 
 */
    __pyx_t_3 = (__pyx_v_mass != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (__pyx_t_5) {
    } else {
      __pyx_t_2 = __pyx_t_5;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_com != Py_None);
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (__pyx_t_3) {
    } else {
      __pyx_t_2 = __pyx_t_3;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_inertia != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    __pyx_t_2 = __pyx_t_5;
    __pyx_L9_bool_binop_done:;
    if (__pyx_t_2) {

      /* "rbdl.pyx":619
 *             self.free_on_dealloc = True
 *             if (mass is not None) and (com is not None) and (inertia is not None):
 *                 c_mass = mass             # <<<<<<<<<<<<<<
 * 
 *                 for i in range (3):
 */
      __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_mass); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 619, __pyx_L1_error)
      __pyx_v_c_mass = __pyx_t_6;

      /* "rbdl.pyx":621
 *                 c_mass = mass
 * 
 *                 for i in range (3):             # <<<<<<<<<<<<<<
 *                     c_com[i] = com[i]
 * 
 */
      for (__pyx_t_7 = 0; __pyx_t_7 < 3; __pyx_t_7+=1) {
        __pyx_v_i = __pyx_t_7;

        /* "rbdl.pyx":622
 * 
 *                 for i in range (3):
 *                     c_com[i] = com[i]             # <<<<<<<<<<<<<<
 * 
 *                 for i in range (3):
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_com, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 622, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        (__pyx_v_c_com[__pyx_v_i]) = __pyx_t_6;
      }

      /* "rbdl.pyx":624
 *                     c_com[i] = com[i]
 * 
 *                 for i in range (3):             # <<<<<<<<<<<<<<
 *                     for j in range (3):
 *                         (&(c_inertia.coeff(i,j)))[0] = inertia[i,j]
 */
      for (__pyx_t_7 = 0; __pyx_t_7 < 3; __pyx_t_7+=1) {
        __pyx_v_i = __pyx_t_7;

        /* "rbdl.pyx":625
 * 
 *                 for i in range (3):
 *                     for j in range (3):             # <<<<<<<<<<<<<<
 *                         (&(c_inertia.coeff(i,j)))[0] = inertia[i,j]
 * 
 */
        for (__pyx_t_8 = 0; __pyx_t_8 < 3; __pyx_t_8+=1) {
          __pyx_v_j = __pyx_t_8;

          /* "rbdl.pyx":626
 *                 for i in range (3):
 *                     for j in range (3):
 *                         (&(c_inertia.coeff(i,j)))[0] = inertia[i,j]             # <<<<<<<<<<<<<<
 * 
 *                 self.thisptr = new crbdl.Body(c_mass, c_com, c_inertia)
 */
          __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_9);
          PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_9);
          __pyx_t_1 = 0;
          __pyx_t_9 = 0;
          __pyx_t_9 = PyObject_GetItem(__pyx_v_inertia, __pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_9); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          ((&__pyx_v_c_inertia.operator()(__pyx_v_i, __pyx_v_j))[0]) = __pyx_t_6;
        }
      }

      /* "rbdl.pyx":628
 *                         (&(c_inertia.coeff(i,j)))[0] = inertia[i,j]
 * 
 *                 self.thisptr = new crbdl.Body(c_mass, c_com, c_inertia)             # <<<<<<<<<<<<<<
 *             else:
 *                 self.thisptr = new crbdl.Body()
 */
      __pyx_v_self->thisptr = new RigidBodyDynamics::Body(__pyx_v_c_mass, __pyx_v_c_com, __pyx_v_c_inertia);

      /* "rbdl.pyx":618
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             if (mass is not None) and (com is not None) and (inertia is not None):             # <<<<<<<<<<<<<<
 *                 c_mass = mass
 * 
 */
      goto __pyx_L8;
    }

    /* "rbdl.pyx":630
 *                 self.thisptr = new crbdl.Body(c_mass, c_com, c_inertia)
 *             else:
 *                 self.thisptr = new crbdl.Body()             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
    /*else*/ {
      __pyx_v_self->thisptr = new RigidBodyDynamics::Body();
    }
    __pyx_L8:;

    /* "rbdl.pyx":616
 *             inertia=kwargs["inertia"]
 * 
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             if (mass is not None) and (com is not None) and (inertia is not None):
 */
    goto __pyx_L7;
  }

  /* "rbdl.pyx":632
 *                 self.thisptr = new crbdl.Body()
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.Body*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":633
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.Body*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Body *)__pyx_v_address);
  }
  __pyx_L7:;

  /* "rbdl.pyx":598
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, **kwargs):             # <<<<<<<<<<<<<<
 *         cdef double c_mass
 *         cdef crbdl.Vector3d c_com
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("rbdl.Body.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mass);
  __Pyx_XDECREF(__pyx_v_com);
  __Pyx_XDECREF(__pyx_v_inertia);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":635
 *             self.thisptr = <crbdl.Body*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_4Body_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_4Body_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_4Body_2__dealloc__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_4Body_2__dealloc__(struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":636
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 636, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":637
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":636
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":635
 *             self.thisptr = <crbdl.Body*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.Body.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":639
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.Body (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_4Body_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_4__repr__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_4__repr__(struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":640
 * 
 *     def __repr__(self):
 *         return "rbdl.Body (0x{:0x})".format(<uintptr_t><void *> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_rbdl_Body_0x_0x, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(((uintptr_t)((void *)__pyx_v_self->thisptr))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 640, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":639
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.Body (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.Body.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":644
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Body (address=address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_4Body_6fromPointer[] = "Body.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_4Body_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 644, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Body.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_4Body_6fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":645
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return Body (address=address)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_address, __pyx_t_2) < 0) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Body), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":644
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Body (address=address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Body.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":648
 * 
 *     @classmethod
 *     def fromMassComInertia(cls, double mass,             # <<<<<<<<<<<<<<
 *             np.ndarray[double, ndim=1] com,
 *             np.ndarray[double, ndim=2] inertia):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_9fromMassComInertia(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_4Body_8fromMassComInertia[] = "Body.fromMassComInertia(type cls, double mass, ndarray com, ndarray inertia)";
static PyObject *__pyx_pw_4rbdl_4Body_9fromMassComInertia(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_mass;
  PyArrayObject *__pyx_v_com = 0;
  PyArrayObject *__pyx_v_inertia = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromMassComInertia (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_mass,&__pyx_n_s_com,&__pyx_n_s_inertia,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mass)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_com)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromMassComInertia", 1, 3, 3, 1); __PYX_ERR(0, 648, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inertia)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromMassComInertia", 1, 3, 3, 2); __PYX_ERR(0, 648, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fromMassComInertia") < 0)) __PYX_ERR(0, 648, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_mass = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_mass == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 648, __pyx_L3_error)
    __pyx_v_com = ((PyArrayObject *)values[1]);
    __pyx_v_inertia = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromMassComInertia", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 648, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Body.fromMassComInertia", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_com), __pyx_ptype_5numpy_ndarray, 1, "com", 0))) __PYX_ERR(0, 649, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inertia), __pyx_ptype_5numpy_ndarray, 1, "inertia", 0))) __PYX_ERR(0, 650, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_4Body_8fromMassComInertia(((PyTypeObject*)__pyx_v_cls), __pyx_v_mass, __pyx_v_com, __pyx_v_inertia);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_8fromMassComInertia(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, double __pyx_v_mass, PyArrayObject *__pyx_v_com, PyArrayObject *__pyx_v_inertia) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_com;
  __Pyx_Buffer __pyx_pybuffer_com;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_inertia;
  __Pyx_Buffer __pyx_pybuffer_inertia;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromMassComInertia", 0);
  __pyx_pybuffer_com.pybuffer.buf = NULL;
  __pyx_pybuffer_com.refcount = 0;
  __pyx_pybuffernd_com.data = NULL;
  __pyx_pybuffernd_com.rcbuffer = &__pyx_pybuffer_com;
  __pyx_pybuffer_inertia.pybuffer.buf = NULL;
  __pyx_pybuffer_inertia.refcount = 0;
  __pyx_pybuffernd_inertia.data = NULL;
  __pyx_pybuffernd_inertia.rcbuffer = &__pyx_pybuffer_inertia;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_com.rcbuffer->pybuffer, (PyObject*)__pyx_v_com, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 648, __pyx_L1_error)
  }
  __pyx_pybuffernd_com.diminfo[0].strides = __pyx_pybuffernd_com.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_com.diminfo[0].shape = __pyx_pybuffernd_com.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_inertia.rcbuffer->pybuffer, (PyObject*)__pyx_v_inertia, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 648, __pyx_L1_error)
  }
  __pyx_pybuffernd_inertia.diminfo[0].strides = __pyx_pybuffernd_inertia.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_inertia.diminfo[0].shape = __pyx_pybuffernd_inertia.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_inertia.diminfo[1].strides = __pyx_pybuffernd_inertia.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_inertia.diminfo[1].shape = __pyx_pybuffernd_inertia.rcbuffer->pybuffer.shape[1];

  /* "rbdl.pyx":652
 *             np.ndarray[double, ndim=2] inertia):
 * 
 *         return Body (address=0, mass=mass, com=com, inertia=inertia)             # <<<<<<<<<<<<<<
 * 
 *     # Properties
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_address, __pyx_int_0) < 0) __PYX_ERR(0, 652, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_mass); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_mass, __pyx_t_2) < 0) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_com, ((PyObject *)__pyx_v_com)) < 0) __PYX_ERR(0, 652, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_inertia, ((PyObject *)__pyx_v_inertia)) < 0) __PYX_ERR(0, 652, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Body), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":648
 * 
 *     @classmethod
 *     def fromMassComInertia(cls, double mass,             # <<<<<<<<<<<<<<
 *             np.ndarray[double, ndim=1] com,
 *             np.ndarray[double, ndim=2] inertia):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inertia.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.Body.fromMassComInertia", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inertia.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":656
 *     # Properties
 *     property mMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mMass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_5mMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_4Body_5mMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_5mMass___get__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_5mMass___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":657
 *     property mMass:
 *         def __get__ (self):
 *             return self.thisptr.mMass             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->mMass); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":656
 *     # Properties
 *     property mMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mMass
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Body.mMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":659
 *             return self.thisptr.mMass
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mMass = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_4Body_5mMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_4Body_5mMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_5mMass_2__set__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_4Body_5mMass_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":660
 * 
 *         def __set__ (self, value):
 *             self.thisptr.mMass = value             # <<<<<<<<<<<<<<
 * 
 *     property mCenterOfMass:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 660, __pyx_L1_error)
  __pyx_v_self->thisptr->mMass = __pyx_t_1;

  /* "rbdl.pyx":659
 *             return self.thisptr.mMass
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mMass = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.Body.mMass.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":663
 * 
 *     property mCenterOfMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_13mCenterOfMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_4Body_13mCenterOfMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_13mCenterOfMass___get__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_13mCenterOfMass___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":664
 *     property mCenterOfMass:
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":665
 *         def __get__ (self):
 *             result = np.ndarray ((3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 * 
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":666
 *             result = np.ndarray ((3))
 *             for i in range (3):
 *                 result[i] = self.thisptr.mCenterOfMass[i]             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->thisptr->mCenterOfMass[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 666, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, long, 1, __Pyx_PyInt_From_long, 0, 1, 0) < 0)) __PYX_ERR(0, 666, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":668
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":663
 * 
 *     property mCenterOfMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Body.mCenterOfMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":670
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_4Body_13mCenterOfMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_4Body_13mCenterOfMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_13mCenterOfMass_2__set__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_4Body_13mCenterOfMass_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":671
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":672
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]             # <<<<<<<<<<<<<<
 * 
 *     property mInertia:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 672, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    ((&(__pyx_v_self->thisptr->mCenterOfMass[__pyx_v_i]))[0]) = __pyx_t_3;
  }

  /* "rbdl.pyx":670
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Body.mCenterOfMass.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":675
 * 
 *     property mInertia:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_8mInertia_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_4Body_8mInertia_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_8mInertia___get__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_8mInertia___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  long __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":676
 *     property mInertia:
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":677
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 for j in range (3):
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":678
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 *                 for j in range (3):             # <<<<<<<<<<<<<<
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)
 * 
 */
    for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
      __pyx_v_j = __pyx_t_3;

      /* "rbdl.pyx":679
 *             for i in range (3):
 *                 for j in range (3):
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->mInertia.operator()(__pyx_v_i, __pyx_v_j)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 679, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 679, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 679, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 679, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_result, __pyx_t_6, __pyx_t_1) < 0)) __PYX_ERR(0, 679, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "rbdl.pyx":681
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":675
 * 
 *     property mInertia:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("rbdl.Body.mInertia.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":683
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_4Body_8mInertia_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_4Body_8mInertia_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_8mInertia_2__set__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_4Body_8mInertia_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  long __pyx_v_j;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  double __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":684
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 for j in range (3):
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":685
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 for j in range (3):             # <<<<<<<<<<<<<<
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]
 * 
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "rbdl.pyx":686
 *             for i in range (3):
 *                 for j in range (3):
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]             # <<<<<<<<<<<<<<
 * 
 *     property mIsVirtual:
 */
      __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 686, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 686, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 686, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_GetItem(__pyx_v_value, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 686, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 686, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      ((&__pyx_v_self->thisptr->mInertia.operator()(__pyx_v_i, __pyx_v_j))[0]) = __pyx_t_6;
    }
  }

  /* "rbdl.pyx":683
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.Body.mInertia.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":689
 * 
 *     property mIsVirtual:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mIsVirtual
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_10mIsVirtual_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_4Body_10mIsVirtual_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_10mIsVirtual___get__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_10mIsVirtual___get__(struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":690
 *     property mIsVirtual:
 *         def __get__ (self):
 *             return self.thisptr.mIsVirtual             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->mIsVirtual); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":689
 * 
 *     property mIsVirtual:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mIsVirtual
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Body.mIsVirtual.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":692
 *             return self.thisptr.mIsVirtual
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mIsVirtual = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_4Body_10mIsVirtual_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_4Body_10mIsVirtual_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_10mIsVirtual_2__set__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_4Body_10mIsVirtual_2__set__(struct __pyx_obj_4rbdl_Body *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":693
 * 
 *         def __set__ (self, value):
 *             self.thisptr.mIsVirtual = value             # <<<<<<<<<<<<<<
 * 
 * cdef class FixedBody:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 693, __pyx_L1_error)
  __pyx_v_self->thisptr->mIsVirtual = __pyx_t_1;

  /* "rbdl.pyx":692
 *             return self.thisptr.mIsVirtual
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mIsVirtual = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.Body.mIsVirtual.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_4Body_10__reduce_cython__[] = "Body.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_4Body_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_10__reduce_cython__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Body *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Body.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_4Body_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_4Body_12__setstate_cython__[] = "Body.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_4Body_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_4Body_12__setstate_cython__(((struct __pyx_obj_4rbdl_Body *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4Body_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Body *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Body.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":699
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_9FixedBody_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_9FixedBody_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 699, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 699, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.FixedBody.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_9FixedBody___cinit__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self), __pyx_v_address);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_9FixedBody___cinit__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, uintptr_t __pyx_v_address) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":700
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.FixedBody()
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":701
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             self.thisptr = new crbdl.FixedBody()
 *         else:
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":702
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.FixedBody()             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
    __pyx_v_self->thisptr = new RigidBodyDynamics::FixedBody();

    /* "rbdl.pyx":700
 * 
 *     def __cinit__(self, uintptr_t address=0):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             self.thisptr = new crbdl.FixedBody()
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":704
 *             self.thisptr = new crbdl.FixedBody()
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.FixedBody*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":705
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.FixedBody*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::FixedBody *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":699
 *     cdef free_on_dealloc
 * 
 *     def __cinit__(self, uintptr_t address=0):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":707
 *             self.thisptr = <crbdl.FixedBody*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_9FixedBody_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_9FixedBody_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_9FixedBody_2__dealloc__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_9FixedBody_2__dealloc__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":708
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 708, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":709
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":708
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":707
 *             self.thisptr = <crbdl.FixedBody*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.FixedBody.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":711
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.FixedBody (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_9FixedBody_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_4__repr__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_4__repr__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":712
 * 
 *     def __repr__(self):
 *         return "rbdl.FixedBody (0x{:0x})".format(<uintptr_t><void *> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_rbdl_FixedBody_0x_0x, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(((uintptr_t)((void *)__pyx_v_self->thisptr))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 712, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 712, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 712, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 712, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 712, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":711
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.FixedBody (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.FixedBody.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":716
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return FixedBody (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_9FixedBody_6fromPointer[] = "FixedBody.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_9FixedBody_7fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 716, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.FixedBody.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_6fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_6fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":717
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return FixedBody (address)             # <<<<<<<<<<<<<<
 * 
 *     # Properties
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_FixedBody), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":716
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return FixedBody (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.FixedBody.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":721
 *     # Properties
 *     property mMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mMass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_5mMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_9FixedBody_5mMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_5mMass___get__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_5mMass___get__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":722
 *     property mMass:
 *         def __get__ (self):
 *             return self.thisptr.mMass             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->mMass); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":721
 *     # Properties
 *     property mMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mMass
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.FixedBody.mMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":724
 *             return self.thisptr.mMass
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mMass = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_9FixedBody_5mMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_9FixedBody_5mMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_5mMass_2__set__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_9FixedBody_5mMass_2__set__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":725
 * 
 *         def __set__ (self, value):
 *             self.thisptr.mMass = value             # <<<<<<<<<<<<<<
 * 
 *     property mCenterOfMass:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 725, __pyx_L1_error)
  __pyx_v_self->thisptr->mMass = __pyx_t_1;

  /* "rbdl.pyx":724
 *             return self.thisptr.mMass
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mMass = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.FixedBody.mMass.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":728
 * 
 *     property mCenterOfMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_13mCenterOfMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_9FixedBody_13mCenterOfMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_13mCenterOfMass___get__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_13mCenterOfMass___get__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":729
 *     property mCenterOfMass:
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":730
 *         def __get__ (self):
 *             result = np.ndarray ((3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 * 
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":731
 *             result = np.ndarray ((3))
 *             for i in range (3):
 *                 result[i] = self.thisptr.mCenterOfMass[i]             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->thisptr->mCenterOfMass[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 731, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_result, __pyx_v_i, __pyx_t_1, long, 1, __Pyx_PyInt_From_long, 0, 1, 0) < 0)) __PYX_ERR(0, 731, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "rbdl.pyx":733
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":728
 * 
 *     property mCenterOfMass:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.FixedBody.mCenterOfMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":735
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_9FixedBody_13mCenterOfMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_9FixedBody_13mCenterOfMass_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_13mCenterOfMass_2__set__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_9FixedBody_13mCenterOfMass_2__set__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":736
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":737
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]             # <<<<<<<<<<<<<<
 * 
 *     property mInertia:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 737, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 737, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    ((&(__pyx_v_self->thisptr->mCenterOfMass[__pyx_v_i]))[0]) = __pyx_t_3;
  }

  /* "rbdl.pyx":735
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 (&(self.thisptr.mCenterOfMass[i]))[0] = value[i]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.FixedBody.mCenterOfMass.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":740
 * 
 *     property mInertia:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_8mInertia_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_9FixedBody_8mInertia_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_8mInertia___get__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_8mInertia___get__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  long __pyx_v_i;
  long __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":741
 *     property mInertia:
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":742
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 for j in range (3):
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "rbdl.pyx":743
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 *                 for j in range (3):             # <<<<<<<<<<<<<<
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)
 * 
 */
    for (__pyx_t_3 = 0; __pyx_t_3 < 3; __pyx_t_3+=1) {
      __pyx_v_j = __pyx_t_3;

      /* "rbdl.pyx":744
 *             for i in range (3):
 *                 for j in range (3):
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)             # <<<<<<<<<<<<<<
 * 
 *             return result
 */
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->mInertia.operator()(__pyx_v_i, __pyx_v_j)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_result, __pyx_t_6, __pyx_t_1) < 0)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "rbdl.pyx":746
 *                     result[i,j] = self.thisptr.mInertia.coeff(i,j)
 * 
 *             return result             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "rbdl.pyx":740
 * 
 *     property mInertia:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             result = np.ndarray ((3,3))
 *             for i in range (3):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("rbdl.FixedBody.mInertia.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":748
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_9FixedBody_8mInertia_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_9FixedBody_8mInertia_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_8mInertia_2__set__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_9FixedBody_8mInertia_2__set__(struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  long __pyx_v_j;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  double __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":749
 * 
 *         def __set__ (self, value):
 *             for i in range (3):             # <<<<<<<<<<<<<<
 *                 for j in range (3):
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":750
 *         def __set__ (self, value):
 *             for i in range (3):
 *                 for j in range (3):             # <<<<<<<<<<<<<<
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]
 * 
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "rbdl.pyx":751
 *             for i in range (3):
 *                 for j in range (3):
 *                     (&(self.thisptr.mInertia.coeff(i,j)))[0] = value[i,j]             # <<<<<<<<<<<<<<
 * 
 * cdef enum JointType:
 */
      __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 751, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_j); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 751, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 751, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_GetItem(__pyx_v_value, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 751, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 751, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      ((&__pyx_v_self->thisptr->mInertia.operator()(__pyx_v_i, __pyx_v_j))[0]) = __pyx_t_6;
    }
  }

  /* "rbdl.pyx":748
 *             return result
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.FixedBody.mInertia.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_9FixedBody_8__reduce_cython__[] = "FixedBody.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_9FixedBody_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_8__reduce_cython__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.FixedBody.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9FixedBody_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_9FixedBody_10__setstate_cython__[] = "FixedBody.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_9FixedBody_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_9FixedBody_10__setstate_cython__(((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_9FixedBody_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_FixedBody *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.FixedBody.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":804
 *             }
 * 
 *     def _joint_type_from_str (self, joint_type_str):             # <<<<<<<<<<<<<<
 *         if joint_type_str not in self.joint_type_map.values():
 *             raise ValueError("Invalid JointType '" + str(joint_type_str) + "'!")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_1_joint_type_from_str(PyObject *__pyx_v_self, PyObject *__pyx_v_joint_type_str); /*proto*/
static char __pyx_doc_4rbdl_5Joint__joint_type_from_str[] = "Joint._joint_type_from_str(self, joint_type_str)";
static PyObject *__pyx_pw_4rbdl_5Joint_1_joint_type_from_str(PyObject *__pyx_v_self, PyObject *__pyx_v_joint_type_str) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_joint_type_from_str (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint__joint_type_from_str(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self), ((PyObject *)__pyx_v_joint_type_str));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint__joint_type_from_str(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_joint_type_str) {
  PyObject *__pyx_v_joint_type = NULL;
  PyObject *__pyx_v_joint_str = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("_joint_type_from_str", 0);

  /* "rbdl.pyx":805
 * 
 *     def _joint_type_from_str (self, joint_type_str):
 *         if joint_type_str not in self.joint_type_map.values():             # <<<<<<<<<<<<<<
 *             raise ValueError("Invalid JointType '" + str(joint_type_str) + "'!")
 *         else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_joint_type_map); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_values); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 805, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_v_joint_type_str, __pyx_t_1, Py_NE)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "rbdl.pyx":806
 *     def _joint_type_from_str (self, joint_type_str):
 *         if joint_type_str not in self.joint_type_map.values():
 *             raise ValueError("Invalid JointType '" + str(joint_type_str) + "'!")             # <<<<<<<<<<<<<<
 *         else:
 *             for joint_type, joint_str in self.joint_type_map.iteritems():
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_joint_type_str);
    __Pyx_GIVEREF(__pyx_v_joint_type_str);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_joint_type_str);
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Add(__pyx_kp_s_Invalid_JointType, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_kp_s__31); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 806, __pyx_L1_error)

    /* "rbdl.pyx":805
 * 
 *     def _joint_type_from_str (self, joint_type_str):
 *         if joint_type_str not in self.joint_type_map.values():             # <<<<<<<<<<<<<<
 *             raise ValueError("Invalid JointType '" + str(joint_type_str) + "'!")
 *         else:
 */
  }

  /* "rbdl.pyx":808
 *             raise ValueError("Invalid JointType '" + str(joint_type_str) + "'!")
 *         else:
 *             for joint_type, joint_str in self.joint_type_map.iteritems():             # <<<<<<<<<<<<<<
 *                 if joint_str == joint_type_str:
 *                     return joint_type
 */
  /*else*/ {
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_joint_type_map); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__pyx_t_1 == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
      __PYX_ERR(0, 808, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_t_1, 0, __pyx_n_s_iteritems, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_7, &__pyx_t_6, &__pyx_t_2, &__pyx_t_1, NULL, __pyx_t_8);
      if (unlikely(__pyx_t_9 == 0)) break;
      if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 808, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_XDECREF_SET(__pyx_v_joint_type, __pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_joint_str, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "rbdl.pyx":809
 *         else:
 *             for joint_type, joint_str in self.joint_type_map.iteritems():
 *                 if joint_str == joint_type_str:             # <<<<<<<<<<<<<<
 *                     return joint_type
 * 
 */
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_joint_str, __pyx_v_joint_type_str, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 809, __pyx_L1_error)
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 809, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_5) {

        /* "rbdl.pyx":810
 *             for joint_type, joint_str in self.joint_type_map.iteritems():
 *                 if joint_str == joint_type_str:
 *                     return joint_type             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, uintptr_t address=0, joint_type=-1):
 */
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_v_joint_type);
        __pyx_r = __pyx_v_joint_type;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        goto __pyx_L0;

        /* "rbdl.pyx":809
 *         else:
 *             for joint_type, joint_str in self.joint_type_map.iteritems():
 *                 if joint_str == joint_type_str:             # <<<<<<<<<<<<<<
 *                     return joint_type
 * 
 */
      }
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }

  /* "rbdl.pyx":804
 *             }
 * 
 *     def _joint_type_from_str (self, joint_type_str):             # <<<<<<<<<<<<<<
 *         if joint_type_str not in self.joint_type_map.values():
 *             raise ValueError("Invalid JointType '" + str(joint_type_str) + "'!")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("rbdl.Joint._joint_type_from_str", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_joint_type);
  __Pyx_XDECREF(__pyx_v_joint_str);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":812
 *                     return joint_type
 * 
 *     def __cinit__(self, uintptr_t address=0, joint_type=-1):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_5Joint_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_5Joint_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_v_joint_type = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_address,&__pyx_n_s_joint_type,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_int_neg_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_address);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_joint_type);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 812, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_address = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 812, __pyx_L3_error)
    } else {
      __pyx_v_address = ((uintptr_t)0);
    }
    __pyx_v_joint_type = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 812, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Joint.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_5Joint_2__cinit__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self), __pyx_v_address, __pyx_v_joint_type);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_5Joint_2__cinit__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, uintptr_t __pyx_v_address, PyObject *__pyx_v_joint_type) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  enum RigidBodyDynamics::JointType __pyx_t_6;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":813
 * 
 *     def __cinit__(self, uintptr_t address=0, joint_type=-1):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             if joint_type == -1:
 */
  __pyx_t_1 = ((__pyx_v_address == 0) != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":814
 *     def __cinit__(self, uintptr_t address=0, joint_type=-1):
 *         if address == 0:
 *             self.free_on_dealloc = True             # <<<<<<<<<<<<<<
 *             if joint_type == -1:
 *                 self.thisptr = new crbdl.Joint()
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_True;

    /* "rbdl.pyx":815
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             if joint_type == -1:             # <<<<<<<<<<<<<<
 *                 self.thisptr = new crbdl.Joint()
 *             else:
 */
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_v_joint_type, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "rbdl.pyx":816
 *             self.free_on_dealloc = True
 *             if joint_type == -1:
 *                 self.thisptr = new crbdl.Joint()             # <<<<<<<<<<<<<<
 *             else:
 *                 self.thisptr = new crbdl.Joint(self._joint_type_from_str(joint_type))
 */
      __pyx_v_self->thisptr = new RigidBodyDynamics::Joint();

      /* "rbdl.pyx":815
 *         if address == 0:
 *             self.free_on_dealloc = True
 *             if joint_type == -1:             # <<<<<<<<<<<<<<
 *                 self.thisptr = new crbdl.Joint()
 *             else:
 */
      goto __pyx_L4;
    }

    /* "rbdl.pyx":818
 *                 self.thisptr = new crbdl.Joint()
 *             else:
 *                 self.thisptr = new crbdl.Joint(self._joint_type_from_str(joint_type))             # <<<<<<<<<<<<<<
 *         else:
 *             self.free_on_dealloc = False
 */
    /*else*/ {
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_joint_type_from_str); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 818, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_joint_type); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 818, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_v_joint_type};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 818, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_v_joint_type};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 818, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 818, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
          __Pyx_INCREF(__pyx_v_joint_type);
          __Pyx_GIVEREF(__pyx_v_joint_type);
          PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_joint_type);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 818, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = ((enum RigidBodyDynamics::JointType)__Pyx_PyInt_As_enum__RigidBodyDynamics_3a__3a_JointType(__pyx_t_2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_v_self->thisptr = new RigidBodyDynamics::Joint(__pyx_t_6);
    }
    __pyx_L4:;

    /* "rbdl.pyx":813
 * 
 *     def __cinit__(self, uintptr_t address=0, joint_type=-1):
 *         if address == 0:             # <<<<<<<<<<<<<<
 *             self.free_on_dealloc = True
 *             if joint_type == -1:
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":820
 *                 self.thisptr = new crbdl.Joint(self._joint_type_from_str(joint_type))
 *         else:
 *             self.free_on_dealloc = False             # <<<<<<<<<<<<<<
 *             self.thisptr = <crbdl.Joint*>address
 * 
 */
  /*else*/ {
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->free_on_dealloc);
    __Pyx_DECREF(__pyx_v_self->free_on_dealloc);
    __pyx_v_self->free_on_dealloc = Py_False;

    /* "rbdl.pyx":821
 *         else:
 *             self.free_on_dealloc = False
 *             self.thisptr = <crbdl.Joint*>address             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->thisptr = ((RigidBodyDynamics::Joint *)__pyx_v_address);
  }
  __pyx_L3:;

  /* "rbdl.pyx":812
 *                     return joint_type
 * 
 *     def __cinit__(self, uintptr_t address=0, joint_type=-1):             # <<<<<<<<<<<<<<
 *         if address == 0:
 *             self.free_on_dealloc = True
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.Joint.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":823
 *             self.thisptr = <crbdl.Joint*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_5Joint_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_5Joint_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_5Joint_4__dealloc__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_5Joint_4__dealloc__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":824
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->free_on_dealloc); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 824, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "rbdl.pyx":825
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    delete __pyx_v_self->thisptr;

    /* "rbdl.pyx":824
 * 
 *     def __dealloc__(self):
 *         if self.free_on_dealloc:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "rbdl.pyx":823
 *             self.thisptr = <crbdl.Joint*>address
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.free_on_dealloc:
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("rbdl.Joint.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":827
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         joint_type_str = "JointTypeUndefined"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Joint_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_6__repr__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_6__repr__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self) {
  PyObject *__pyx_v_joint_type_str = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":828
 * 
 *     def __repr__(self):
 *         joint_type_str = "JointTypeUndefined"             # <<<<<<<<<<<<<<
 * 
 *         if self.thisptr.mJointType in self.joint_type_map.keys():
 */
  __Pyx_INCREF(__pyx_n_s_JointTypeUndefined);
  __pyx_v_joint_type_str = __pyx_n_s_JointTypeUndefined;

  /* "rbdl.pyx":830
 *         joint_type_str = "JointTypeUndefined"
 * 
 *         if self.thisptr.mJointType in self.joint_type_map.keys():             # <<<<<<<<<<<<<<
 *             joint_type_str = self.joint_type_map[self.thisptr.mJointType]
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum__RigidBodyDynamics_3a__3a_JointType(__pyx_v_self->thisptr->mJointType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_joint_type_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_keys); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 830, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "rbdl.pyx":831
 * 
 *         if self.thisptr.mJointType in self.joint_type_map.keys():
 *             joint_type_str = self.joint_type_map[self.thisptr.mJointType]             # <<<<<<<<<<<<<<
 * 
 *         return "rbdl.Joint (0x{:0x}), JointType: {:s}".format(<uintptr_t><void *> self.thisptr, joint_type_str)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_joint_type_map); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_From_enum__RigidBodyDynamics_3a__3a_JointType(__pyx_v_self->thisptr->mJointType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_GetItem(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_joint_type_str, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "rbdl.pyx":830
 *         joint_type_str = "JointTypeUndefined"
 * 
 *         if self.thisptr.mJointType in self.joint_type_map.keys():             # <<<<<<<<<<<<<<
 *             joint_type_str = self.joint_type_map[self.thisptr.mJointType]
 * 
 */
  }

  /* "rbdl.pyx":833
 *             joint_type_str = self.joint_type_map[self.thisptr.mJointType]
 * 
 *         return "rbdl.Joint (0x{:0x}), JointType: {:s}".format(<uintptr_t><void *> self.thisptr, joint_type_str)             # <<<<<<<<<<<<<<
 * 
 *     # Constructors
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_rbdl_Joint_0x_0x_JointType_s, __pyx_n_s_format); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(((uintptr_t)((void *)__pyx_v_self->thisptr))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_2, __pyx_v_joint_type_str};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_2, __pyx_v_joint_type_str};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_2);
    __Pyx_INCREF(__pyx_v_joint_type_str);
    __Pyx_GIVEREF(__pyx_v_joint_type_str);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_joint_type_str);
    __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":827
 *             del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         joint_type_str = "JointTypeUndefined"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.Joint.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_joint_type_str);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":837
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Joint (address)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_9fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address); /*proto*/
static char __pyx_doc_4rbdl_5Joint_8fromPointer[] = "Joint.fromPointer(type cls, uintptr_t address)";
static PyObject *__pyx_pw_4rbdl_5Joint_9fromPointer(PyObject *__pyx_v_cls, PyObject *__pyx_arg_address) {
  uintptr_t __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPointer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_As_size_t(__pyx_arg_address); if (unlikely((__pyx_v_address == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 837, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Joint.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_5Joint_8fromPointer(((PyTypeObject*)__pyx_v_cls), ((uintptr_t)__pyx_v_address));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_8fromPointer(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, uintptr_t __pyx_v_address) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromPointer", 0);

  /* "rbdl.pyx":838
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):
 *         return Joint (address)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_address); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Joint), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":837
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Joint (address)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Joint.fromPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":841
 * 
 *     @classmethod
 *     def fromJointType(cls, joint_type):             # <<<<<<<<<<<<<<
 *         return Joint (0, joint_type)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_11fromJointType(PyObject *__pyx_v_cls, PyObject *__pyx_v_joint_type); /*proto*/
static char __pyx_doc_4rbdl_5Joint_10fromJointType[] = "Joint.fromJointType(type cls, joint_type)";
static PyObject *__pyx_pw_4rbdl_5Joint_11fromJointType(PyObject *__pyx_v_cls, PyObject *__pyx_v_joint_type) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromJointType (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_10fromJointType(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_joint_type));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_10fromJointType(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_joint_type) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("fromJointType", 0);

  /* "rbdl.pyx":842
 *     @classmethod
 *     def fromJointType(cls, joint_type):
 *         return Joint (0, joint_type)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_joint_type);
  __Pyx_GIVEREF(__pyx_v_joint_type);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_joint_type);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Joint), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":841
 * 
 *     @classmethod
 *     def fromJointType(cls, joint_type):             # <<<<<<<<<<<<<<
 *         return Joint (0, joint_type)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Joint.fromJointType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":845
 * 
 *     @classmethod
 *     def fromJointAxes(cls, axes):             # <<<<<<<<<<<<<<
 *         assert (len(axes) > 0)
 *         assert (len(axes[0]) == 6)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_13fromJointAxes(PyObject *__pyx_v_cls, PyObject *__pyx_v_axes); /*proto*/
static char __pyx_doc_4rbdl_5Joint_12fromJointAxes[] = "Joint.fromJointAxes(type cls, axes)";
static PyObject *__pyx_pw_4rbdl_5Joint_13fromJointAxes(PyObject *__pyx_v_cls, PyObject *__pyx_v_axes) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromJointAxes (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_12fromJointAxes(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_axes));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_12fromJointAxes(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_axes) {
  PyObject *__pyx_v_axes_count = NULL;
  PyObject *__pyx_v_joint_type = NULL;
  struct __pyx_obj_4rbdl_Joint *__pyx_v_result = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("fromJointAxes", 0);

  /* "rbdl.pyx":846
 *     @classmethod
 *     def fromJointAxes(cls, axes):
 *         assert (len(axes) > 0)             # <<<<<<<<<<<<<<
 *         assert (len(axes[0]) == 6)
 *         axes_count = len(axes)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(__pyx_v_axes); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 846, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 > 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 846, __pyx_L1_error)
    }
  }
  #endif

  /* "rbdl.pyx":847
 *     def fromJointAxes(cls, axes):
 *         assert (len(axes) > 0)
 *         assert (len(axes[0]) == 6)             # <<<<<<<<<<<<<<
 *         axes_count = len(axes)
 *         joint_type = JointType1DoF + axes_count - 1
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_axes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 847, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!((__pyx_t_1 == 6) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 847, __pyx_L1_error)
    }
  }
  #endif

  /* "rbdl.pyx":848
 *         assert (len(axes) > 0)
 *         assert (len(axes[0]) == 6)
 *         axes_count = len(axes)             # <<<<<<<<<<<<<<
 *         joint_type = JointType1DoF + axes_count - 1
 * 
 */
  __pyx_t_1 = PyObject_Length(__pyx_v_axes); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 848, __pyx_L1_error)
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_axes_count = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "rbdl.pyx":849
 *         assert (len(axes[0]) == 6)
 *         axes_count = len(axes)
 *         joint_type = JointType1DoF + axes_count - 1             # <<<<<<<<<<<<<<
 * 
 *         result = Joint (0, cls.joint_type_map[joint_type])
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType1DoF); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_v_axes_count); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_joint_type = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "rbdl.pyx":851
 *         joint_type = JointType1DoF + axes_count - 1
 * 
 *         result = Joint (0, cls.joint_type_map[joint_type])             # <<<<<<<<<<<<<<
 * 
 *         for i in range (axes_count):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_joint_type_map); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_2, __pyx_v_joint_type); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Joint), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_result = ((struct __pyx_obj_4rbdl_Joint *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "rbdl.pyx":853
 *         result = Joint (0, cls.joint_type_map[joint_type])
 * 
 *         for i in range (axes_count):             # <<<<<<<<<<<<<<
 *             result.setJointAxis(i, axes[i])
 * 
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_axes_count);
  __Pyx_GIVEREF(__pyx_v_axes_count);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_axes_count);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_1 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_1 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 853, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 853, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_1 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_1); __Pyx_INCREF(__pyx_t_2); __pyx_t_1++; if (unlikely(0 < 0)) __PYX_ERR(0, 853, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_1); __pyx_t_1++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 853, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_1); __Pyx_INCREF(__pyx_t_2); __pyx_t_1++; if (unlikely(0 < 0)) __PYX_ERR(0, 853, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_1); __pyx_t_1++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 853, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 853, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "rbdl.pyx":854
 * 
 *         for i in range (axes_count):
 *             result.setJointAxis(i, axes[i])             # <<<<<<<<<<<<<<
 * 
 *         return result
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_result), __pyx_n_s_setJointAxis); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 854, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_GetItem(__pyx_v_axes, __pyx_v_i); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 854, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_i, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 854, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_i, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 854, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 854, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
      }
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_v_i);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 854, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "rbdl.pyx":853
 *         result = Joint (0, cls.joint_type_map[joint_type])
 * 
 *         for i in range (axes_count):             # <<<<<<<<<<<<<<
 *             result.setJointAxis(i, axes[i])
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "rbdl.pyx":856
 *             result.setJointAxis(i, axes[i])
 * 
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     property mDoFCount:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "rbdl.pyx":845
 * 
 *     @classmethod
 *     def fromJointAxes(cls, axes):             # <<<<<<<<<<<<<<
 *         assert (len(axes) > 0)
 *         assert (len(axes[0]) == 6)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.Joint.fromJointAxes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_axes_count);
  __Pyx_XDECREF(__pyx_v_joint_type);
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":859
 * 
 *     property mDoFCount:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mDoFCount
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_9mDoFCount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Joint_9mDoFCount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_9mDoFCount___get__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_9mDoFCount___get__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":860
 *     property mDoFCount:
 *         def __get__ (self):
 *             return self.thisptr.mDoFCount             # <<<<<<<<<<<<<<
 * 
 *         def __set__ (self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->mDoFCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":859
 * 
 *     property mDoFCount:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mDoFCount
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Joint.mDoFCount.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":862
 *             return self.thisptr.mDoFCount
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mDoFCount = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_5Joint_9mDoFCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_5Joint_9mDoFCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_9mDoFCount_2__set__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_5Joint_9mDoFCount_2__set__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":863
 * 
 *         def __set__ (self, value):
 *             self.thisptr.mDoFCount = value             # <<<<<<<<<<<<<<
 * 
 *     property mJointType:
 */
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 863, __pyx_L1_error)
  __pyx_v_self->thisptr->mDoFCount = __pyx_t_1;

  /* "rbdl.pyx":862
 *             return self.thisptr.mDoFCount
 * 
 *         def __set__ (self, value):             # <<<<<<<<<<<<<<
 *             self.thisptr.mDoFCount = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("rbdl.Joint.mDoFCount.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":866
 * 
 *     property mJointType:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.joint_type_map[self.thisptr.mJointType]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_10mJointType_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Joint_10mJointType_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_10mJointType___get__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_10mJointType___get__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":867
 *     property mJointType:
 *         def __get__ (self):
 *             return self.joint_type_map[self.thisptr.mJointType]             # <<<<<<<<<<<<<<
 * 
 *     property q_index:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_joint_type_map); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_enum__RigidBodyDynamics_3a__3a_JointType(__pyx_v_self->thisptr->mJointType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":866
 * 
 *     property mJointType:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.joint_type_map[self.thisptr.mJointType]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("rbdl.Joint.mJointType.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":870
 * 
 *     property q_index:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.q_index
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_7q_index_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Joint_7q_index_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_7q_index___get__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_7q_index___get__(struct __pyx_obj_4rbdl_Joint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":871
 *     property q_index:
 *         def __get__ (self):
 *             return self.thisptr.q_index             # <<<<<<<<<<<<<<
 * 
 *     def getJointAxis (self, index):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->q_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":870
 * 
 *     property q_index:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.q_index
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Joint.q_index.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":873
 *             return self.thisptr.q_index
 * 
 *     def getJointAxis (self, index):             # <<<<<<<<<<<<<<
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         return SpatialVectorToNumpy (self.thisptr.mJointAxes[index])
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_15getJointAxis(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static char __pyx_doc_4rbdl_5Joint_14getJointAxis[] = "Joint.getJointAxis(self, index)";
static PyObject *__pyx_pw_4rbdl_5Joint_15getJointAxis(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getJointAxis (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_14getJointAxis(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_14getJointAxis(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("getJointAxis", 0);

  /* "rbdl.pyx":874
 * 
 *     def getJointAxis (self, index):
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"             # <<<<<<<<<<<<<<
 *         return SpatialVectorToNumpy (self.thisptr.mJointAxes[index])
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_index, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 874, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 874, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L3_bool_binop_done;
    }
    __pyx_t_2 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->mDoFCount); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 874, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_index, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 874, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 874, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_L3_bool_binop_done:;
    if (unlikely(!__pyx_t_1)) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_Invalid_joint_axis_index);
      __PYX_ERR(0, 874, __pyx_L1_error)
    }
  }
  #endif

  /* "rbdl.pyx":875
 *     def getJointAxis (self, index):
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         return SpatialVectorToNumpy (self.thisptr.mJointAxes[index])             # <<<<<<<<<<<<<<
 * 
 *     def setJointAxis (self, index, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_index); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 875, __pyx_L1_error)
  __pyx_t_4 = ((PyObject *)__pyx_f_4rbdl_SpatialVectorToNumpy((__pyx_v_self->thisptr->mJointAxes[__pyx_t_5]))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":873
 *             return self.thisptr.q_index
 * 
 *     def getJointAxis (self, index):             # <<<<<<<<<<<<<<
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         return SpatialVectorToNumpy (self.thisptr.mJointAxes[index])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("rbdl.Joint.getJointAxis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":877
 *         return SpatialVectorToNumpy (self.thisptr.mJointAxes[index])
 * 
 *     def setJointAxis (self, index, value):             # <<<<<<<<<<<<<<
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         for i in range (6):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_17setJointAxis(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_5Joint_16setJointAxis[] = "Joint.setJointAxis(self, index, value)";
static PyObject *__pyx_pw_4rbdl_5Joint_17setJointAxis(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_index = 0;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setJointAxis (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_index,&__pyx_n_s_value,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setJointAxis", 1, 2, 2, 1); __PYX_ERR(0, 877, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setJointAxis") < 0)) __PYX_ERR(0, 877, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_index = values[0];
    __pyx_v_value = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setJointAxis", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 877, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Joint.setJointAxis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_5Joint_16setJointAxis(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self), __pyx_v_index, __pyx_v_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_16setJointAxis(struct __pyx_obj_4rbdl_Joint *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  long __pyx_t_5;
  double __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  __Pyx_RefNannySetupContext("setJointAxis", 0);

  /* "rbdl.pyx":878
 * 
 *     def setJointAxis (self, index, value):
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"             # <<<<<<<<<<<<<<
 *         for i in range (6):
 *             (&(self.thisptr.mJointAxes[index][i]))[0] = value[i]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_index, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 878, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L3_bool_binop_done;
    }
    __pyx_t_2 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->mDoFCount); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_index, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 878, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 878, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_L3_bool_binop_done:;
    if (unlikely(!__pyx_t_1)) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_Invalid_joint_axis_index);
      __PYX_ERR(0, 878, __pyx_L1_error)
    }
  }
  #endif

  /* "rbdl.pyx":879
 *     def setJointAxis (self, index, value):
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         for i in range (6):             # <<<<<<<<<<<<<<
 *             (&(self.thisptr.mJointAxes[index][i]))[0] = value[i]
 *             self.thisptr.mJointAxes[index][i]
 */
  for (__pyx_t_5 = 0; __pyx_t_5 < 6; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "rbdl.pyx":880
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         for i in range (6):
 *             (&(self.thisptr.mJointAxes[index][i]))[0] = value[i]             # <<<<<<<<<<<<<<
 *             self.thisptr.mJointAxes[index][i]
 * 
 */
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_value, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 880, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 880, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_index); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 880, __pyx_L1_error)
    ((&((__pyx_v_self->thisptr->mJointAxes[__pyx_t_7])[__pyx_v_i]))[0]) = __pyx_t_6;

    /* "rbdl.pyx":881
 *         for i in range (6):
 *             (&(self.thisptr.mJointAxes[index][i]))[0] = value[i]
 *             self.thisptr.mJointAxes[index][i]             # <<<<<<<<<<<<<<
 * 
 * cdef class Model
 */
    __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_index); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 881, __pyx_L1_error)
    ((__pyx_v_self->thisptr->mJointAxes[__pyx_t_7])[__pyx_v_i]);
  }

  /* "rbdl.pyx":877
 *         return SpatialVectorToNumpy (self.thisptr.mJointAxes[index])
 * 
 *     def setJointAxis (self, index, value):             # <<<<<<<<<<<<<<
 *         assert index >= 0 and index < self.thisptr.mDoFCount, "Invalid joint axis index!"
 *         for i in range (6):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("rbdl.Joint.setJointAxis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_5Joint_18__reduce_cython__[] = "Joint.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_5Joint_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_18__reduce_cython__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Joint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Joint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Joint_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_5Joint_20__setstate_cython__[] = "Joint.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_5Joint_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Joint_20__setstate_cython__(((struct __pyx_obj_4rbdl_Joint *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Joint_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Joint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Joint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":888
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 888, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 888, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_v_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":889
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":888
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":891
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":892
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":894
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 894, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 894, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 894, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 894, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 894, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 894, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 894, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->v[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 894, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 894, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":892
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":896
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 896, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->v[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 896, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":891
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_v_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":898
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":899
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":901
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":902
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 902, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 902, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 902, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 902, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 902, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 902, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 902, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":903
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.v[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 903, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 903, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":904
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 904, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 904, __pyx_L1_error)
      (__pyx_v_self->parent->v[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":905
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 905, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":902
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":899
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":907
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.v[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 907, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 907, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 907, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 907, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 907, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 907, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":908
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.v[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 908, __pyx_L1_error)
    (__pyx_v_self->parent->v[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":898
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_v_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":910
 *             self.parent.v[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.v.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":911
 * 
 *     def __len__(self):
 *         return self.parent.v.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_a_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->v.size();
  goto __pyx_L0;

  /* "rbdl.pyx":910
 *             self.parent.v[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.v.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_36_Model_v_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_v_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_v_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_36_Model_v_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_v_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_v_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_v_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":916
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 916, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 916, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 916, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_a_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":917
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":916
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":919
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":920
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":922
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 922, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 922, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 922, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 922, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 922, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 922, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 922, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->a[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 922, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 922, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":920
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":924
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 924, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 924, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->a[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 924, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 924, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 924, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 924, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 924, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 924, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":919
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_a_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":926
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":927
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":929
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":930
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.a[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 930, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 930, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 930, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 930, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 930, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 930, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 930, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":931
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.a[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 931, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 931, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":932
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.a[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 932, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 932, __pyx_L1_error)
      (__pyx_v_self->parent->a[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":933
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.a[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 933, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":930
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.a[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":927
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":935
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.a[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 935, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 935, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 935, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":936
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.a[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L1_error)
    (__pyx_v_self->parent->a[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":926
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.a[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_a_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":938
 *             self.parent.a[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.a.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":939
 * 
 *     def __len__(self):
 *         return self.parent.a.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_mJoints_Joint_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->a.size();
  goto __pyx_L0;

  /* "rbdl.pyx":938
 *             self.parent.a[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.a.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_36_Model_a_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_a_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_a_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_36_Model_a_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_a_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_a_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_a_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":944
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 944, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 944, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 944, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_mJoints_Joint_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":945
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":944
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":947
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Joint> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":948
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":950
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 950, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 950, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 950, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 950, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 950, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 950, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Joint), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 950, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->mJoints[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 950, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 950, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":948
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":952
 *             return [Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Joint), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 952, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 952, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->mJoints[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 952, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 952, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 952, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 952, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 952, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 952, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":947
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_mJoints_Joint_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":954
 *             return Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Joint> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":955
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":957
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Joint), "Invalid type! Expected Joint, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":958
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Joint), "Invalid type! Expected Joint, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mJoints[i] = (<Joint> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 958, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 958, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 958, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 958, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 958, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 958, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":959
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Joint), "Invalid type! Expected Joint, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.mJoints[i] = (<Joint> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_Joint); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 959, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Joint_but, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 959, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 959, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 959, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":960
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Joint), "Invalid type! Expected Joint, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mJoints[i] = (<Joint> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 960, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 960, __pyx_L1_error)
      (__pyx_v_self->parent->mJoints[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Joint *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":961
 *                 assert isinstance (value[src_index], Joint), "Invalid type! Expected Joint, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mJoints[i] = (<Joint> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, Joint), "Invalid type! Expected Joint, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 961, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":958
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Joint), "Invalid type! Expected Joint, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mJoints[i] = (<Joint> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":955
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":963
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, Joint), "Invalid type! Expected Joint, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.mJoints[key] = (<Joint> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_Joint); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Joint_but, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 963, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":964
 *         else:
 *             assert isinstance (value, Joint), "Invalid type! Expected Joint, but got " + str(type(value)) + "."
 *             self.parent.mJoints[key] = (<Joint> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L1_error)
    (__pyx_v_self->parent->mJoints[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Joint *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":954
 *             return Joint.fromPointer (<uintptr_t> &(self.parent.mJoints[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_mJoints_Joint_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":966
 *             self.parent.mJoints[key] = (<Joint> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.mJoints.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":967
 * 
 *     def __len__(self):
 *         return self.parent.mJoints.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_S_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->mJoints.size();
  goto __pyx_L0;

  /* "rbdl.pyx":966
 *             self.parent.mJoints[key] = (<Joint> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.mJoints.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_34_Model_mJoints_Joint_VectorWrapper_8__reduce_cython__[] = "_Model_mJoints_Joint_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_mJoints_Joint_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_34_Model_mJoints_Joint_VectorWrapper_10__setstate_cython__[] = "_Model_mJoints_Joint_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_34_Model_mJoints_Joint_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_mJoints_Joint_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":972
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 972, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 972, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_S_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":973
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":972
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":975
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":976
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":978
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 978, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 978, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 978, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 978, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 978, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 978, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 978, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 978, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 978, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 978, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 978, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 978, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 978, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->S[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 978, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 978, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 978, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 978, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":976
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":980
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 980, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 980, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->S[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":975
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_S_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":982
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":983
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":985
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":986
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.S[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 986, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 986, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 986, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 986, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 986, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 986, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 986, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 986, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":987
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.S[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 987, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 987, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 987, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 987, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 987, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 987, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 987, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 987, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":988
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.S[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 988, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 988, __pyx_L1_error)
      (__pyx_v_self->parent->S[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":989
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.S[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 989, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":986
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.S[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":983
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":991
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.S[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 991, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 991, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 991, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 991, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 991, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 991, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":992
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.S[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 992, __pyx_L1_error)
    (__pyx_v_self->parent->S[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":982
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.S[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_S_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":994
 *             self.parent.S[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.S.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":995
 * 
 *     def __len__(self):
 *         return self.parent.S.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_X_J_SpatialTransform_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->S.size();
  goto __pyx_L0;

  /* "rbdl.pyx":994
 *             self.parent.S[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.S.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_36_Model_S_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_S_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_S_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_36_Model_S_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_S_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_S_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_S_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1000
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1000, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1000, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_X_J_SpatialTransform_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1001
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1000
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1003
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1004
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1006
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1006, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1006, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1006, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1006, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1006, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1006, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1006, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1006, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_J[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1006, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1006, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1004
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1008
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1008, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_J[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1008, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1008, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1008, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1008, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1008, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1003
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_X_J_SpatialTransform_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1010
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1011
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1013
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1014
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_J[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1014, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1014, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1014, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1014, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1014, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1014, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1015
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.X_J[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialTransform); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1015, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1016
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_J[i] = (<SpatialTransform> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1016, __pyx_L1_error)
      (__pyx_v_self->parent->X_J[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1017
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_J[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1017, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1014
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_J[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1011
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1019
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.X_J[key] = (<SpatialTransform> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialTransform); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1019, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1019, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1019, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1019, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1019, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1019, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1020
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 *             self.parent.X_J[key] = (<SpatialTransform> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1020, __pyx_L1_error)
    (__pyx_v_self->parent->X_J[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1010
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_J[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_X_J_SpatialTransform_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1022
 *             self.parent.X_J[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_J.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1023
 * 
 *     def __len__(self):
 *         return self.parent.X_J.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_v_J_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->X_J.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1022
 *             self.parent.X_J[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_J.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_8__reduce_cython__[] = "_Model_X_J_SpatialTransform_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_J_SpatialTransform_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_10__setstate_cython__[] = "_Model_X_J_SpatialTransform_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_J_SpatialTransform_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1028
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1028, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1028, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1028, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_v_J_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1029
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1028
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1031
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1032
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1034
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1034, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1034, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1034, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1034, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1034, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1034, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->v_J[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1034, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1032
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1036
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1036, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->v_J[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1036, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1036, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1036, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1036, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1036, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1036, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1031
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_v_J_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1038
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1039
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1041
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1042
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1042, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1042, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1042, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1042, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1042, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1042, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1042, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1042, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1042, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1043
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.v_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1043, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1043, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1043, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1043, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1043, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1043, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1043, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1043, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1044
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v_J[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1044, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1044, __pyx_L1_error)
      (__pyx_v_self->parent->v_J[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1045
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1045, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1042
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.v_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1039
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1047
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.v_J[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1047, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1047, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1047, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1047, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1047, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1047, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1048
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.v_J[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L1_error)
    (__pyx_v_self->parent->v_J[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1038
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.v_J[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_v_J_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1050
 *             self.parent.v_J[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.v_J.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1051
 * 
 *     def __len__(self):
 *         return self.parent.v_J.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_c_J_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->v_J.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1050
 *             self.parent.v_J[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.v_J.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_v_J_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_v_J_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_v_J_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_v_J_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1056
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1056, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1056, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1056, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_c_J_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1057
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1056
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1059
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1060
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1062
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1062, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1062, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1062, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1062, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1062, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1062, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1062, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1062, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->c_J[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1062, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1062, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1062, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1062, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1060
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1064
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->c_J[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1064, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1064, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1064, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1064, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1064, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1059
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_c_J_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1066
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1067
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1069
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1070
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1070, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1070, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1070, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1070, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1070, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1070, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1071
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.c_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1071, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1071, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1071, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1071, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1072
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c_J[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1072, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1072, __pyx_L1_error)
      (__pyx_v_self->parent->c_J[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1073
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1073, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1070
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c_J[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1067
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1075
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.c_J[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1075, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1075, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1075, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1075, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1075, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1075, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1076
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.c_J[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1076, __pyx_L1_error)
    (__pyx_v_self->parent->c_J[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1066
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c_J[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_c_J_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1078
 *             self.parent.c_J[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.c_J.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1079
 * 
 *     def __len__(self):
 *         return self.parent.c_J.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_X_T_SpatialTransform_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->c_J.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1078
 *             self.parent.c_J[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.c_J.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_c_J_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_c_J_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_c_J_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_c_J_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1084
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1084, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1084, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_X_T_SpatialTransform_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1085
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1084
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1087
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1088
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1090
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1090, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1090, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1090, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1090, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1090, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1090, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_T[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1088
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1092
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1092, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_T[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1092, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1092, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1092, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1092, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1092, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1087
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_X_T_SpatialTransform_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1094
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1095
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1097
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1098
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_T[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1098, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1098, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1098, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1098, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1098, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1098, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1099
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.X_T[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1099, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialTransform); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1099, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1100
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_T[i] = (<SpatialTransform> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1100, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1100, __pyx_L1_error)
      (__pyx_v_self->parent->X_T[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1101
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_T[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1101, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1098
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_T[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1095
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1103
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.X_T[key] = (<SpatialTransform> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialTransform); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1103, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1103, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1103, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1103, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1103, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1103, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1104
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 *             self.parent.X_T[key] = (<SpatialTransform> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1104, __pyx_L1_error)
    (__pyx_v_self->parent->X_T[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1094
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_T[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_X_T_SpatialTransform_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1106
 *             self.parent.X_T[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_T.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1107
 * 
 *     def __len__(self):
 *         return self.parent.X_T.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_c_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->X_T.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1106
 *             self.parent.X_T[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_T.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_8__reduce_cython__[] = "_Model_X_T_SpatialTransform_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_T_SpatialTransform_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_10__setstate_cython__[] = "_Model_X_T_SpatialTransform_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_T_SpatialTransform_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1112
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1112, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1112, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1112, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_c_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1113
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1112
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1115
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1116
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1118
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1118, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1118, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1118, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1118, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1118, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1118, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->c[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1118, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1118, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1116
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1120
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->c[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1120, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1115
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_c_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1122
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1123
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1125
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1126
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1126, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1126, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1126, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1126, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1126, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1126, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1127
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.c[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1127, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1127, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1128
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1128, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1128, __pyx_L1_error)
      (__pyx_v_self->parent->c[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1129
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1129, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1126
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.c[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1123
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1131
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.c[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1131, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1131, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1131, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1131, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1131, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1131, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1132
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.c[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1132, __pyx_L1_error)
    (__pyx_v_self->parent->c[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1122
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.c[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_c_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1134
 *             self.parent.c[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.c.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1135
 * 
 *     def __len__(self):
 *         return self.parent.c.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_IA_SpatialMatrix_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->c.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1134
 *             self.parent.c[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.c.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_36_Model_c_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_c_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_c_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_36_Model_c_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_c_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_c_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_c_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1140
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1140, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1140, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_IA_SpatialMatrix_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1141
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1140
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1143
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialMatrix> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1144
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1146
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1146, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1146, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1146, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1146, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1146, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialMatrix), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1146, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->IA[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1146, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1146, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1146, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1144
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1148
 *             return [SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialMatrix), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1148, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->IA[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1148, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1148, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1148, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1143
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_IA_SpatialMatrix_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1150
 *             return SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialMatrix> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1151
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1153
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1154
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value[src_index])) + "."
 *                 self.parent.IA[i] = (<SpatialMatrix> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1154, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1154, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1154, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1154, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1155
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.IA[i] = (<SpatialMatrix> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialMatrix); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialMat, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1155, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1156
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value[src_index])) + "."
 *                 self.parent.IA[i] = (<SpatialMatrix> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1156, __pyx_L1_error)
      (__pyx_v_self->parent->IA[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1157
 *                 assert isinstance (value[src_index], SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value[src_index])) + "."
 *                 self.parent.IA[i] = (<SpatialMatrix> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1157, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1154
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value[src_index])) + "."
 *                 self.parent.IA[i] = (<SpatialMatrix> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1151
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1159
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.IA[key] = (<SpatialMatrix> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialMatrix); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1159, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialMat, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1159, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1159, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1160
 *         else:
 *             assert isinstance (value, SpatialMatrix), "Invalid type! Expected SpatialMatrix, but got " + str(type(value)) + "."
 *             self.parent.IA[key] = (<SpatialMatrix> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L1_error)
    (__pyx_v_self->parent->IA[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialMatrix *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1150
 *             return SpatialMatrix.fromPointer (<uintptr_t> &(self.parent.IA[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_IA_SpatialMatrix_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1162
 *             self.parent.IA[key] = (<SpatialMatrix> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.IA.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1163
 * 
 *     def __len__(self):
 *         return self.parent.IA.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_pA_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->IA.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1162
 *             self.parent.IA[key] = (<SpatialMatrix> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.IA.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_8__reduce_cython__[] = "_Model_IA_SpatialMatrix_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_IA_SpatialMatrix_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_10__setstate_cython__[] = "_Model_IA_SpatialMatrix_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__54, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_IA_SpatialMatrix_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1168
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1168, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1168, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1168, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_pA_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1169
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1168
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1171
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1172
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1174
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1174, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1174, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1174, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1174, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->pA[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1172
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1176
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1176, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->pA[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1176, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1176, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1176, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1176, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1176, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1171
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_pA_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1178
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1179
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1181
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1182
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.pA[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1182, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1182, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1182, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1182, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1182, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1182, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1182, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1183
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.pA[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1183, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1184
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.pA[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1184, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L1_error)
      (__pyx_v_self->parent->pA[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1185
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.pA[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1185, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1182
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.pA[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1179
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1187
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.pA[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1187, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1188
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.pA[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1188, __pyx_L1_error)
    (__pyx_v_self->parent->pA[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1178
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.pA[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_pA_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1190
 *             self.parent.pA[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.pA.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1191
 * 
 *     def __len__(self):
 *         return self.parent.pA.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_U_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->pA.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1190
 *             self.parent.pA[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.pA.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_pA_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_pA_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_pA_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_pA_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1196
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1196, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1196, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1196, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_U_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1197
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1196
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1199
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1200
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1202
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1202, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1202, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1202, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1202, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1202, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1202, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1202, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->U[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1202, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1202, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1202, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1200
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1204
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1204, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1204, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->U[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1204, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1204, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1204, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1204, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1204, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1204, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1199
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_U_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1206
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1207
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1209
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1210
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.U[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1210, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1210, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1210, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1210, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1210, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1210, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1210, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1211
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.U[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1211, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1211, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1212
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.U[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1212, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1212, __pyx_L1_error)
      (__pyx_v_self->parent->U[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1213
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.U[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1213, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1210
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.U[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1207
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1215
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.U[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1215, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1215, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1216
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.U[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1216, __pyx_L1_error)
    (__pyx_v_self->parent->U[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1206
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.U[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_U_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1218
 *             self.parent.U[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.U.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1219
 * 
 *     def __len__(self):
 *         return self.parent.U.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_f_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->U.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1218
 *             self.parent.U[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.U.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_36_Model_U_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_U_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__57, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_U_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_36_Model_U_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_U_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_U_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__58, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_U_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1224
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1224, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1224, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1224, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_f_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1225
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1224
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1227
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1228
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1230
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1230, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1230, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1230, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1230, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1230, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1230, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->f[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1230, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1228
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1232
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1232, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->f[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1232, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1227
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_f_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1234
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1235
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1237
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1238
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.f[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1238, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1238, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1238, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1238, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1238, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1238, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1239
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.f[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1239, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1239, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1239, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1239, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1240
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.f[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1240, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1240, __pyx_L1_error)
      (__pyx_v_self->parent->f[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1241
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.f[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1241, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1238
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.f[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1235
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1243
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.f[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1243, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1243, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1243, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1243, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1243, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1243, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1244
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.f[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L1_error)
    (__pyx_v_self->parent->f[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1234
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.f[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_f_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1246
 *             self.parent.f[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.f.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1247
 * 
 *     def __len__(self):
 *         return self.parent.f.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_I_SpatialRigidBodyInertia_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->f.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1246
 *             self.parent.f[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.f.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_36_Model_f_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_f_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__59, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_f_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_36_Model_f_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_f_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36_Model_f_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__60, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_f_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1252
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1252, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1252, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1252, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_I_SpatialRigidBodyInertia_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1253
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1252
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1255
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialRigidBodyInertia> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1256
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1258
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1258, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1258, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1258, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1258, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1258, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->I[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1256
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1260
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1260, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->I[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1260, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1260, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1260, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1260, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1260, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1255
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_I_SpatialRigidBodyInertia_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1262
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialRigidBodyInertia> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1263
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1265
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1266
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.I[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1266, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1266, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1266, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1266, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1266, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1266, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1266, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1266, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1267
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.I[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1267, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialRigidBodyInertia); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialRig, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1267, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1268
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.I[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1268, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1268, __pyx_L1_error)
      (__pyx_v_self->parent->I[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1269
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.I[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1269, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1266
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.I[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1263
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1271
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.I[key] = (<SpatialRigidBodyInertia> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialRigidBodyInertia); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialRig, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1271, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1272
 *         else:
 *             assert isinstance (value, SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value)) + "."
 *             self.parent.I[key] = (<SpatialRigidBodyInertia> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L1_error)
    (__pyx_v_self->parent->I[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1262
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.I[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_I_SpatialRigidBodyInertia_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1274
 *             self.parent.I[key] = (<SpatialRigidBodyInertia> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.I.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1275
 * 
 *     def __len__(self):
 *         return self.parent.I.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_Ic_SpatialRigidBodyInertia_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->I.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1274
 *             self.parent.I[key] = (<SpatialRigidBodyInertia> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.I.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__[] = "_Model_I_SpatialRigidBodyInertia_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__61, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_I_SpatialRigidBodyInertia_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__[] = "_Model_I_SpatialRigidBodyInertia_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_I_SpatialRigidBodyInertia_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1280
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1280, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1280, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1280, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1281
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1280
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1283
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialRigidBodyInertia> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1284
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1286
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1286, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1286, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1286, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1286, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1286, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1286, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1286, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->Ic[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1286, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1286, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1286, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1284
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1288
 *             return [SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1288, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->Ic[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1288, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1288, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1288, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1288, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1288, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1283
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1290
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialRigidBodyInertia> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1291
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1293
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1294
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.Ic[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1294, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1294, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1294, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1294, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1294, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1295
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.Ic[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialRigidBodyInertia); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialRig, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1295, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1296
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.Ic[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1296, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1296, __pyx_L1_error)
      (__pyx_v_self->parent->Ic[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1297
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.Ic[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1297, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1294
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value[src_index])) + "."
 *                 self.parent.Ic[i] = (<SpatialRigidBodyInertia> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1291
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1299
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.Ic[key] = (<SpatialRigidBodyInertia> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialRigidBodyInertia); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1299, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1299, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialRig, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1299, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1299, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1299, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1299, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1300
 *         else:
 *             assert isinstance (value, SpatialRigidBodyInertia), "Invalid type! Expected SpatialRigidBodyInertia, but got " + str(type(value)) + "."
 *             self.parent.Ic[key] = (<SpatialRigidBodyInertia> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1300, __pyx_L1_error)
    (__pyx_v_self->parent->Ic[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1290
 *             return SpatialRigidBodyInertia.fromPointer (<uintptr_t> &(self.parent.Ic[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1302
 *             self.parent.Ic[key] = (<SpatialRigidBodyInertia> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.Ic.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1303
 * 
 *     def __len__(self):
 *         return self.parent.Ic.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_hc_SpatialVector_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->Ic.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1302
 *             self.parent.Ic[key] = (<SpatialRigidBodyInertia> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.Ic.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__[] = "_Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__63, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__[] = "_Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__64, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_Ic_SpatialRigidBodyInertia_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1308
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1308, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1308, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1308, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_hc_SpatialVector_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1309
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1308
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1311
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1312
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1314
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1314, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1314, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1314, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1314, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1314, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1314, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1314, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1314, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->hc[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1314, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1314, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1314, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1314, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1312
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1316
 *             return [SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialVector), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1316, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->hc[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1316, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1311
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_hc_SpatialVector_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1318
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialVector> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1319
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1321
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1322
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.hc[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1322, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1322, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1322, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1322, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1322, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1322, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1322, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1323
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.hc[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1323, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialVector); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1323, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1324
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.hc[i] = (<SpatialVector> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1324, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1324, __pyx_L1_error)
      (__pyx_v_self->parent->hc[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1325
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.hc[i] = (<SpatialVector> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1322
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value[src_index])) + "."
 *                 self.parent.hc[i] = (<SpatialVector> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1319
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1327
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.hc[key] = (<SpatialVector> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialVector); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1327, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1327, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1327, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1327, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1327, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1327, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1328
 *         else:
 *             assert isinstance (value, SpatialVector), "Invalid type! Expected SpatialVector, but got " + str(type(value)) + "."
 *             self.parent.hc[key] = (<SpatialVector> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1328, __pyx_L1_error)
    (__pyx_v_self->parent->hc[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialVector *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1318
 *             return SpatialVector.fromPointer (<uintptr_t> &(self.parent.hc[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_hc_SpatialVector_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1330
 *             self.parent.hc[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.hc.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1331
 * 
 *     def __len__(self):
 *         return self.parent.hc.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_X_lambda_SpatialTransform_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->hc.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1330
 *             self.parent.hc[key] = (<SpatialVector> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.hc.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_8__reduce_cython__[] = "_Model_hc_SpatialVector_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__65, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_hc_SpatialVector_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_10__setstate_cython__[] = "_Model_hc_SpatialVector_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__66, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_hc_SpatialVector_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1336
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1336, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1336, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1336, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_X_lambda_SpatialTransform_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1337
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1336
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1339
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1340
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1342
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1342, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1342, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1342, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1342, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1342, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1342, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1342, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1342, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_lambda[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1342, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1342, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1340
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1344
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1344, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_lambda[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1344, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1344, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1344, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1344, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1344, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1339
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_X_lambda_SpatialTransform_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1346
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1347
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1349
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1350
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_lambda[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1350, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1350, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1350, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1350, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1350, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1350, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1351
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.X_lambda[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1351, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialTransform); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1351, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1352
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_lambda[i] = (<SpatialTransform> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1352, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1352, __pyx_L1_error)
      (__pyx_v_self->parent->X_lambda[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1353
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_lambda[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1353, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1350
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_lambda[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1347
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1355
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.X_lambda[key] = (<SpatialTransform> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialTransform); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1355, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1356
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 *             self.parent.X_lambda[key] = (<SpatialTransform> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1356, __pyx_L1_error)
    (__pyx_v_self->parent->X_lambda[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1346
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_lambda[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_X_lambda_SpatialTransform_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1358
 *             self.parent.X_lambda[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_lambda.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1359
 * 
 *     def __len__(self):
 *         return self.parent.X_lambda.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_X_base_SpatialTransform_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->X_lambda.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1358
 *             self.parent.X_lambda[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_lambda.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_8__reduce_cython__[] = "_Model_X_lambda_SpatialTransform_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_lambda_SpatialTransform_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_10__setstate_cython__[] = "_Model_X_lambda_SpatialTransform_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__68, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_lambda_SpatialTransform_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1364
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1364, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1364, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1364, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_X_base_SpatialTransform_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1365
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1364
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1367
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1368
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1370
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1370, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1370, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1370, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1370, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1370, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1370, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1370, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_base[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1370, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1370, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1368
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1372
 *             return [SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_SpatialTransform), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1372, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->X_base[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1372, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1372, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1372, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1372, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1372, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1367
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_X_base_SpatialTransform_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1374
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::SpatialTransform> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1375
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1377
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1378
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_base[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1378, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1378, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1378, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1378, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1378, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1378, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1379
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.X_base[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1379, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_SpatialTransform); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1379, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1380
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_base[i] = (<SpatialTransform> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1380, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1380, __pyx_L1_error)
      (__pyx_v_self->parent->X_base[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1381
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_base[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1381, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1378
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value[src_index])) + "."
 *                 self.parent.X_base[i] = (<SpatialTransform> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1375
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1383
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.X_base[key] = (<SpatialTransform> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_SpatialTransform); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1383, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1384
 *         else:
 *             assert isinstance (value, SpatialTransform), "Invalid type! Expected SpatialTransform, but got " + str(type(value)) + "."
 *             self.parent.X_base[key] = (<SpatialTransform> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1384, __pyx_L1_error)
    (__pyx_v_self->parent->X_base[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_SpatialTransform *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1374
 *             return SpatialTransform.fromPointer (<uintptr_t> &(self.parent.X_base[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_X_base_SpatialTransform_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1386
 *             self.parent.X_base[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_base.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1387
 * 
 *     def __len__(self):
 *         return self.parent.X_base.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_mFixedBodies_FixedBody_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->X_base.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1386
 *             self.parent.X_base[key] = (<SpatialTransform> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.X_base.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_8__reduce_cython__[] = "_Model_X_base_SpatialTransform_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_base_SpatialTransform_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_10__setstate_cython__[] = "_Model_X_base_SpatialTransform_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_X_base_SpatialTransform_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1392
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1392, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1392, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1392, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_mFixedBodies_FixedBody_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1393
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1392
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1395
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::FixedBody> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1396
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1398
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1398, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1398, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1398, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1398, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_FixedBody), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1398, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->mFixedBodies[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1398, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1396
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1400
 *             return [FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_FixedBody), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1400, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1400, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->mFixedBodies[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1400, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1400, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1400, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1400, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1395
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_mFixedBodies_FixedBody_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1402
 *             return FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::FixedBody> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1403
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1405
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1406
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mFixedBodies[i] = (<FixedBody> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1406, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1406, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1406, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1406, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1406, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1407
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.mFixedBodies[i] = (<FixedBody> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1407, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_FixedBody); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1407, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1407, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1407, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_FixedBody, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1407, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1407, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1407, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1407, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1408
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mFixedBodies[i] = (<FixedBody> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1408, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1408, __pyx_L1_error)
      (__pyx_v_self->parent->mFixedBodies[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_FixedBody *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1409
 *                 assert isinstance (value[src_index], FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mFixedBodies[i] = (<FixedBody> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1409, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1406
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mFixedBodies[i] = (<FixedBody> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1403
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1411
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.mFixedBodies[key] = (<FixedBody> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_FixedBody); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_FixedBody, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1411, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1412
 *         else:
 *             assert isinstance (value, FixedBody), "Invalid type! Expected FixedBody, but got " + str(type(value)) + "."
 *             self.parent.mFixedBodies[key] = (<FixedBody> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1412, __pyx_L1_error)
    (__pyx_v_self->parent->mFixedBodies[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_FixedBody *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1402
 *             return FixedBody.fromPointer (<uintptr_t> &(self.parent.mFixedBodies[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_mFixedBodies_FixedBody_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1414
 *             self.parent.mFixedBodies[key] = (<FixedBody> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.mFixedBodies.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1415
 * 
 *     def __len__(self):
 *         return self.parent.mFixedBodies.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _Model_mBodies_Body_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->mFixedBodies.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1414
 *             self.parent.mFixedBodies[key] = (<FixedBody> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.mFixedBodies.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_8__reduce_cython__[] = "_Model_mFixedBodies_FixedBody_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_mFixedBodies_FixedBody_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_10__setstate_cython__[] = "_Model_mFixedBodies_FixedBody_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__72, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_mFixedBodies_FixedBody_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1420
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1420, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1420, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1420, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._Model_mBodies_Body_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1421
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.Model *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::Model *)__pyx_v_ptr);

  /* "rbdl.pyx":1420
 *     cdef crbdl.Model *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.Model *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1423
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Body> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1424
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Body.fromPointer (<uintptr_t> &(self.parent.mBodies[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1426
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [Body.fromPointer (<uintptr_t> &(self.parent.mBodies[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return Body.fromPointer (<uintptr_t> &(self.parent.mBodies[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1426, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1426, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1426, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1426, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1426, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1426, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Body), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1426, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1426, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->mBodies[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1426, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1426, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1426, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1424
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Body.fromPointer (<uintptr_t> &(self.parent.mBodies[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1428
 *             return [Body.fromPointer (<uintptr_t> &(self.parent.mBodies[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return Body.fromPointer (<uintptr_t> &(self.parent.mBodies[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Body), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1428, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1428, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->mBodies[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1428, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1428, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1428, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1428, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1428, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1428, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1423
 *         self.parent = <crbdl.Model *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._Model_mBodies_Body_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1430
 *             return Body.fromPointer (<uintptr_t> &(self.parent.mBodies[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Body> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1431
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1433
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Body), "Invalid type! Expected Body, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1434
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Body), "Invalid type! Expected Body, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mBodies[i] = (<Body> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1434, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1434, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1434, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1434, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1434, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1434, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1435
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Body), "Invalid type! Expected Body, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.mBodies[i] = (<Body> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_Body); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Body_but_g, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1435, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1435, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1436
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Body), "Invalid type! Expected Body, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mBodies[i] = (<Body> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1436, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1436, __pyx_L1_error)
      (__pyx_v_self->parent->mBodies[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Body *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1437
 *                 assert isinstance (value[src_index], Body), "Invalid type! Expected Body, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mBodies[i] = (<Body> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, Body), "Invalid type! Expected Body, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1437, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1434
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Body), "Invalid type! Expected Body, but got " + str(type(value[src_index])) + "."
 *                 self.parent.mBodies[i] = (<Body> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1431
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1439
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, Body), "Invalid type! Expected Body, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.mBodies[key] = (<Body> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_Body); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Body_but_g, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1439, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1440
 *         else:
 *             assert isinstance (value, Body), "Invalid type! Expected Body, but got " + str(type(value)) + "."
 *             self.parent.mBodies[key] = (<Body> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1440, __pyx_L1_error)
    (__pyx_v_self->parent->mBodies[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Body *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1430
 *             return Body.fromPointer (<uintptr_t> &(self.parent.mBodies[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._Model_mBodies_Body_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1442
 *             self.parent.mBodies[key] = (<Body> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.mBodies.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1443
 * 
 *     def __len__(self):
 *         return self.parent.mBodies.size()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->parent->mBodies.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1442
 *             self.parent.mBodies[key] = (<Body> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.mBodies.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_33_Model_mBodies_Body_VectorWrapper_8__reduce_cython__[] = "_Model_mBodies_Body_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_mBodies_Body_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_33_Model_mBodies_Body_VectorWrapper_10__setstate_cython__[] = "_Model_mBodies_Body_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_33_Model_mBodies_Body_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._Model_mBodies_Body_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1469
 *     cdef _Model_mBodies_Body_VectorWrapper mBodies
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new crbdl.Model()
 *         self.v = _Model_v_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_5Model_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_5Model_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4rbdl_5Model___cinit__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_5Model___cinit__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1470
 * 
 *     def __cinit__(self):
 *         self.thisptr = new crbdl.Model()             # <<<<<<<<<<<<<<
 *         self.v = _Model_v_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.a = _Model_a_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_v_self->thisptr = new RigidBodyDynamics::Model();

  /* "rbdl.pyx":1471
 *     def __cinit__(self):
 *         self.thisptr = new crbdl.Model()
 *         self.v = _Model_v_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.a = _Model_a_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mJoints = _Model_mJoints_Joint_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_v_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->v);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->v));
  __pyx_v_self->v = ((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1472
 *         self.thisptr = new crbdl.Model()
 *         self.v = _Model_v_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.a = _Model_a_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.mJoints = _Model_mJoints_Joint_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.S = _Model_S_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_a_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->a);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->a));
  __pyx_v_self->a = ((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1473
 *         self.v = _Model_v_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.a = _Model_a_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mJoints = _Model_mJoints_Joint_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.S = _Model_S_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_J = _Model_X_J_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_mJoints_Joint_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->mJoints);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->mJoints));
  __pyx_v_self->mJoints = ((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1474
 *         self.a = _Model_a_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mJoints = _Model_mJoints_Joint_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.S = _Model_S_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.X_J = _Model_X_J_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.v_J = _Model_v_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_S_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->S);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->S));
  __pyx_v_self->S = ((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1475
 *         self.mJoints = _Model_mJoints_Joint_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.S = _Model_S_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_J = _Model_X_J_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.v_J = _Model_v_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.c_J = _Model_c_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_X_J_SpatialTransform_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->X_J);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->X_J));
  __pyx_v_self->X_J = ((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1476
 *         self.S = _Model_S_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_J = _Model_X_J_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.v_J = _Model_v_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.c_J = _Model_c_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_T = _Model_X_T_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_v_J_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->v_J);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->v_J));
  __pyx_v_self->v_J = ((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1477
 *         self.X_J = _Model_X_J_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.v_J = _Model_v_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.c_J = _Model_c_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.X_T = _Model_X_T_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.c = _Model_c_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_c_J_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->c_J);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->c_J));
  __pyx_v_self->c_J = ((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1478
 *         self.v_J = _Model_v_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.c_J = _Model_c_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_T = _Model_X_T_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.c = _Model_c_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.IA = _Model_IA_SpatialMatrix_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_X_T_SpatialTransform_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->X_T);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->X_T));
  __pyx_v_self->X_T = ((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1479
 *         self.c_J = _Model_c_J_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_T = _Model_X_T_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.c = _Model_c_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.IA = _Model_IA_SpatialMatrix_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.pA = _Model_pA_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_c_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->c);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->c));
  __pyx_v_self->c = ((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1480
 *         self.X_T = _Model_X_T_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.c = _Model_c_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.IA = _Model_IA_SpatialMatrix_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.pA = _Model_pA_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.U = _Model_U_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_IA_SpatialMatrix_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->IA);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->IA));
  __pyx_v_self->IA = ((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1481
 *         self.c = _Model_c_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.IA = _Model_IA_SpatialMatrix_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.pA = _Model_pA_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.U = _Model_U_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.f = _Model_f_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_pA_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->pA);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->pA));
  __pyx_v_self->pA = ((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1482
 *         self.IA = _Model_IA_SpatialMatrix_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.pA = _Model_pA_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.U = _Model_U_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.f = _Model_f_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.I = _Model_I_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_U_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->U);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->U));
  __pyx_v_self->U = ((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1483
 *         self.pA = _Model_pA_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.U = _Model_U_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.f = _Model_f_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.I = _Model_I_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.Ic = _Model_Ic_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_f_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->f);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->f));
  __pyx_v_self->f = ((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1484
 *         self.U = _Model_U_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.f = _Model_f_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.I = _Model_I_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.Ic = _Model_Ic_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.hc = _Model_hc_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->I);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->I));
  __pyx_v_self->I = ((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1485
 *         self.f = _Model_f_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.I = _Model_I_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.Ic = _Model_Ic_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.hc = _Model_hc_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_lambda = _Model_X_lambda_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->Ic);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Ic));
  __pyx_v_self->Ic = ((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1486
 *         self.I = _Model_I_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.Ic = _Model_Ic_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.hc = _Model_hc_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.X_lambda = _Model_X_lambda_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_base = _Model_X_base_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_hc_SpatialVector_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->hc);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hc));
  __pyx_v_self->hc = ((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1487
 *         self.Ic = _Model_Ic_SpatialRigidBodyInertia_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.hc = _Model_hc_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_lambda = _Model_X_lambda_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.X_base = _Model_X_base_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mFixedBodies = _Model_mFixedBodies_FixedBody_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->X_lambda);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->X_lambda));
  __pyx_v_self->X_lambda = ((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1488
 *         self.hc = _Model_hc_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_lambda = _Model_X_lambda_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_base = _Model_X_base_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.mFixedBodies = _Model_mFixedBodies_FixedBody_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mBodies = _Model_mBodies_Body_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_X_base_SpatialTransform_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->X_base);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->X_base));
  __pyx_v_self->X_base = ((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1489
 *         self.X_lambda = _Model_X_lambda_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.X_base = _Model_X_base_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mFixedBodies = _Model_mFixedBodies_FixedBody_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.mBodies = _Model_mBodies_Body_VectorWrapper (<uintptr_t> self.thisptr)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->mFixedBodies);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->mFixedBodies));
  __pyx_v_self->mFixedBodies = ((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1490
 *         self.X_base = _Model_X_base_SpatialTransform_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mFixedBodies = _Model_mFixedBodies_FixedBody_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.mBodies = _Model_mBodies_Body_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__Model_mBodies_Body_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->mBodies);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->mBodies));
  __pyx_v_self->mBodies = ((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1469
 *     cdef _Model_mBodies_Body_VectorWrapper mBodies
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new crbdl.Model()
 *         self.v = _Model_v_SpatialVector_VectorWrapper (<uintptr_t> self.thisptr)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1492
 *         self.mBodies = _Model_mBodies_Body_VectorWrapper (<uintptr_t> self.thisptr)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_5Model_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_5Model_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_5Model_2__dealloc__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_5Model_2__dealloc__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":1493
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete __pyx_v_self->thisptr;

  /* "rbdl.pyx":1492
 *         self.mBodies = _Model_mBodies_Body_VectorWrapper (<uintptr_t> self.thisptr)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":1495
 *         del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.Model (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_4__repr__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_4__repr__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":1496
 * 
 *     def __repr__(self):
 *         return "rbdl.Model (0x{:0x})".format(<uintptr_t><void *> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def AddBody (self,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_rbdl_Model_0x_0x, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(((uintptr_t)((void *)__pyx_v_self->thisptr))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1496, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1496, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1496, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1495
 *         del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.Model (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.Model.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1498
 *         return "rbdl.Model (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 *     def AddBody (self,             # <<<<<<<<<<<<<<
 *             parent_id,
 *             SpatialTransform joint_frame not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_7AddBody(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_5Model_6AddBody[] = "Model.AddBody(self, parent_id, SpatialTransform joint_frame, Joint joint, Body body, string body_name=b'')";
static PyObject *__pyx_pw_4rbdl_5Model_7AddBody(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_parent_id = 0;
  struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_joint_frame = 0;
  struct __pyx_obj_4rbdl_Joint *__pyx_v_joint = 0;
  struct __pyx_obj_4rbdl_Body *__pyx_v_body = 0;
  std::string __pyx_v_body_name;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddBody (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_parent_id,&__pyx_n_s_joint_frame,&__pyx_n_s_joint,&__pyx_n_s_body,&__pyx_n_s_body_name,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_parent_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_joint_frame)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddBody", 0, 4, 5, 1); __PYX_ERR(0, 1498, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_joint)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddBody", 0, 4, 5, 2); __PYX_ERR(0, 1498, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddBody", 0, 4, 5, 3); __PYX_ERR(0, 1498, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_name);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddBody") < 0)) __PYX_ERR(0, 1498, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_parent_id = values[0];
    __pyx_v_joint_frame = ((struct __pyx_obj_4rbdl_SpatialTransform *)values[1]);
    __pyx_v_joint = ((struct __pyx_obj_4rbdl_Joint *)values[2]);
    __pyx_v_body = ((struct __pyx_obj_4rbdl_Body *)values[3]);
    if (values[4]) {
      __pyx_v_body_name = __pyx_convert_string_from_py_std__in_string(values[4]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1503, __pyx_L3_error)
    } else {
      __pyx_v_body_name = __pyx_k__75;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddBody", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1498, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Model.AddBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_joint_frame), __pyx_ptype_4rbdl_SpatialTransform, 0, "joint_frame", 0))) __PYX_ERR(0, 1500, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_joint), __pyx_ptype_4rbdl_Joint, 0, "joint", 0))) __PYX_ERR(0, 1501, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), __pyx_ptype_4rbdl_Body, 0, "body", 0))) __PYX_ERR(0, 1502, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_5Model_6AddBody(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), __pyx_v_parent_id, __pyx_v_joint_frame, __pyx_v_joint, __pyx_v_body, __pyx_v_body_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_6AddBody(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_parent_id, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_joint_frame, struct __pyx_obj_4rbdl_Joint *__pyx_v_joint, struct __pyx_obj_4rbdl_Body *__pyx_v_body, std::string __pyx_v_body_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("AddBody", 0);

  /* "rbdl.pyx":1504
 *             Body body not None,
 *             string body_name = b""):
 *         return self.thisptr.AddBody (             # <<<<<<<<<<<<<<
 *                 parent_id,
 *                 joint_frame.thisptr[0],
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1505
 *             string body_name = b""):
 *         return self.thisptr.AddBody (
 *                 parent_id,             # <<<<<<<<<<<<<<
 *                 joint_frame.thisptr[0],
 *                 joint.thisptr[0],
 */
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_parent_id); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L1_error)

  /* "rbdl.pyx":1504
 *             Body body not None,
 *             string body_name = b""):
 *         return self.thisptr.AddBody (             # <<<<<<<<<<<<<<
 *                 parent_id,
 *                 joint_frame.thisptr[0],
 */
  __pyx_t_2 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->AddBody(__pyx_t_1, (__pyx_v_joint_frame->thisptr[0]), (__pyx_v_joint->thisptr[0]), (__pyx_v_body->thisptr[0]), __pyx_v_body_name)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1498
 *         return "rbdl.Model (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 *     def AddBody (self,             # <<<<<<<<<<<<<<
 *             parent_id,
 *             SpatialTransform joint_frame not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.AddBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1512
 *                 )
 * 
 *     def AppendBody (self,             # <<<<<<<<<<<<<<
 *             SpatialTransform joint_frame not None,
 *             Joint joint not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_9AppendBody(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_5Model_8AppendBody[] = "Model.AppendBody(self, SpatialTransform joint_frame, Joint joint, Body body, string body_name=b'')";
static PyObject *__pyx_pw_4rbdl_5Model_9AppendBody(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_joint_frame = 0;
  struct __pyx_obj_4rbdl_Joint *__pyx_v_joint = 0;
  struct __pyx_obj_4rbdl_Body *__pyx_v_body = 0;
  std::string __pyx_v_body_name;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AppendBody (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_joint_frame,&__pyx_n_s_joint,&__pyx_n_s_body,&__pyx_n_s_body_name,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_joint_frame)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_joint)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AppendBody", 0, 3, 4, 1); __PYX_ERR(0, 1512, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AppendBody", 0, 3, 4, 2); __PYX_ERR(0, 1512, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_name);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AppendBody") < 0)) __PYX_ERR(0, 1512, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_joint_frame = ((struct __pyx_obj_4rbdl_SpatialTransform *)values[0]);
    __pyx_v_joint = ((struct __pyx_obj_4rbdl_Joint *)values[1]);
    __pyx_v_body = ((struct __pyx_obj_4rbdl_Body *)values[2]);
    if (values[3]) {
      __pyx_v_body_name = __pyx_convert_string_from_py_std__in_string(values[3]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1516, __pyx_L3_error)
    } else {
      __pyx_v_body_name = __pyx_k__76;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AppendBody", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1512, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Model.AppendBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_joint_frame), __pyx_ptype_4rbdl_SpatialTransform, 0, "joint_frame", 0))) __PYX_ERR(0, 1513, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_joint), __pyx_ptype_4rbdl_Joint, 0, "joint", 0))) __PYX_ERR(0, 1514, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), __pyx_ptype_4rbdl_Body, 0, "body", 0))) __PYX_ERR(0, 1515, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_5Model_8AppendBody(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), __pyx_v_joint_frame, __pyx_v_joint, __pyx_v_body, __pyx_v_body_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_8AppendBody(struct __pyx_obj_4rbdl_Model *__pyx_v_self, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_joint_frame, struct __pyx_obj_4rbdl_Joint *__pyx_v_joint, struct __pyx_obj_4rbdl_Body *__pyx_v_body, std::string __pyx_v_body_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("AppendBody", 0);

  /* "rbdl.pyx":1517
 *             Body body not None,
 *             string body_name = b""):
 *         return self.thisptr.AppendBody (             # <<<<<<<<<<<<<<
 *                 joint_frame.thisptr[0],
 *                 joint.thisptr[0],
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1522
 *                 body.thisptr[0],
 *                 body_name
 *                 )             # <<<<<<<<<<<<<<
 * 
 *     def SetQuaternion (self,
 */
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->AppendBody((__pyx_v_joint_frame->thisptr[0]), (__pyx_v_joint->thisptr[0]), (__pyx_v_body->thisptr[0]), __pyx_v_body_name)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1512
 *                 )
 * 
 *     def AppendBody (self,             # <<<<<<<<<<<<<<
 *             SpatialTransform joint_frame not None,
 *             Joint joint not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.AppendBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1524
 *                 )
 * 
 *     def SetQuaternion (self,             # <<<<<<<<<<<<<<
 *             unsigned int body_id,
 *             np.ndarray[double, ndim=1, mode="c"] quat,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_11SetQuaternion(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_5Model_10SetQuaternion[] = "Model.SetQuaternion(self, unsigned int body_id, ndarray quat, ndarray q)";
static PyObject *__pyx_pw_4rbdl_5Model_11SetQuaternion(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_quat = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetQuaternion (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_body_id,&__pyx_n_s_quat,&__pyx_n_s_q,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_quat)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("SetQuaternion", 1, 3, 3, 1); __PYX_ERR(0, 1524, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("SetQuaternion", 1, 3, 3, 2); __PYX_ERR(0, 1524, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SetQuaternion") < 0)) __PYX_ERR(0, 1524, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[0]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1525, __pyx_L3_error)
    __pyx_v_quat = ((PyArrayObject *)values[1]);
    __pyx_v_q = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetQuaternion", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1524, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Model.SetQuaternion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_quat), __pyx_ptype_5numpy_ndarray, 1, "quat", 0))) __PYX_ERR(0, 1526, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1527, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_5Model_10SetQuaternion(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), __pyx_v_body_id, __pyx_v_quat, __pyx_v_q);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_10SetQuaternion(struct __pyx_obj_4rbdl_Model *__pyx_v_self, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_quat, PyArrayObject *__pyx_v_q) {
  PyObject *__pyx_v_quat_wrap = NULL;
  PyObject *__pyx_v_q_wrap = NULL;
  Py_ssize_t __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_quat;
  __Pyx_Buffer __pyx_pybuffer_quat;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  double __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("SetQuaternion", 0);
  __pyx_pybuffer_quat.pybuffer.buf = NULL;
  __pyx_pybuffer_quat.refcount = 0;
  __pyx_pybuffernd_quat.data = NULL;
  __pyx_pybuffernd_quat.rcbuffer = &__pyx_pybuffer_quat;
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_quat.rcbuffer->pybuffer, (PyObject*)__pyx_v_quat, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1524, __pyx_L1_error)
  }
  __pyx_pybuffernd_quat.diminfo[0].strides = __pyx_pybuffernd_quat.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_quat.diminfo[0].shape = __pyx_pybuffernd_quat.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1524, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1528
 *             np.ndarray[double, ndim=1, mode="c"] quat,
 *             np.ndarray[double, ndim=1, mode="c"] q):
 *         quat_wrap = Quaternion.fromPythonArray (quat)             # <<<<<<<<<<<<<<
 *         q_wrap = VectorNd.fromPythonArray (q)
 *         self.thisptr.SetQuaternion (body_id,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Quaternion), __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_quat)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1528, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, ((PyObject *)__pyx_v_quat)};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1528, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, ((PyObject *)__pyx_v_quat)};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1528, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1528, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_quat));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_quat));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_quat));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1528, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_quat_wrap = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1529
 *             np.ndarray[double, ndim=1, mode="c"] q):
 *         quat_wrap = Quaternion.fromPythonArray (quat)
 *         q_wrap = VectorNd.fromPythonArray (q)             # <<<<<<<<<<<<<<
 *         self.thisptr.SetQuaternion (body_id,
 *             (<Quaternion>quat_wrap).thisptr[0],
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_VectorNd), __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_q)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1529, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, ((PyObject *)__pyx_v_q)};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1529, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, ((PyObject *)__pyx_v_q)};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1529, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1529, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_q));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_q));
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, ((PyObject *)__pyx_v_q));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1529, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_q_wrap = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1530
 *         quat_wrap = Quaternion.fromPythonArray (quat)
 *         q_wrap = VectorNd.fromPythonArray (q)
 *         self.thisptr.SetQuaternion (body_id,             # <<<<<<<<<<<<<<
 *             (<Quaternion>quat_wrap).thisptr[0],
 *             (<VectorNd>q_wrap).thisptr[0])
 */
  __pyx_v_self->thisptr->SetQuaternion(__pyx_v_body_id, (((struct __pyx_obj_4rbdl_Quaternion *)__pyx_v_quat_wrap)->thisptr[0]), (((struct __pyx_obj_4rbdl_VectorNd *)__pyx_v_q_wrap)->thisptr[0]));

  /* "rbdl.pyx":1533
 *             (<Quaternion>quat_wrap).thisptr[0],
 *             (<VectorNd>q_wrap).thisptr[0])
 *         for i in range(len(q)):             # <<<<<<<<<<<<<<
 *             q[i] = q_wrap[i]
 * 
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_q)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1533, __pyx_L1_error)
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "rbdl.pyx":1534
 *             (<VectorNd>q_wrap).thisptr[0])
 *         for i in range(len(q)):
 *             q[i] = q_wrap[i]             # <<<<<<<<<<<<<<
 * 
 *     def GetQuaternion (self,
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_q_wrap, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1534, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1534, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = __pyx_v_i;
    if (__pyx_t_8 < 0) __pyx_t_8 += __pyx_pybuffernd_q.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_q.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_q.diminfo[0].strides) = __pyx_t_7;
  }

  /* "rbdl.pyx":1524
 *                 )
 * 
 *     def SetQuaternion (self,             # <<<<<<<<<<<<<<
 *             unsigned int body_id,
 *             np.ndarray[double, ndim=1, mode="c"] quat,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_quat.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.Model.SetQuaternion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_quat.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_quat_wrap);
  __Pyx_XDECREF(__pyx_v_q_wrap);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1536
 *             q[i] = q_wrap[i]
 * 
 *     def GetQuaternion (self,             # <<<<<<<<<<<<<<
 *             unsigned int body_id,
 *             np.ndarray[double, ndim=1, mode="c"] q):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_13GetQuaternion(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_5Model_12GetQuaternion[] = "Model.GetQuaternion(self, unsigned int body_id, ndarray q)";
static PyObject *__pyx_pw_4rbdl_5Model_13GetQuaternion(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_q = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetQuaternion (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_body_id,&__pyx_n_s_q,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("GetQuaternion", 1, 2, 2, 1); __PYX_ERR(0, 1536, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "GetQuaternion") < 0)) __PYX_ERR(0, 1536, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[0]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1537, __pyx_L3_error)
    __pyx_v_q = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("GetQuaternion", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1536, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.Model.GetQuaternion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1538, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_5Model_12GetQuaternion(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), __pyx_v_body_id, __pyx_v_q);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_12GetQuaternion(struct __pyx_obj_4rbdl_Model *__pyx_v_self, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_q) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("GetQuaternion", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1536, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1539
 *             unsigned int body_id,
 *             np.ndarray[double, ndim=1, mode="c"] q):
 *         return QuaternionToNumpy (self.thisptr.GetQuaternion(body_id, NumpyToVectorNd (q)))             # <<<<<<<<<<<<<<
 * 
 *     def GetBody (self, index):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_4rbdl_QuaternionToNumpy(__pyx_v_self->thisptr->GetQuaternion(__pyx_v_body_id, __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q))))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1536
 *             q[i] = q_wrap[i]
 * 
 *     def GetQuaternion (self,             # <<<<<<<<<<<<<<
 *             unsigned int body_id,
 *             np.ndarray[double, ndim=1, mode="c"] q):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.Model.GetQuaternion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1541
 *         return QuaternionToNumpy (self.thisptr.GetQuaternion(body_id, NumpyToVectorNd (q)))
 * 
 *     def GetBody (self, index):             # <<<<<<<<<<<<<<
 *         return Body (address=<uintptr_t> &(self.thisptr.mBodies[index]))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_15GetBody(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static char __pyx_doc_4rbdl_5Model_14GetBody[] = "Model.GetBody(self, index)";
static PyObject *__pyx_pw_4rbdl_5Model_15GetBody(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetBody (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_14GetBody(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_14GetBody(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<RigidBodyDynamics::Body> ::size_type __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("GetBody", 0);

  /* "rbdl.pyx":1542
 * 
 *     def GetBody (self, index):
 *         return Body (address=<uintptr_t> &(self.thisptr.mBodies[index]))             # <<<<<<<<<<<<<<
 * 
 *     def GetParentBodyId (self, index):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_index); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1542, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->thisptr->mBodies[__pyx_t_2])))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_address, __pyx_t_3) < 0) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Body), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1541
 *         return QuaternionToNumpy (self.thisptr.GetQuaternion(body_id, NumpyToVectorNd (q)))
 * 
 *     def GetBody (self, index):             # <<<<<<<<<<<<<<
 *         return Body (address=<uintptr_t> &(self.thisptr.mBodies[index]))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("rbdl.Model.GetBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1544
 *         return Body (address=<uintptr_t> &(self.thisptr.mBodies[index]))
 * 
 *     def GetParentBodyId (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.GetParentBodyId(index)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_17GetParentBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static char __pyx_doc_4rbdl_5Model_16GetParentBodyId[] = "Model.GetParentBodyId(self, index)";
static PyObject *__pyx_pw_4rbdl_5Model_17GetParentBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetParentBodyId (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_16GetParentBodyId(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_16GetParentBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("GetParentBodyId", 0);

  /* "rbdl.pyx":1545
 * 
 *     def GetParentBodyId (self, index):
 *         return self.thisptr.GetParentBodyId(index)             # <<<<<<<<<<<<<<
 * 
 *     def GetBodyId (self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_index); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->GetParentBodyId(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1544
 *         return Body (address=<uintptr_t> &(self.thisptr.mBodies[index]))
 * 
 *     def GetParentBodyId (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.GetParentBodyId(index)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.GetParentBodyId", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1547
 *         return self.thisptr.GetParentBodyId(index)
 * 
 *     def GetBodyId (self, name):             # <<<<<<<<<<<<<<
 *         return self.thisptr.GetBodyId(name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_19GetBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_4rbdl_5Model_18GetBodyId[] = "Model.GetBodyId(self, name)";
static PyObject *__pyx_pw_4rbdl_5Model_19GetBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetBodyId (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_18GetBodyId(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_18GetBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("GetBodyId", 0);

  /* "rbdl.pyx":1548
 * 
 *     def GetBodyId (self, name):
 *         return self.thisptr.GetBodyId(name)             # <<<<<<<<<<<<<<
 * 
 *     def GetBodyName (self, index):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 1548, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->GetBodyId(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1547
 *         return self.thisptr.GetParentBodyId(index)
 * 
 *     def GetBodyId (self, name):             # <<<<<<<<<<<<<<
 *         return self.thisptr.GetBodyId(name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.GetBodyId", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1550
 *         return self.thisptr.GetBodyId(name)
 * 
 *     def GetBodyName (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.GetBodyName(index)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_21GetBodyName(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static char __pyx_doc_4rbdl_5Model_20GetBodyName[] = "Model.GetBodyName(self, index)";
static PyObject *__pyx_pw_4rbdl_5Model_21GetBodyName(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetBodyName (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_20GetBodyName(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_20GetBodyName(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("GetBodyName", 0);

  /* "rbdl.pyx":1551
 * 
 *     def GetBodyName (self, index):
 *         return self.thisptr.GetBodyName(index)             # <<<<<<<<<<<<<<
 * 
 *     def IsBodyId (self, index):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_index); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1551, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_self->thisptr->GetBodyName(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1550
 *         return self.thisptr.GetBodyId(name)
 * 
 *     def GetBodyName (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.GetBodyName(index)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.GetBodyName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1553
 *         return self.thisptr.GetBodyName(index)
 * 
 *     def IsBodyId (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.IsBodyId(index)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_23IsBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static char __pyx_doc_4rbdl_5Model_22IsBodyId[] = "Model.IsBodyId(self, index)";
static PyObject *__pyx_pw_4rbdl_5Model_23IsBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IsBodyId (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_22IsBodyId(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_22IsBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("IsBodyId", 0);

  /* "rbdl.pyx":1554
 * 
 *     def IsBodyId (self, index):
 *         return self.thisptr.IsBodyId(index)             # <<<<<<<<<<<<<<
 * 
 *     def IsFixedBodyId (self, index):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_index); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1554, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->IsBodyId(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1553
 *         return self.thisptr.GetBodyName(index)
 * 
 *     def IsBodyId (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.IsBodyId(index)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.IsBodyId", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1556
 *         return self.thisptr.IsBodyId(index)
 * 
 *     def IsFixedBodyId (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.IsFixedBodyId(index)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_25IsFixedBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static char __pyx_doc_4rbdl_5Model_24IsFixedBodyId[] = "Model.IsFixedBodyId(self, index)";
static PyObject *__pyx_pw_4rbdl_5Model_25IsFixedBodyId(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("IsFixedBodyId (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_24IsFixedBodyId(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_24IsFixedBodyId(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("IsFixedBodyId", 0);

  /* "rbdl.pyx":1557
 * 
 *     def IsFixedBodyId (self, index):
 *         return self.thisptr.IsFixedBodyId(index)             # <<<<<<<<<<<<<<
 * 
 *     property dof_count:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_index); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->IsFixedBodyId(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1556
 *         return self.thisptr.IsBodyId(index)
 * 
 *     def IsFixedBodyId (self, index):             # <<<<<<<<<<<<<<
 *         return self.thisptr.IsFixedBodyId(index)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.IsFixedBodyId", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1560
 * 
 *     property dof_count:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.dof_count
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_9dof_count_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_9dof_count_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_9dof_count___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_9dof_count___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1561
 *     property dof_count:
 *         def __get__ (self):
 *             return self.thisptr.dof_count             # <<<<<<<<<<<<<<
 * 
 *     property q_size:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->dof_count); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1560
 * 
 *     property dof_count:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.dof_count
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.dof_count.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1564
 * 
 *     property q_size:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.q_size
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_6q_size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_6q_size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_6q_size___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_6q_size___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1565
 *     property q_size:
 *         def __get__ (self):
 *             return self.thisptr.q_size             # <<<<<<<<<<<<<<
 * 
 *     property qdot_size:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->q_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1565, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1564
 * 
 *     property q_size:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.q_size
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.q_size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1568
 * 
 *     property qdot_size:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.qdot_size
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_9qdot_size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_9qdot_size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_9qdot_size___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_9qdot_size___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1569
 *     property qdot_size:
 *         def __get__ (self):
 *             return self.thisptr.qdot_size             # <<<<<<<<<<<<<<
 * 
 *     property previously_added_body_id:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->qdot_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1568
 * 
 *     property qdot_size:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.qdot_size
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.qdot_size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1572
 * 
 *     property previously_added_body_id:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.previously_added_body_id
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_24previously_added_body_id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_24previously_added_body_id_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_24previously_added_body_id___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_24previously_added_body_id___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1573
 *     property previously_added_body_id:
 *         def __get__ (self):
 *             return self.thisptr.previously_added_body_id             # <<<<<<<<<<<<<<
 * 
 *     property gravity:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->previously_added_body_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1572
 * 
 *     property previously_added_body_id:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.previously_added_body_id
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.previously_added_body_id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1576
 * 
 *     property gravity:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return np.array ([
 *                 self.thisptr.gravity[0],
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_7gravity_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_7gravity_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_7gravity___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_7gravity___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1577
 *     property gravity:
 *         def __get__ (self):
 *             return np.array ([             # <<<<<<<<<<<<<<
 *                 self.thisptr.gravity[0],
 *                 self.thisptr.gravity[1],
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "rbdl.pyx":1578
 *         def __get__ (self):
 *             return np.array ([
 *                 self.thisptr.gravity[0],             # <<<<<<<<<<<<<<
 *                 self.thisptr.gravity[1],
 *                 self.thisptr.gravity[2]
 */
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_self->thisptr->gravity[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":1579
 *             return np.array ([
 *                 self.thisptr.gravity[0],
 *                 self.thisptr.gravity[1],             # <<<<<<<<<<<<<<
 *                 self.thisptr.gravity[2]
 *                 ]
 */
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->thisptr->gravity[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "rbdl.pyx":1580
 *                 self.thisptr.gravity[0],
 *                 self.thisptr.gravity[1],
 *                 self.thisptr.gravity[2]             # <<<<<<<<<<<<<<
 *                 ]
 *                 )
 */
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->thisptr->gravity[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "rbdl.pyx":1577
 *     property gravity:
 *         def __get__ (self):
 *             return np.array ([             # <<<<<<<<<<<<<<
 *                 self.thisptr.gravity[0],
 *                 self.thisptr.gravity[1],
 */
  __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1577, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1577, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1577, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1577, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1577, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1576
 * 
 *     property gravity:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return np.array ([
 *                 self.thisptr.gravity[0],
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("rbdl.Model.gravity.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1583
 *                 ]
 *                 )
 *         def __set__ (self, values):             # <<<<<<<<<<<<<<
 *             for i in range (0,3):
 *                 self.thisptr.gravity[i] = values[i]
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_5Model_7gravity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static int __pyx_pw_4rbdl_5Model_7gravity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_7gravity_2__set__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_5Model_7gravity_2__set__(struct __pyx_obj_4rbdl_Model *__pyx_v_self, PyObject *__pyx_v_values) {
  long __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "rbdl.pyx":1584
 *                 )
 *         def __set__ (self, values):
 *             for i in range (0,3):             # <<<<<<<<<<<<<<
 *                 self.thisptr.gravity[i] = values[i]
 * 
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":1585
 *         def __set__ (self, values):
 *             for i in range (0,3):
 *                 self.thisptr.gravity[i] = values[i]             # <<<<<<<<<<<<<<
 * 
 *     property v:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_values, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1585, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    (__pyx_v_self->thisptr->gravity[__pyx_v_i]) = __pyx_t_3;
  }

  /* "rbdl.pyx":1583
 *                 ]
 *                 )
 *         def __set__ (self, values):             # <<<<<<<<<<<<<<
 *             for i in range (0,3):
 *                 self.thisptr.gravity[i] = values[i]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.Model.gravity.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1588
 * 
 *     property v:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.v
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1v_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1v_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1v___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1v___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1589
 *     property v:
 *         def __get__ (self):
 *             return self.v             # <<<<<<<<<<<<<<
 * 
 *     property a:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->v));
  __pyx_r = ((PyObject *)__pyx_v_self->v);
  goto __pyx_L0;

  /* "rbdl.pyx":1588
 * 
 *     property v:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.v
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1592
 * 
 *     property a:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.a
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1a_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1a_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1a___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1a___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1593
 *     property a:
 *         def __get__ (self):
 *             return self.a             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->a));
  __pyx_r = ((PyObject *)__pyx_v_self->a);
  goto __pyx_L0;

  /* "rbdl.pyx":1592
 * 
 *     property a:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.a
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1597
 * 
 *     property mJoints:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.mJoints
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_7mJoints_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_7mJoints_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_7mJoints___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_7mJoints___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1598
 *     property mJoints:
 *         def __get__ (self):
 *             return self.mJoints             # <<<<<<<<<<<<<<
 * 
 *     property S:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->mJoints));
  __pyx_r = ((PyObject *)__pyx_v_self->mJoints);
  goto __pyx_L0;

  /* "rbdl.pyx":1597
 * 
 *     property mJoints:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.mJoints
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1601
 * 
 *     property S:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.S
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1S_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1S_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1S___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1S___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1602
 *     property S:
 *         def __get__ (self):
 *             return self.S             # <<<<<<<<<<<<<<
 * 
 *     property X_J:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->S));
  __pyx_r = ((PyObject *)__pyx_v_self->S);
  goto __pyx_L0;

  /* "rbdl.pyx":1601
 * 
 *     property S:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.S
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1605
 * 
 *     property X_J:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_J
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_3X_J_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_3X_J_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_3X_J___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_3X_J___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1606
 *     property X_J:
 *         def __get__ (self):
 *             return self.X_J             # <<<<<<<<<<<<<<
 * 
 *     property v_J:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->X_J));
  __pyx_r = ((PyObject *)__pyx_v_self->X_J);
  goto __pyx_L0;

  /* "rbdl.pyx":1605
 * 
 *     property X_J:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_J
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1609
 * 
 *     property v_J:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.v_J
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_3v_J_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_3v_J_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_3v_J___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_3v_J___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1610
 *     property v_J:
 *         def __get__ (self):
 *             return self.v_J             # <<<<<<<<<<<<<<
 * 
 *     property c_J:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->v_J));
  __pyx_r = ((PyObject *)__pyx_v_self->v_J);
  goto __pyx_L0;

  /* "rbdl.pyx":1609
 * 
 *     property v_J:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.v_J
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1613
 * 
 *     property c_J:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.c_J
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_3c_J_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_3c_J_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_3c_J___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_3c_J___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1614
 *     property c_J:
 *         def __get__ (self):
 *             return self.c_J             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->c_J));
  __pyx_r = ((PyObject *)__pyx_v_self->c_J);
  goto __pyx_L0;

  /* "rbdl.pyx":1613
 * 
 *     property c_J:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.c_J
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1618
 * 
 *     property mJointUpdateOrder:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mJointUpdateOrder
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_17mJointUpdateOrder_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_17mJointUpdateOrder_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_17mJointUpdateOrder___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_17mJointUpdateOrder___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1619
 *     property mJointUpdateOrder:
 *         def __get__ (self):
 *             return self.thisptr.mJointUpdateOrder             # <<<<<<<<<<<<<<
 * 
 *     property X_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_self->thisptr->mJointUpdateOrder); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1618
 * 
 *     property mJointUpdateOrder:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mJointUpdateOrder
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.mJointUpdateOrder.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1622
 * 
 *     property X_T:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_T
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_3X_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_3X_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_3X_T___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_3X_T___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1623
 *     property X_T:
 *         def __get__ (self):
 *             return self.X_T             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->X_T));
  __pyx_r = ((PyObject *)__pyx_v_self->X_T);
  goto __pyx_L0;

  /* "rbdl.pyx":1622
 * 
 *     property X_T:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_T
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1627
 * 
 *     property mFixedJointCount:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mFixedJointCount
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_16mFixedJointCount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_16mFixedJointCount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_16mFixedJointCount___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_16mFixedJointCount___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1628
 *     property mFixedJointCount:
 *         def __get__ (self):
 *             return self.thisptr.mFixedJointCount             # <<<<<<<<<<<<<<
 * 
 *     # TODO
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_self->thisptr->mFixedJointCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1627
 * 
 *     property mFixedJointCount:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mFixedJointCount
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.mFixedJointCount.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1637
 * 
 *     property multdof3_w_index:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.multdof3_w_index
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_16multdof3_w_index_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_16multdof3_w_index_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_16multdof3_w_index___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_16multdof3_w_index___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1638
 *     property multdof3_w_index:
 *         def __get__ (self):
 *             return self.thisptr.multdof3_w_index             # <<<<<<<<<<<<<<
 * 
 *     property c:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_self->thisptr->multdof3_w_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1637
 * 
 *     property multdof3_w_index:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.multdof3_w_index
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.multdof3_w_index.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1641
 * 
 *     property c:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.c
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1c_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1c_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1c___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1c___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1642
 *     property c:
 *         def __get__ (self):
 *             return self.c             # <<<<<<<<<<<<<<
 * 
 *     property IA:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->c));
  __pyx_r = ((PyObject *)__pyx_v_self->c);
  goto __pyx_L0;

  /* "rbdl.pyx":1641
 * 
 *     property c:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.c
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1645
 * 
 *     property IA:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.IA
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_2IA_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_2IA_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_2IA___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_2IA___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1646
 *     property IA:
 *         def __get__ (self):
 *             return self.IA             # <<<<<<<<<<<<<<
 * 
 *     property pA:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->IA));
  __pyx_r = ((PyObject *)__pyx_v_self->IA);
  goto __pyx_L0;

  /* "rbdl.pyx":1645
 * 
 *     property IA:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.IA
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1649
 * 
 *     property pA:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.pA
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_2pA_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_2pA_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_2pA___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_2pA___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1650
 *     property pA:
 *         def __get__ (self):
 *             return self.pA             # <<<<<<<<<<<<<<
 * 
 *     property U:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->pA));
  __pyx_r = ((PyObject *)__pyx_v_self->pA);
  goto __pyx_L0;

  /* "rbdl.pyx":1649
 * 
 *     property pA:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.pA
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1653
 * 
 *     property U:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.U
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1U_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1U_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1U___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1U___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1654
 *     property U:
 *         def __get__ (self):
 *             return self.U             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->U));
  __pyx_r = ((PyObject *)__pyx_v_self->U);
  goto __pyx_L0;

  /* "rbdl.pyx":1653
 * 
 *     property U:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.U
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1662
 * 
 *     property f:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.f
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1f_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1f_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1f___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1f___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1663
 *     property f:
 *         def __get__ (self):
 *             return self.f             # <<<<<<<<<<<<<<
 * 
 *     property I:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->f));
  __pyx_r = ((PyObject *)__pyx_v_self->f);
  goto __pyx_L0;

  /* "rbdl.pyx":1662
 * 
 *     property f:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.f
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1666
 * 
 *     property I:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.I
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_1I_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_1I_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_1I___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_1I___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1667
 *     property I:
 *         def __get__ (self):
 *             return self.I             # <<<<<<<<<<<<<<
 * 
 *     property Ic:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->I));
  __pyx_r = ((PyObject *)__pyx_v_self->I);
  goto __pyx_L0;

  /* "rbdl.pyx":1666
 * 
 *     property I:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.I
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1670
 * 
 *     property Ic:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.Ic
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_2Ic_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_2Ic_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_2Ic___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_2Ic___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1671
 *     property Ic:
 *         def __get__ (self):
 *             return self.Ic             # <<<<<<<<<<<<<<
 * 
 *     property hc:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->Ic));
  __pyx_r = ((PyObject *)__pyx_v_self->Ic);
  goto __pyx_L0;

  /* "rbdl.pyx":1670
 * 
 *     property Ic:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.Ic
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1674
 * 
 *     property hc:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.hc
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_2hc_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_2hc_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_2hc___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_2hc___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1675
 *     property hc:
 *         def __get__ (self):
 *             return self.hc             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hc));
  __pyx_r = ((PyObject *)__pyx_v_self->hc);
  goto __pyx_L0;

  /* "rbdl.pyx":1674
 * 
 *     property hc:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.hc
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1679
 * 
 *     property X_lambda:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_lambda
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_8X_lambda_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_8X_lambda_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_8X_lambda___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_8X_lambda___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1680
 *     property X_lambda:
 *         def __get__ (self):
 *             return self.X_lambda             # <<<<<<<<<<<<<<
 * 
 *     property X_base:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->X_lambda));
  __pyx_r = ((PyObject *)__pyx_v_self->X_lambda);
  goto __pyx_L0;

  /* "rbdl.pyx":1679
 * 
 *     property X_lambda:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_lambda
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1683
 * 
 *     property X_base:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_base
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_6X_base_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_6X_base_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_6X_base___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_6X_base___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1684
 *     property X_base:
 *         def __get__ (self):
 *             return self.X_base             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->X_base));
  __pyx_r = ((PyObject *)__pyx_v_self->X_base);
  goto __pyx_L0;

  /* "rbdl.pyx":1683
 * 
 *     property X_base:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.X_base
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1688
 * 
 *     property mFixedBodies:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.mFixedBodies
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_12mFixedBodies_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_12mFixedBodies_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_12mFixedBodies___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_12mFixedBodies___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1689
 *     property mFixedBodies:
 *         def __get__ (self):
 *             return self.mFixedBodies             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->mFixedBodies));
  __pyx_r = ((PyObject *)__pyx_v_self->mFixedBodies);
  goto __pyx_L0;

  /* "rbdl.pyx":1688
 * 
 *     property mFixedBodies:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.mFixedBodies
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1693
 * 
 *     property fixed_body_discriminator:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.fixed_body_discriminator
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_24fixed_body_discriminator_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_24fixed_body_discriminator_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_24fixed_body_discriminator___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_24fixed_body_discriminator___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1694
 *     property fixed_body_discriminator:
 *         def __get__ (self):
 *             return self.thisptr.fixed_body_discriminator             # <<<<<<<<<<<<<<
 * 
 *     property mBodies:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->fixed_body_discriminator); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1693
 * 
 *     property fixed_body_discriminator:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.fixed_body_discriminator
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.fixed_body_discriminator.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1697
 * 
 *     property mBodies:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.mBodies
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_7mBodies_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_5Model_7mBodies_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_7mBodies___get__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_7mBodies___get__(struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1698
 *     property mBodies:
 *         def __get__ (self):
 *             return self.mBodies             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->mBodies));
  __pyx_r = ((PyObject *)__pyx_v_self->mBodies);
  goto __pyx_L0;

  /* "rbdl.pyx":1697
 * 
 *     property mBodies:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.mBodies
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_27__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_5Model_26__reduce_cython__[] = "Model.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_5Model_27__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_26__reduce_cython__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_26__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Model *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__77, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5Model_29__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_5Model_28__setstate_cython__[] = "Model.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_5Model_29__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_5Model_28__setstate_cython__(((struct __pyx_obj_4rbdl_Model *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_5Model_28__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_Model *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.Model.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1712
 *     cdef crbdl.ConstraintSet *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1712, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1712, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1712, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._ConstraintSet_point_Vector3d_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1713
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.ConstraintSet *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::ConstraintSet *)__pyx_v_ptr);

  /* "rbdl.pyx":1712
 *     cdef crbdl.ConstraintSet *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1715
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::Vector3d> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1716
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.point[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1718
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.point[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.point[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1718, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1718, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1718, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1718, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1718, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1718, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1718, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1718, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1718, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1718, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1718, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Vector3d), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1718, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1718, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->point[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1718, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1718, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1718, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1718, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1716
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.point[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1720
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.point[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.point[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Vector3d), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1720, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1720, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->point[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1720, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1720, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1720, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1720, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1720, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1720, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1715
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._ConstraintSet_point_Vector3d_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1722
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.point[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::Vector3d> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1723
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1725
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1726
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.point[i] = (<Vector3d> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1726, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1726, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1726, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1726, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1726, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1726, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1727
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.point[i] = (<Vector3d> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1727, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_Vector3d); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1727, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1727, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1727, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Vector3d_b, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1727, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1727, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1727, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1727, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1728
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.point[i] = (<Vector3d> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1728, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1728, __pyx_L1_error)
      (__pyx_v_self->parent->point[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Vector3d *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1729
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.point[i] = (<Vector3d> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1729, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1726
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.point[i] = (<Vector3d> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1723
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1731
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.point[key] = (<Vector3d> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_Vector3d); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1731, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1731, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Vector3d_b, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1731, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1731, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1731, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1731, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1732
 *         else:
 *             assert isinstance (value, Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value)) + "."
 *             self.parent.point[key] = (<Vector3d> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L1_error)
    (__pyx_v_self->parent->point[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1722
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.point[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._ConstraintSet_point_Vector3d_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1734
 *             self.parent.point[key] = (<Vector3d> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.point.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1735
 * 
 *     def __len__(self):
 *         return self.parent.point.size()             # <<<<<<<<<<<<<<
 * 
 * cdef class _ConstraintSet_normal_Vector3d_VectorWrapper:
 */
  __pyx_r = __pyx_v_self->parent->point.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1734
 *             self.parent.point[key] = (<Vector3d> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.point.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_8__reduce_cython__[] = "_ConstraintSet_point_Vector3d_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._ConstraintSet_point_Vector3d_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_10__setstate_cython__[] = "_ConstraintSet_point_Vector3d_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__80, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._ConstraintSet_point_Vector3d_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1740
 *     cdef crbdl.ConstraintSet *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uintptr_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptr,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1740, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ptr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ptr == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1740, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1740, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl._ConstraintSet_normal_Vector3d_VectorWrapper.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper___cinit__(((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_v_self), __pyx_v_ptr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper___cinit__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, uintptr_t __pyx_v_ptr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1741
 * 
 *     def __cinit__ (self, uintptr_t ptr):
 *         self.parent = <crbdl.ConstraintSet *> ptr             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_v_self->parent = ((RigidBodyDynamics::ConstraintSet *)__pyx_v_ptr);

  /* "rbdl.pyx":1740
 *     cdef crbdl.ConstraintSet *parent
 * 
 *     def __cinit__ (self, uintptr_t ptr):             # <<<<<<<<<<<<<<
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1743
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_2__getitem__(((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_2__getitem__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  std::vector<RigidBodyDynamics::Math::Vector3d> ::size_type __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "rbdl.pyx":1744
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[i])) for i in xrange (*key.indices(len(self)))]
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1746
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[i])) for i in xrange (*key.indices(len(self)))]             # <<<<<<<<<<<<<<
 *         else:
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[key]))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1746, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1746, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1746, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1746, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 1746, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1746, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Vector3d), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1746, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->normal[__pyx_t_11])))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1746, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (!__pyx_t_8) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_7};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1746, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8); __pyx_t_8 = NULL;
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1746, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1746, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "rbdl.pyx":1744
 * 
 *     def __getitem__(self, key):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[i])) for i in xrange (*key.indices(len(self)))]
 */
  }

  /* "rbdl.pyx":1748
 *             return [Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[i])) for i in xrange (*key.indices(len(self)))]
 *         else:
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[key]))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_4rbdl_Vector3d), __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1748, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyInt_FromSize_t(((uintptr_t)(&(__pyx_v_self->parent->normal[__pyx_t_11])))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1748, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1748, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1748, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1748, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1748, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "rbdl.pyx":1743
 *         self.parent = <crbdl.ConstraintSet *> ptr
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("rbdl._ConstraintSet_normal_Vector3d_VectorWrapper.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1750
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_4__setitem__(((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_4__setitem__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_src_index = NULL;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  std::vector<RigidBodyDynamics::Math::Vector3d> ::size_type __pyx_t_10;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "rbdl.pyx":1751
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1753
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 *             src_index = 0             # <<<<<<<<<<<<<<
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_src_index = __pyx_int_0;

    /* "rbdl.pyx":1754
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.normal[i] = (<Vector3d> value[src_index]).thisptr[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_indices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1754, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 1754, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1754, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1754, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1754, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1754, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1754, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1754, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1754, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1754, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "rbdl.pyx":1755
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."             # <<<<<<<<<<<<<<
 *                 self.parent.normal[i] = (<Vector3d> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_3, __pyx_ptype_4rbdl_Vector3d); 
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!(__pyx_t_2 != 0))) {
          __pyx_t_3 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)Py_TYPE(__pyx_t_3)));
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Vector3d_b, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_kp_s__34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_Pack(1, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          PyErr_SetObject(PyExc_AssertionError, __pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __PYX_ERR(0, 1755, __pyx_L1_error)
        }
      }
      #endif

      /* "rbdl.pyx":1756
 *             for i in xrange (*key.indices(len(self))):
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.normal[i] = (<Vector3d> value[src_index]).thisptr[0]             # <<<<<<<<<<<<<<
 *                 src_index = src_index + 1
 *         else:
 */
      __pyx_t_8 = PyObject_GetItem(__pyx_v_value, __pyx_v_src_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1756, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1756, __pyx_L1_error)
      (__pyx_v_self->parent->normal[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Vector3d *)__pyx_t_8)->thisptr[0]);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "rbdl.pyx":1757
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.normal[i] = (<Vector3d> value[src_index]).thisptr[0]
 *                 src_index = src_index + 1             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance (value, Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value)) + "."
 */
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_src_index, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1757, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_src_index, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "rbdl.pyx":1754
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 *             for i in xrange (*key.indices(len(self))):             # <<<<<<<<<<<<<<
 *                 assert isinstance (value[src_index], Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value[src_index])) + "."
 *                 self.parent.normal[i] = (<Vector3d> value[src_index]).thisptr[0]
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "rbdl.pyx":1751
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance( key, slice ) :             # <<<<<<<<<<<<<<
 *             #Get the start, stop, and step from the slice
 *             src_index = 0
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1759
 *                 src_index = src_index + 1
 *         else:
 *             assert isinstance (value, Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value)) + "."             # <<<<<<<<<<<<<<
 *             self.parent.normal[key] = (<Vector3d> value).thisptr[0]
 * 
 */
  /*else*/ {
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_4rbdl_Vector3d); 
      if (unlikely(!(__pyx_t_2 != 0))) {
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
        PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Invalid_type_Expected_Vector3d_b, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__34); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_Pack(1, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        PyErr_SetObject(PyExc_AssertionError, __pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 1759, __pyx_L1_error)
      }
    }
    #endif

    /* "rbdl.pyx":1760
 *         else:
 *             assert isinstance (value, Vector3d), "Invalid type! Expected Vector3d, but got " + str(type(value)) + "."
 *             self.parent.normal[key] = (<Vector3d> value).thisptr[0]             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_key); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1760, __pyx_L1_error)
    (__pyx_v_self->parent->normal[__pyx_t_10]) = (((struct __pyx_obj_4rbdl_Vector3d *)__pyx_v_value)->thisptr[0]);
  }
  __pyx_L3:;

  /* "rbdl.pyx":1750
 *             return Vector3d.fromPointer (<uintptr_t> &(self.parent.normal[key]))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance( key, slice ) :
 *             #Get the start, stop, and step from the slice
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl._ConstraintSet_normal_Vector3d_VectorWrapper.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_src_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1762
 *             self.parent.normal[key] = (<Vector3d> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.normal.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_6__len__(((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_6__len__(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "rbdl.pyx":1763
 * 
 *     def __len__(self):
 *         return self.parent.normal.size()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->parent->normal.size();
  goto __pyx_L0;

  /* "rbdl.pyx":1762
 *             self.parent.normal[key] = (<Vector3d> value).thisptr[0]
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.parent.normal.size()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_8__reduce_cython__[] = "_ConstraintSet_normal_Vector3d_VectorWrapper.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_8__reduce_cython__(((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._ConstraintSet_normal_Vector3d_VectorWrapper.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_10__setstate_cython__[] = "_ConstraintSet_normal_Vector3d_VectorWrapper.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_10__setstate_cython__(((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl._ConstraintSet_normal_Vector3d_VectorWrapper.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1771
 *     cdef _ConstraintSet_normal_Vector3d_VectorWrapper normal
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new crbdl.ConstraintSet()
 *         self.point = _ConstraintSet_point_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 */

/* Python wrapper */
static int __pyx_pw_4rbdl_13ConstraintSet_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4rbdl_13ConstraintSet_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet___cinit__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4rbdl_13ConstraintSet___cinit__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "rbdl.pyx":1772
 * 
 *     def __cinit__(self):
 *         self.thisptr = new crbdl.ConstraintSet()             # <<<<<<<<<<<<<<
 *         self.point = _ConstraintSet_point_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.normal = _ConstraintSet_normal_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 */
  __pyx_v_self->thisptr = new RigidBodyDynamics::ConstraintSet();

  /* "rbdl.pyx":1773
 *     def __cinit__(self):
 *         self.thisptr = new crbdl.ConstraintSet()
 *         self.point = _ConstraintSet_point_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 *         self.normal = _ConstraintSet_normal_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->point);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->point));
  __pyx_v_self->point = ((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1774
 *         self.thisptr = new crbdl.ConstraintSet()
 *         self.point = _ConstraintSet_point_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 *         self.normal = _ConstraintSet_normal_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->normal);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->normal));
  __pyx_v_self->normal = ((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":1771
 *     cdef _ConstraintSet_normal_Vector3d_VectorWrapper normal
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new crbdl.ConstraintSet()
 *         self.point = _ConstraintSet_point_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.ConstraintSet.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1776
 *         self.normal = _ConstraintSet_normal_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4rbdl_13ConstraintSet_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4rbdl_13ConstraintSet_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4rbdl_13ConstraintSet_2__dealloc__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4rbdl_13ConstraintSet_2__dealloc__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "rbdl.pyx":1777
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete __pyx_v_self->thisptr;

  /* "rbdl.pyx":1776
 *         self.normal = _ConstraintSet_normal_Vector3d_VectorWrapper (<uintptr_t> self.thisptr)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "rbdl.pyx":1779
 *         del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.ConstraintSet (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_4__repr__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_4__repr__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "rbdl.pyx":1780
 * 
 *     def __repr__(self):
 *         return "rbdl.ConstraintSet (0x{:0x})".format(<uintptr_t><void *> self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def AddContactConstraint (self,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_rbdl_ConstraintSet_0x_0x, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(((uintptr_t)((void *)__pyx_v_self->thisptr))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1780, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1780, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1780, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1780, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1780, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1779
 *         del self.thisptr
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "rbdl.ConstraintSet (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("rbdl.ConstraintSet.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1782
 *         return "rbdl.ConstraintSet (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 *     def AddContactConstraint (self,             # <<<<<<<<<<<<<<
 *             body_id not None,
 *             body_point not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_7AddContactConstraint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_6AddContactConstraint[] = "ConstraintSet.AddContactConstraint(self, body_id, body_point, world_normal, constraint_name=None, normal_acceleration=0.0)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_7AddContactConstraint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_body_id = 0;
  PyObject *__pyx_v_body_point = 0;
  PyObject *__pyx_v_world_normal = 0;
  PyObject *__pyx_v_constraint_name = 0;
  PyObject *__pyx_v_normal_acceleration = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddContactConstraint (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_body_id,&__pyx_n_s_body_point,&__pyx_n_s_world_normal,&__pyx_n_s_constraint_name,&__pyx_n_s_normal_acceleration,0};
    PyObject* values[5] = {0,0,0,0,0};

    /* "rbdl.pyx":1786
 *             body_point not None,
 *             world_normal not None,
 *             constraint_name = None,             # <<<<<<<<<<<<<<
 *             normal_acceleration = 0.):
 *         cdef crbdl.Vector3d c_body_point
 */
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)__pyx_float_0_);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddContactConstraint", 0, 3, 5, 1); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_world_normal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddContactConstraint", 0, 3, 5, 2); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_constraint_name);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_normal_acceleration);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddContactConstraint") < 0)) __PYX_ERR(0, 1782, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_body_id = values[0];
    __pyx_v_body_point = values[1];
    __pyx_v_world_normal = values[2];
    __pyx_v_constraint_name = values[3];
    __pyx_v_normal_acceleration = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddContactConstraint", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1782, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.ConstraintSet.AddContactConstraint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(((PyObject *)__pyx_v_body_id) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "body_id"); __PYX_ERR(0, 1783, __pyx_L1_error)
  }
  if (unlikely(((PyObject *)__pyx_v_body_point) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "body_point"); __PYX_ERR(0, 1784, __pyx_L1_error)
  }
  if (unlikely(((PyObject *)__pyx_v_world_normal) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "world_normal"); __PYX_ERR(0, 1785, __pyx_L1_error)
  }
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_6AddContactConstraint(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self), __pyx_v_body_id, __pyx_v_body_point, __pyx_v_world_normal, __pyx_v_constraint_name, __pyx_v_normal_acceleration);

  /* "rbdl.pyx":1782
 *         return "rbdl.ConstraintSet (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 *     def AddContactConstraint (self,             # <<<<<<<<<<<<<<
 *             body_id not None,
 *             body_point not None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_6AddContactConstraint(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, PyObject *__pyx_v_body_id, PyObject *__pyx_v_body_point, PyObject *__pyx_v_world_normal, PyObject *__pyx_v_constraint_name, PyObject *__pyx_v_normal_acceleration) {
  RigidBodyDynamics::Math::Vector3d __pyx_v_c_body_point;
  RigidBodyDynamics::Math::Vector3d __pyx_v_c_world_normal;
  char *__pyx_v_constraint_name_ptr;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  char *__pyx_t_6;
  unsigned int __pyx_t_7;
  __Pyx_RefNannySetupContext("AddContactConstraint", 0);

  /* "rbdl.pyx":1792
 *         cdef char* constraint_name_ptr
 * 
 *         for i in range (3):             # <<<<<<<<<<<<<<
 *             c_body_point[i] = body_point[i]
 *             c_world_normal[i] = world_normal[i]
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "rbdl.pyx":1793
 * 
 *         for i in range (3):
 *             c_body_point[i] = body_point[i]             # <<<<<<<<<<<<<<
 *             c_world_normal[i] = world_normal[i]
 * 
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_body_point, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1793, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    (__pyx_v_c_body_point[__pyx_v_i]) = __pyx_t_3;

    /* "rbdl.pyx":1794
 *         for i in range (3):
 *             c_body_point[i] = body_point[i]
 *             c_world_normal[i] = world_normal[i]             # <<<<<<<<<<<<<<
 * 
 *         if constraint_name is None:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_world_normal, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    (__pyx_v_c_world_normal[__pyx_v_i]) = __pyx_t_3;
  }

  /* "rbdl.pyx":1796
 *             c_world_normal[i] = world_normal[i]
 * 
 *         if constraint_name is None:             # <<<<<<<<<<<<<<
 *             constraint_name_ptr = NULL
 *         else:
 */
  __pyx_t_4 = (__pyx_v_constraint_name == Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "rbdl.pyx":1797
 * 
 *         if constraint_name is None:
 *             constraint_name_ptr = NULL             # <<<<<<<<<<<<<<
 *         else:
 *             constraint_name_ptr = constraint_name
 */
    __pyx_v_constraint_name_ptr = NULL;

    /* "rbdl.pyx":1796
 *             c_world_normal[i] = world_normal[i]
 * 
 *         if constraint_name is None:             # <<<<<<<<<<<<<<
 *             constraint_name_ptr = NULL
 *         else:
 */
    goto __pyx_L5;
  }

  /* "rbdl.pyx":1799
 *             constraint_name_ptr = NULL
 *         else:
 *             constraint_name_ptr = constraint_name             # <<<<<<<<<<<<<<
 * 
 *         return self.thisptr.AddContactConstraint (
 */
  /*else*/ {
    __pyx_t_6 = __Pyx_PyObject_AsWritableString(__pyx_v_constraint_name); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) __PYX_ERR(0, 1799, __pyx_L1_error)
    __pyx_v_constraint_name_ptr = __pyx_t_6;
  }
  __pyx_L5:;

  /* "rbdl.pyx":1801
 *             constraint_name_ptr = constraint_name
 * 
 *         return self.thisptr.AddContactConstraint (             # <<<<<<<<<<<<<<
 *                 body_id,
 *                 c_body_point,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1802
 * 
 *         return self.thisptr.AddContactConstraint (
 *                 body_id,             # <<<<<<<<<<<<<<
 *                 c_body_point,
 *                 c_world_normal,
 */
  __pyx_t_7 = __Pyx_PyInt_As_unsigned_int(__pyx_v_body_id); if (unlikely((__pyx_t_7 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1802, __pyx_L1_error)

  /* "rbdl.pyx":1807
 *                 constraint_name_ptr,
 *                 normal_acceleration
 *                 )             # <<<<<<<<<<<<<<
 * 
 *     def AddLoopConstraint (self,
 */
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_normal_acceleration); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1807, __pyx_L1_error)

  /* "rbdl.pyx":1801
 *             constraint_name_ptr = constraint_name
 * 
 *         return self.thisptr.AddContactConstraint (             # <<<<<<<<<<<<<<
 *                 body_id,
 *                 c_body_point,
 */
  __pyx_t_2 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->AddContactConstraint(__pyx_t_7, __pyx_v_c_body_point, __pyx_v_c_world_normal, __pyx_v_constraint_name_ptr, __pyx_t_3)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1782
 *         return "rbdl.ConstraintSet (0x{:0x})".format(<uintptr_t><void *> self.thisptr)
 * 
 *     def AddContactConstraint (self,             # <<<<<<<<<<<<<<
 *             body_id not None,
 *             body_point not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("rbdl.ConstraintSet.AddContactConstraint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1809
 *                 )
 * 
 *     def AddLoopConstraint (self,             # <<<<<<<<<<<<<<
 *             id_predecessor not None,
 *             id_successor not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_9AddLoopConstraint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_8AddLoopConstraint[] = "ConstraintSet.AddLoopConstraint(self, id_predecessor, id_successor, SpatialTransform X_predecessor, SpatialTransform X_successor, SpatialVector axis, enable_stabilization=False, stabilization_param=0.1, constraint_name=None)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_9AddLoopConstraint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_id_predecessor = 0;
  PyObject *__pyx_v_id_successor = 0;
  struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_X_predecessor = 0;
  struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_X_successor = 0;
  struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_axis = 0;
  PyObject *__pyx_v_enable_stabilization = 0;
  PyObject *__pyx_v_stabilization_param = 0;
  PyObject *__pyx_v_constraint_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddLoopConstraint (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_id_predecessor,&__pyx_n_s_id_successor,&__pyx_n_s_X_predecessor,&__pyx_n_s_X_successor,&__pyx_n_s_axis,&__pyx_n_s_enable_stabilization,&__pyx_n_s_stabilization_param,&__pyx_n_s_constraint_name,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};

    /* "rbdl.pyx":1815
 *             SpatialTransform X_successor not None,
 *             SpatialVector axis not None,
 *             enable_stabilization = False,             # <<<<<<<<<<<<<<
 *             stabilization_param = 0.1,
 *             constraint_name = None):
 */
    values[5] = ((PyObject *)Py_False);
    values[6] = ((PyObject *)__pyx_float_0_1);

    /* "rbdl.pyx":1817
 *             enable_stabilization = False,
 *             stabilization_param = 0.1,
 *             constraint_name = None):             # <<<<<<<<<<<<<<
 *         cdef char* constraint_name_ptr
 * 
 */
    values[7] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id_predecessor)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id_successor)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddLoopConstraint", 0, 5, 8, 1); __PYX_ERR(0, 1809, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_X_predecessor)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddLoopConstraint", 0, 5, 8, 2); __PYX_ERR(0, 1809, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_X_successor)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddLoopConstraint", 0, 5, 8, 3); __PYX_ERR(0, 1809, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_axis)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddLoopConstraint", 0, 5, 8, 4); __PYX_ERR(0, 1809, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_enable_stabilization);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stabilization_param);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_constraint_name);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddLoopConstraint") < 0)) __PYX_ERR(0, 1809, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_id_predecessor = values[0];
    __pyx_v_id_successor = values[1];
    __pyx_v_X_predecessor = ((struct __pyx_obj_4rbdl_SpatialTransform *)values[2]);
    __pyx_v_X_successor = ((struct __pyx_obj_4rbdl_SpatialTransform *)values[3]);
    __pyx_v_axis = ((struct __pyx_obj_4rbdl_SpatialVector *)values[4]);
    __pyx_v_enable_stabilization = values[5];
    __pyx_v_stabilization_param = values[6];
    __pyx_v_constraint_name = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddLoopConstraint", 0, 5, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1809, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.ConstraintSet.AddLoopConstraint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(((PyObject *)__pyx_v_id_predecessor) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "id_predecessor"); __PYX_ERR(0, 1810, __pyx_L1_error)
  }
  if (unlikely(((PyObject *)__pyx_v_id_successor) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "id_successor"); __PYX_ERR(0, 1811, __pyx_L1_error)
  }
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_X_predecessor), __pyx_ptype_4rbdl_SpatialTransform, 0, "X_predecessor", 0))) __PYX_ERR(0, 1812, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_X_successor), __pyx_ptype_4rbdl_SpatialTransform, 0, "X_successor", 0))) __PYX_ERR(0, 1813, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_axis), __pyx_ptype_4rbdl_SpatialVector, 0, "axis", 0))) __PYX_ERR(0, 1814, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_8AddLoopConstraint(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self), __pyx_v_id_predecessor, __pyx_v_id_successor, __pyx_v_X_predecessor, __pyx_v_X_successor, __pyx_v_axis, __pyx_v_enable_stabilization, __pyx_v_stabilization_param, __pyx_v_constraint_name);

  /* "rbdl.pyx":1809
 *                 )
 * 
 *     def AddLoopConstraint (self,             # <<<<<<<<<<<<<<
 *             id_predecessor not None,
 *             id_successor not None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_8AddLoopConstraint(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, PyObject *__pyx_v_id_predecessor, PyObject *__pyx_v_id_successor, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_X_predecessor, struct __pyx_obj_4rbdl_SpatialTransform *__pyx_v_X_successor, struct __pyx_obj_4rbdl_SpatialVector *__pyx_v_axis, PyObject *__pyx_v_enable_stabilization, PyObject *__pyx_v_stabilization_param, PyObject *__pyx_v_constraint_name) {
  char *__pyx_v_constraint_name_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  unsigned int __pyx_t_4;
  unsigned int __pyx_t_5;
  bool __pyx_t_6;
  double __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("AddLoopConstraint", 0);

  /* "rbdl.pyx":1820
 *         cdef char* constraint_name_ptr
 * 
 *         if constraint_name is None:             # <<<<<<<<<<<<<<
 *             constraint_name_ptr = NULL
 *         else:
 */
  __pyx_t_1 = (__pyx_v_constraint_name == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":1821
 * 
 *         if constraint_name is None:
 *             constraint_name_ptr = NULL             # <<<<<<<<<<<<<<
 *         else:
 *             constraint_name_ptr = constraint_name
 */
    __pyx_v_constraint_name_ptr = NULL;

    /* "rbdl.pyx":1820
 *         cdef char* constraint_name_ptr
 * 
 *         if constraint_name is None:             # <<<<<<<<<<<<<<
 *             constraint_name_ptr = NULL
 *         else:
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":1823
 *             constraint_name_ptr = NULL
 *         else:
 *             constraint_name_ptr = constraint_name             # <<<<<<<<<<<<<<
 * 
 *         return self.thisptr.AddLoopConstraint (
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_AsWritableString(__pyx_v_constraint_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L1_error)
    __pyx_v_constraint_name_ptr = __pyx_t_3;
  }
  __pyx_L3:;

  /* "rbdl.pyx":1825
 *             constraint_name_ptr = constraint_name
 * 
 *         return self.thisptr.AddLoopConstraint (             # <<<<<<<<<<<<<<
 *             id_predecessor,
 *             id_successor,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1826
 * 
 *         return self.thisptr.AddLoopConstraint (
 *             id_predecessor,             # <<<<<<<<<<<<<<
 *             id_successor,
 *             X_predecessor.thisptr[0],
 */
  __pyx_t_4 = __Pyx_PyInt_As_unsigned_int(__pyx_v_id_predecessor); if (unlikely((__pyx_t_4 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1826, __pyx_L1_error)

  /* "rbdl.pyx":1827
 *         return self.thisptr.AddLoopConstraint (
 *             id_predecessor,
 *             id_successor,             # <<<<<<<<<<<<<<
 *             X_predecessor.thisptr[0],
 *             X_successor.thisptr[0],
 */
  __pyx_t_5 = __Pyx_PyInt_As_unsigned_int(__pyx_v_id_successor); if (unlikely((__pyx_t_5 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1827, __pyx_L1_error)

  /* "rbdl.pyx":1831
 *             X_successor.thisptr[0],
 *             axis.thisptr[0],
 *             enable_stabilization,             # <<<<<<<<<<<<<<
 *             stabilization_param,
 *             constraint_name_ptr)
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_enable_stabilization); if (unlikely((__pyx_t_6 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1831, __pyx_L1_error)

  /* "rbdl.pyx":1832
 *             axis.thisptr[0],
 *             enable_stabilization,
 *             stabilization_param,             # <<<<<<<<<<<<<<
 *             constraint_name_ptr)
 * 
 */
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_v_stabilization_param); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1832, __pyx_L1_error)

  /* "rbdl.pyx":1825
 *             constraint_name_ptr = constraint_name
 * 
 *         return self.thisptr.AddLoopConstraint (             # <<<<<<<<<<<<<<
 *             id_predecessor,
 *             id_successor,
 */
  __pyx_t_8 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->thisptr->AddLoopConstraint(__pyx_t_4, __pyx_t_5, (__pyx_v_X_predecessor->thisptr[0]), (__pyx_v_X_successor->thisptr[0]), (__pyx_v_axis->thisptr[0]), __pyx_t_6, __pyx_t_7, __pyx_v_constraint_name_ptr)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_r = __pyx_t_8;
  __pyx_t_8 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1809
 *                 )
 * 
 *     def AddLoopConstraint (self,             # <<<<<<<<<<<<<<
 *             id_predecessor not None,
 *             id_successor not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("rbdl.ConstraintSet.AddLoopConstraint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1835
 *             constraint_name_ptr)
 * 
 *     def Bind (self, model):             # <<<<<<<<<<<<<<
 *         return self.thisptr.Bind ((<Model>model).thisptr[0])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_11Bind(PyObject *__pyx_v_self, PyObject *__pyx_v_model); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_10Bind[] = "ConstraintSet.Bind(self, model)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_11Bind(PyObject *__pyx_v_self, PyObject *__pyx_v_model) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Bind (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_10Bind(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self), ((PyObject *)__pyx_v_model));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_10Bind(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, PyObject *__pyx_v_model) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("Bind", 0);

  /* "rbdl.pyx":1836
 * 
 *     def Bind (self, model):
 *         return self.thisptr.Bind ((<Model>model).thisptr[0])             # <<<<<<<<<<<<<<
 * 
 *     def size (self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->Bind((((struct __pyx_obj_4rbdl_Model *)__pyx_v_model)->thisptr[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1835
 *             constraint_name_ptr)
 * 
 *     def Bind (self, model):             # <<<<<<<<<<<<<<
 *         return self.thisptr.Bind ((<Model>model).thisptr[0])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.ConstraintSet.Bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1838
 *         return self.thisptr.Bind ((<Model>model).thisptr[0])
 * 
 *     def size (self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.size()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_13size(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_12size[] = "ConstraintSet.size(self)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_13size(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("size (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_12size(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_12size(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("size", 0);

  /* "rbdl.pyx":1839
 * 
 *     def size (self):
 *         return self.thisptr.size()             # <<<<<<<<<<<<<<
 * 
 *     def clear (self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->thisptr->size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1838
 *         return self.thisptr.Bind ((<Model>model).thisptr[0])
 * 
 *     def size (self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.size()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.ConstraintSet.size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1841
 *         return self.thisptr.size()
 * 
 *     def clear (self):             # <<<<<<<<<<<<<<
 *         self.thisptr.clear()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_15clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_14clear[] = "ConstraintSet.clear(self)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_15clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_14clear(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_14clear(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear", 0);

  /* "rbdl.pyx":1842
 * 
 *     def clear (self):
 *         self.thisptr.clear()             # <<<<<<<<<<<<<<
 * 
 *     property bound:
 */
  __pyx_v_self->thisptr->clear();

  /* "rbdl.pyx":1841
 *         return self.thisptr.size()
 * 
 *     def clear (self):             # <<<<<<<<<<<<<<
 *         self.thisptr.clear()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1845
 * 
 *     property bound:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.bound
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5bound_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5bound_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_5bound___get__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_5bound___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1846
 *     property bound:
 *         def __get__ (self):
 *             return self.thisptr.bound             # <<<<<<<<<<<<<<
 * 
 * #    %VectorWrapperAddProperty (TYPE=string, MEMBER=name, PARENT=ConstraintSet)%
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->bound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1845
 * 
 *     property bound:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.bound
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.ConstraintSet.bound.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1851
 * 
 *     property point:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.point
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5point_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5point_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_5point___get__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_5point___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1852
 *     property point:
 *         def __get__ (self):
 *             return self.point             # <<<<<<<<<<<<<<
 * 
 *     property normal:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->point));
  __pyx_r = ((PyObject *)__pyx_v_self->point);
  goto __pyx_L0;

  /* "rbdl.pyx":1851
 * 
 *     property point:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.point
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1855
 * 
 *     property normal:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.normal
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_6normal_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_6normal_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_6normal___get__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_6normal___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1856
 *     property normal:
 *         def __get__ (self):
 *             return self.normal             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->normal));
  __pyx_r = ((PyObject *)__pyx_v_self->normal);
  goto __pyx_L0;

  /* "rbdl.pyx":1855
 * 
 *     property normal:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return self.normal
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1860
 * 
 *     property force:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return VectorNdToNumpy(self.thisptr.force)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5force_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_5force_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_5force___get__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_5force___get__(struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "rbdl.pyx":1861
 *     property force:
 *         def __get__ (self):
 *             return VectorNdToNumpy(self.thisptr.force)             # <<<<<<<<<<<<<<
 * 
 * #    property acceleration:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_4rbdl_VectorNdToNumpy(__pyx_v_self->thisptr->force)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1860
 * 
 *     property force:
 *         def __get__ (self):             # <<<<<<<<<<<<<<
 *             return VectorNdToNumpy(self.thisptr.force)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.ConstraintSet.force.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_16__reduce_cython__[] = "ConstraintSet.__reduce_cython__(self)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_16__reduce_cython__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__83, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.ConstraintSet.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_4rbdl_13ConstraintSet_18__setstate_cython__[] = "ConstraintSet.__setstate_cython__(self, __pyx_state)";
static PyObject *__pyx_pw_4rbdl_13ConstraintSet_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4rbdl_13ConstraintSet_18__setstate_cython__(((struct __pyx_obj_4rbdl_ConstraintSet *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_13ConstraintSet_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__84, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("rbdl.ConstraintSet.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1876
 * ##############################
 * 
 * def UpdateKinematics(             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_1UpdateKinematics(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_UpdateKinematics[] = "UpdateKinematics(Model model, ndarray q, ndarray qdot, ndarray qddot)";
static PyMethodDef __pyx_mdef_4rbdl_1UpdateKinematics = {"UpdateKinematics", (PyCFunction)__pyx_pw_4rbdl_1UpdateKinematics, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_UpdateKinematics};
static PyObject *__pyx_pw_4rbdl_1UpdateKinematics(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UpdateKinematics (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_qddot,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateKinematics", 1, 4, 4, 1); __PYX_ERR(0, 1876, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateKinematics", 1, 4, 4, 2); __PYX_ERR(0, 1876, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateKinematics", 1, 4, 4, 3); __PYX_ERR(0, 1876, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "UpdateKinematics") < 0)) __PYX_ERR(0, 1876, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_qddot = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UpdateKinematics", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1876, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.UpdateKinematics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1877, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1878, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 1879, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 1880, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_UpdateKinematics(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_qddot);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_UpdateKinematics(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UpdateKinematics", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1876, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1876, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1876, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1882
 *         np.ndarray[double, ndim=1, mode="c"] qddot
 * ):
 *     crbdl.UpdateKinematics(             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  RigidBodyDynamics::UpdateKinematics((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qddot)));

  /* "rbdl.pyx":1876
 * ##############################
 * 
 * def UpdateKinematics(             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.UpdateKinematics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1889
 *     )
 * 
 * def CalcBodyToBaseCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_3CalcBodyToBaseCoordinates(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_2CalcBodyToBaseCoordinates[] = "CalcBodyToBaseCoordinates(Model model, ndarray q, unsigned int body_id, ndarray body_point_position, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_3CalcBodyToBaseCoordinates = {"CalcBodyToBaseCoordinates", (PyCFunction)__pyx_pw_4rbdl_3CalcBodyToBaseCoordinates, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_2CalcBodyToBaseCoordinates};
static PyObject *__pyx_pw_4rbdl_3CalcBodyToBaseCoordinates(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcBodyToBaseCoordinates (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_update_kinematics,0};
    PyObject* values[5] = {0,0,0,0,0};

    /* "rbdl.pyx":1893
 *         unsigned int body_id,
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return Vector3dToNumpy (crbdl.CalcBodyToBaseCoordinates (
 *             model.thisptr[0],
 */
    values[4] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodyToBaseCoordinates", 0, 4, 5, 1); __PYX_ERR(0, 1889, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodyToBaseCoordinates", 0, 4, 5, 2); __PYX_ERR(0, 1889, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodyToBaseCoordinates", 0, 4, 5, 3); __PYX_ERR(0, 1889, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcBodyToBaseCoordinates") < 0)) __PYX_ERR(0, 1889, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1891, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[3]);
    __pyx_v_update_kinematics = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcBodyToBaseCoordinates", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1889, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcBodyToBaseCoordinates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1889, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1890, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1892, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_2CalcBodyToBaseCoordinates(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1889
 *     )
 * 
 * def CalcBodyToBaseCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_2CalcBodyToBaseCoordinates(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcBodyToBaseCoordinates", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1889, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1889, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1894
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcBodyToBaseCoordinates (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1900
 *             NumpyToVector3d (body_point_position),
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcBaseToBodyCoordinates (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1900, __pyx_L1_error)

  /* "rbdl.pyx":1894
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcBodyToBaseCoordinates (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_Vector3dToNumpy(RigidBodyDynamics::CalcBodyToBaseCoordinates((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1889
 *     )
 * 
 * def CalcBodyToBaseCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcBodyToBaseCoordinates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1902
 *             ))
 * 
 * def CalcBaseToBodyCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_5CalcBaseToBodyCoordinates(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_4CalcBaseToBodyCoordinates[] = "CalcBaseToBodyCoordinates(Model model, ndarray q, unsigned int body_id, ndarray body_point_position, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_5CalcBaseToBodyCoordinates = {"CalcBaseToBodyCoordinates", (PyCFunction)__pyx_pw_4rbdl_5CalcBaseToBodyCoordinates, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_4CalcBaseToBodyCoordinates};
static PyObject *__pyx_pw_4rbdl_5CalcBaseToBodyCoordinates(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcBaseToBodyCoordinates (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_update_kinematics,0};
    PyObject* values[5] = {0,0,0,0,0};

    /* "rbdl.pyx":1906
 *         unsigned int body_id,
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return Vector3dToNumpy (crbdl.CalcBaseToBodyCoordinates (
 *             model.thisptr[0],
 */
    values[4] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBaseToBodyCoordinates", 0, 4, 5, 1); __PYX_ERR(0, 1902, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBaseToBodyCoordinates", 0, 4, 5, 2); __PYX_ERR(0, 1902, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBaseToBodyCoordinates", 0, 4, 5, 3); __PYX_ERR(0, 1902, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcBaseToBodyCoordinates") < 0)) __PYX_ERR(0, 1902, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1904, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[3]);
    __pyx_v_update_kinematics = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcBaseToBodyCoordinates", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1902, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcBaseToBodyCoordinates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1902, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1903, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1905, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_4CalcBaseToBodyCoordinates(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1902
 *             ))
 * 
 * def CalcBaseToBodyCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_4CalcBaseToBodyCoordinates(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcBaseToBodyCoordinates", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1902, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1902, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1907
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcBaseToBodyCoordinates (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1913
 *             NumpyToVector3d (body_point_position),
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcBodyWorldOrientation (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1913, __pyx_L1_error)

  /* "rbdl.pyx":1907
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcBaseToBodyCoordinates (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_Vector3dToNumpy(RigidBodyDynamics::CalcBaseToBodyCoordinates((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1902
 *             ))
 * 
 * def CalcBaseToBodyCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcBaseToBodyCoordinates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1915
 *             ))
 * 
 * def CalcBodyWorldOrientation (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_7CalcBodyWorldOrientation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_6CalcBodyWorldOrientation[] = "CalcBodyWorldOrientation(Model model, ndarray q, unsigned int body_id, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_7CalcBodyWorldOrientation = {"CalcBodyWorldOrientation", (PyCFunction)__pyx_pw_4rbdl_7CalcBodyWorldOrientation, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_6CalcBodyWorldOrientation};
static PyObject *__pyx_pw_4rbdl_7CalcBodyWorldOrientation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  unsigned int __pyx_v_body_id;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcBodyWorldOrientation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_body_id,&__pyx_n_s_update_kinematics,0};
    PyObject* values[4] = {0,0,0,0};

    /* "rbdl.pyx":1918
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return Matrix3dToNumpy (crbdl.CalcBodyWorldOrientation (
 *             model.thisptr[0],
 */
    values[3] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodyWorldOrientation", 0, 3, 4, 1); __PYX_ERR(0, 1915, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodyWorldOrientation", 0, 3, 4, 2); __PYX_ERR(0, 1915, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcBodyWorldOrientation") < 0)) __PYX_ERR(0, 1915, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1917, __pyx_L3_error)
    __pyx_v_update_kinematics = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcBodyWorldOrientation", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1915, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcBodyWorldOrientation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1915, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1916, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_6CalcBodyWorldOrientation(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_body_id, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1915
 *             ))
 * 
 * def CalcBodyWorldOrientation (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_6CalcBodyWorldOrientation(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcBodyWorldOrientation", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1915, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1919
 *         unsigned int body_id,
 *         update_kinematics=True):
 *     return Matrix3dToNumpy (crbdl.CalcBodyWorldOrientation (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1924
 *             body_id,
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcPointVelocity (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1924, __pyx_L1_error)

  /* "rbdl.pyx":1919
 *         unsigned int body_id,
 *         update_kinematics=True):
 *     return Matrix3dToNumpy (crbdl.CalcBodyWorldOrientation (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_Matrix3dToNumpy(RigidBodyDynamics::CalcBodyWorldOrientation((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_v_body_id, __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1915
 *             ))
 * 
 * def CalcBodyWorldOrientation (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcBodyWorldOrientation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1926
 *             ))
 * 
 * def CalcPointVelocity (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_9CalcPointVelocity(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_8CalcPointVelocity[] = "CalcPointVelocity(Model model, ndarray q, ndarray qdot, unsigned int body_id, ndarray body_point_position, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_9CalcPointVelocity = {"CalcPointVelocity", (PyCFunction)__pyx_pw_4rbdl_9CalcPointVelocity, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_8CalcPointVelocity};
static PyObject *__pyx_pw_4rbdl_9CalcPointVelocity(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcPointVelocity (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_update_kinematics,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "rbdl.pyx":1931
 *         unsigned int body_id,
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return Vector3dToNumpy (crbdl.CalcPointVelocity (
 *             model.thisptr[0],
 */
    values[5] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity", 0, 5, 6, 1); __PYX_ERR(0, 1926, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity", 0, 5, 6, 2); __PYX_ERR(0, 1926, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity", 0, 5, 6, 3); __PYX_ERR(0, 1926, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity", 0, 5, 6, 4); __PYX_ERR(0, 1926, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcPointVelocity") < 0)) __PYX_ERR(0, 1926, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[3]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[4]);
    __pyx_v_update_kinematics = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcPointVelocity", 0, 5, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1926, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcPointVelocity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1926, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1927, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 1928, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1930, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_8CalcPointVelocity(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1926
 *             ))
 * 
 * def CalcPointVelocity (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_8CalcPointVelocity(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcPointVelocity", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1926, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1926, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1926, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1932
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcPointVelocity (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1939
 *             NumpyToVector3d (body_point_position),
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcPointAcceleration (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1939, __pyx_L1_error)

  /* "rbdl.pyx":1932
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcPointVelocity (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_Vector3dToNumpy(RigidBodyDynamics::CalcPointVelocity((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1926
 *             ))
 * 
 * def CalcPointVelocity (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcPointVelocity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1941
 *             ))
 * 
 * def CalcPointAcceleration (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_11CalcPointAcceleration(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_10CalcPointAcceleration[] = "CalcPointAcceleration(Model model, ndarray q, ndarray qdot, ndarray qddot, unsigned int body_id, ndarray body_point_position, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_11CalcPointAcceleration = {"CalcPointAcceleration", (PyCFunction)__pyx_pw_4rbdl_11CalcPointAcceleration, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_10CalcPointAcceleration};
static PyObject *__pyx_pw_4rbdl_11CalcPointAcceleration(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcPointAcceleration (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_qddot,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_update_kinematics,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};

    /* "rbdl.pyx":1947
 *         unsigned int body_id,
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return Vector3dToNumpy (crbdl.CalcPointAcceleration (
 *             model.thisptr[0],
 */
    values[6] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration", 0, 6, 7, 1); __PYX_ERR(0, 1941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration", 0, 6, 7, 2); __PYX_ERR(0, 1941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration", 0, 6, 7, 3); __PYX_ERR(0, 1941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration", 0, 6, 7, 4); __PYX_ERR(0, 1941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration", 0, 6, 7, 5); __PYX_ERR(0, 1941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcPointAcceleration") < 0)) __PYX_ERR(0, 1941, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_qddot = ((PyArrayObject *)values[3]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[4]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1945, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[5]);
    __pyx_v_update_kinematics = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration", 0, 6, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1941, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcPointAcceleration", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1941, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1942, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 1943, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 1944, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1946, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_10CalcPointAcceleration(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_qddot, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1941
 *             ))
 * 
 * def CalcPointAcceleration (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_10CalcPointAcceleration(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcPointAcceleration", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1948
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcPointAcceleration (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1956
 *             NumpyToVector3d (body_point_position),
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcPointVelocity6D (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1956, __pyx_L1_error)

  /* "rbdl.pyx":1948
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return Vector3dToNumpy (crbdl.CalcPointAcceleration (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_Vector3dToNumpy(RigidBodyDynamics::CalcPointAcceleration((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qddot)), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1948, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1941
 *             ))
 * 
 * def CalcPointAcceleration (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcPointAcceleration", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1958
 *             ))
 * 
 * def CalcPointVelocity6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_13CalcPointVelocity6D(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_12CalcPointVelocity6D[] = "CalcPointVelocity6D(Model model, ndarray q, ndarray qdot, unsigned int body_id, ndarray body_point_position, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_13CalcPointVelocity6D = {"CalcPointVelocity6D", (PyCFunction)__pyx_pw_4rbdl_13CalcPointVelocity6D, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_12CalcPointVelocity6D};
static PyObject *__pyx_pw_4rbdl_13CalcPointVelocity6D(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcPointVelocity6D (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_update_kinematics,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "rbdl.pyx":1963
 *         unsigned int body_id,
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return SpatialVectorToNumpy (crbdl.CalcPointVelocity6D (
 *             model.thisptr[0],
 */
    values[5] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity6D", 0, 5, 6, 1); __PYX_ERR(0, 1958, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity6D", 0, 5, 6, 2); __PYX_ERR(0, 1958, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity6D", 0, 5, 6, 3); __PYX_ERR(0, 1958, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointVelocity6D", 0, 5, 6, 4); __PYX_ERR(0, 1958, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcPointVelocity6D") < 0)) __PYX_ERR(0, 1958, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[3]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1961, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[4]);
    __pyx_v_update_kinematics = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcPointVelocity6D", 0, 5, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1958, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcPointVelocity6D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1958, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1959, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 1960, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1962, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_12CalcPointVelocity6D(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1958
 *             ))
 * 
 * def CalcPointVelocity6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_12CalcPointVelocity6D(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcPointVelocity6D", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1958, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1958, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1958, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1964
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return SpatialVectorToNumpy (crbdl.CalcPointVelocity6D (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1971
 *             NumpyToVector3d (body_point_position),
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcPointAcceleration6D (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1971, __pyx_L1_error)

  /* "rbdl.pyx":1964
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return SpatialVectorToNumpy (crbdl.CalcPointVelocity6D (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_SpatialVectorToNumpy(RigidBodyDynamics::CalcPointVelocity6D((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1958
 *             ))
 * 
 * def CalcPointVelocity6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcPointVelocity6D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1973
 *             ))
 * 
 * def CalcPointAcceleration6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_15CalcPointAcceleration6D(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_14CalcPointAcceleration6D[] = "CalcPointAcceleration6D(Model model, ndarray q, ndarray qdot, ndarray qddot, unsigned int body_id, ndarray body_point_position, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_15CalcPointAcceleration6D = {"CalcPointAcceleration6D", (PyCFunction)__pyx_pw_4rbdl_15CalcPointAcceleration6D, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_14CalcPointAcceleration6D};
static PyObject *__pyx_pw_4rbdl_15CalcPointAcceleration6D(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcPointAcceleration6D (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_qddot,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_update_kinematics,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};

    /* "rbdl.pyx":1979
 *         unsigned int body_id,
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     return SpatialVectorToNumpy (crbdl.CalcPointAcceleration6D (
 *             model.thisptr[0],
 */
    values[6] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration6D", 0, 6, 7, 1); __PYX_ERR(0, 1973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration6D", 0, 6, 7, 2); __PYX_ERR(0, 1973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration6D", 0, 6, 7, 3); __PYX_ERR(0, 1973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration6D", 0, 6, 7, 4); __PYX_ERR(0, 1973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration6D", 0, 6, 7, 5); __PYX_ERR(0, 1973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcPointAcceleration6D") < 0)) __PYX_ERR(0, 1973, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_qddot = ((PyArrayObject *)values[3]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[4]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[5]);
    __pyx_v_update_kinematics = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcPointAcceleration6D", 0, 6, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1973, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcPointAcceleration6D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1973, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1974, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 1975, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 1976, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1978, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_14CalcPointAcceleration6D(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_qddot, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1973
 *             ))
 * 
 * def CalcPointAcceleration6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_14CalcPointAcceleration6D(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("CalcPointAcceleration6D", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":1980
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return SpatialVectorToNumpy (crbdl.CalcPointAcceleration6D (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "rbdl.pyx":1988
 *             NumpyToVector3d (body_point_position),
 *             update_kinematics
 *             ))             # <<<<<<<<<<<<<<
 * 
 * def CalcPointJacobian (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1988, __pyx_L1_error)

  /* "rbdl.pyx":1980
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         update_kinematics=True):
 *     return SpatialVectorToNumpy (crbdl.CalcPointAcceleration6D (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_4rbdl_SpatialVectorToNumpy(RigidBodyDynamics::CalcPointAcceleration6D((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qddot)), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), __pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1980, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":1973
 *             ))
 * 
 * def CalcPointAcceleration6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcPointAcceleration6D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":1990
 *             ))
 * 
 * def CalcPointJacobian (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_17CalcPointJacobian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_16CalcPointJacobian[] = "CalcPointJacobian(Model model, ndarray q, unsigned int body_id, ndarray body_point_position, ndarray G, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_17CalcPointJacobian = {"CalcPointJacobian", (PyCFunction)__pyx_pw_4rbdl_17CalcPointJacobian, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_16CalcPointJacobian};
static PyObject *__pyx_pw_4rbdl_17CalcPointJacobian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyArrayObject *__pyx_v_G = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcPointJacobian (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_G,&__pyx_n_s_update_kinematics,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "rbdl.pyx":1995
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         np.ndarray[double, ndim=2, mode="c"] G,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     crbdl.CalcPointJacobianPtr (
 *             model.thisptr[0],
 */
    values[5] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian", 0, 5, 6, 1); __PYX_ERR(0, 1990, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian", 0, 5, 6, 2); __PYX_ERR(0, 1990, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian", 0, 5, 6, 3); __PYX_ERR(0, 1990, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_G)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian", 0, 5, 6, 4); __PYX_ERR(0, 1990, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcPointJacobian") < 0)) __PYX_ERR(0, 1990, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[3]);
    __pyx_v_G = ((PyArrayObject *)values[4]);
    __pyx_v_update_kinematics = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcPointJacobian", 0, 5, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1990, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcPointJacobian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 1990, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 1991, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 1993, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_5numpy_ndarray, 1, "G", 0))) __PYX_ERR(0, 1994, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_16CalcPointJacobian(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_G, __pyx_v_update_kinematics);

  /* "rbdl.pyx":1990
 *             ))
 * 
 * def CalcPointJacobian (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_16CalcPointJacobian(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyArrayObject *__pyx_v_G, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_G;
  __Pyx_Buffer __pyx_pybuffer_G;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  __Pyx_RefNannySetupContext("CalcPointJacobian", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  __pyx_pybuffer_G.pybuffer.buf = NULL;
  __pyx_pybuffer_G.refcount = 0;
  __pyx_pybuffernd_G.data = NULL;
  __pyx_pybuffernd_G.rcbuffer = &__pyx_pybuffer_G;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1990, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1990, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_G.rcbuffer->pybuffer, (PyObject*)__pyx_v_G, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1990, __pyx_L1_error)
  }
  __pyx_pybuffernd_G.diminfo[0].strides = __pyx_pybuffernd_G.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_G.diminfo[0].shape = __pyx_pybuffernd_G.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_G.diminfo[1].strides = __pyx_pybuffernd_G.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_G.diminfo[1].shape = __pyx_pybuffernd_G.rcbuffer->pybuffer.shape[1];

  /* "rbdl.pyx":2003
 *             <double*>G.data,
 *             update_kinematics
 *             )             # <<<<<<<<<<<<<<
 * 
 * def CalcPointJacobian6D (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2003, __pyx_L1_error)

  /* "rbdl.pyx":1996
 *         np.ndarray[double, ndim=2, mode="c"] G,
 *         update_kinematics=True):
 *     crbdl.CalcPointJacobianPtr (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             <double*>q.data,
 */
  RigidBodyDynamics::CalcPointJacobianPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), ((double *)__pyx_v_G->data), __pyx_t_1);

  /* "rbdl.pyx":1990
 *             ))
 * 
 * def CalcPointJacobian (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_G.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcPointJacobian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_G.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2005
 *             )
 * 
 * def CalcPointJacobian6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_19CalcPointJacobian6D(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_18CalcPointJacobian6D[] = "CalcPointJacobian6D(Model model, ndarray q, unsigned int body_id, ndarray body_point_position, ndarray G, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_19CalcPointJacobian6D = {"CalcPointJacobian6D", (PyCFunction)__pyx_pw_4rbdl_19CalcPointJacobian6D, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_18CalcPointJacobian6D};
static PyObject *__pyx_pw_4rbdl_19CalcPointJacobian6D(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  unsigned int __pyx_v_body_id;
  PyArrayObject *__pyx_v_body_point_position = 0;
  PyArrayObject *__pyx_v_G = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcPointJacobian6D (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_G,&__pyx_n_s_update_kinematics,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "rbdl.pyx":2010
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         np.ndarray[double, ndim=2, mode="c"] G,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     crbdl.CalcPointJacobian6DPtr (
 *             model.thisptr[0],
 */
    values[5] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian6D", 0, 5, 6, 1); __PYX_ERR(0, 2005, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian6D", 0, 5, 6, 2); __PYX_ERR(0, 2005, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian6D", 0, 5, 6, 3); __PYX_ERR(0, 2005, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_G)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcPointJacobian6D", 0, 5, 6, 4); __PYX_ERR(0, 2005, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcPointJacobian6D") < 0)) __PYX_ERR(0, 2005, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2007, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[3]);
    __pyx_v_G = ((PyArrayObject *)values[4]);
    __pyx_v_update_kinematics = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcPointJacobian6D", 0, 5, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2005, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcPointJacobian6D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2005, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2006, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 2008, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_5numpy_ndarray, 1, "G", 0))) __PYX_ERR(0, 2009, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_18CalcPointJacobian6D(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_G, __pyx_v_update_kinematics);

  /* "rbdl.pyx":2005
 *             )
 * 
 * def CalcPointJacobian6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_18CalcPointJacobian6D(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, PyArrayObject *__pyx_v_body_point_position, PyArrayObject *__pyx_v_G, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_G;
  __Pyx_Buffer __pyx_pybuffer_G;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  __Pyx_RefNannySetupContext("CalcPointJacobian6D", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  __pyx_pybuffer_G.pybuffer.buf = NULL;
  __pyx_pybuffer_G.refcount = 0;
  __pyx_pybuffernd_G.data = NULL;
  __pyx_pybuffernd_G.rcbuffer = &__pyx_pybuffer_G;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2005, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2005, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_G.rcbuffer->pybuffer, (PyObject*)__pyx_v_G, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2005, __pyx_L1_error)
  }
  __pyx_pybuffernd_G.diminfo[0].strides = __pyx_pybuffernd_G.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_G.diminfo[0].shape = __pyx_pybuffernd_G.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_G.diminfo[1].strides = __pyx_pybuffernd_G.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_G.diminfo[1].shape = __pyx_pybuffernd_G.rcbuffer->pybuffer.shape[1];

  /* "rbdl.pyx":2018
 *             <double*>G.data,
 *             update_kinematics
 *             )             # <<<<<<<<<<<<<<
 * 
 * def CalcBodySpatialJacobian(Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2018, __pyx_L1_error)

  /* "rbdl.pyx":2011
 *         np.ndarray[double, ndim=2, mode="c"] G,
 *         update_kinematics=True):
 *     crbdl.CalcPointJacobian6DPtr (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             <double*>q.data,
 */
  RigidBodyDynamics::CalcPointJacobian6DPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), __pyx_v_body_id, __pyx_f_4rbdl_NumpyToVector3d(((PyArrayObject *)__pyx_v_body_point_position)), ((double *)__pyx_v_G->data), __pyx_t_1);

  /* "rbdl.pyx":2005
 *             )
 * 
 * def CalcPointJacobian6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_G.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcPointJacobian6D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_G.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2020
 *             )
 * 
 * def CalcBodySpatialJacobian(Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_21CalcBodySpatialJacobian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_20CalcBodySpatialJacobian[] = "CalcBodySpatialJacobian(Model model, ndarray q, unsigned int body_id, ndarray body_point_position, ndarray G, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_21CalcBodySpatialJacobian = {"CalcBodySpatialJacobian", (PyCFunction)__pyx_pw_4rbdl_21CalcBodySpatialJacobian, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_20CalcBodySpatialJacobian};
static PyObject *__pyx_pw_4rbdl_21CalcBodySpatialJacobian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  unsigned int __pyx_v_body_id;
  CYTHON_UNUSED PyArrayObject *__pyx_v_body_point_position = 0;
  PyArrayObject *__pyx_v_G = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcBodySpatialJacobian (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_body_id,&__pyx_n_s_body_point_position,&__pyx_n_s_G,&__pyx_n_s_update_kinematics,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "rbdl.pyx":2025
 *         np.ndarray[double, ndim=1, mode="c"] body_point_position,
 *         np.ndarray[double, ndim=2, mode="c"] G,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     crbdl.CalcBodySpatialJacobianPtr(
 *             model.thisptr[0],
 */
    values[5] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodySpatialJacobian", 0, 5, 6, 1); __PYX_ERR(0, 2020, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodySpatialJacobian", 0, 5, 6, 2); __PYX_ERR(0, 2020, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body_point_position)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodySpatialJacobian", 0, 5, 6, 3); __PYX_ERR(0, 2020, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_G)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcBodySpatialJacobian", 0, 5, 6, 4); __PYX_ERR(0, 2020, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcBodySpatialJacobian") < 0)) __PYX_ERR(0, 2020, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_body_id = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_body_id == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2022, __pyx_L3_error)
    __pyx_v_body_point_position = ((PyArrayObject *)values[3]);
    __pyx_v_G = ((PyArrayObject *)values[4]);
    __pyx_v_update_kinematics = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcBodySpatialJacobian", 0, 5, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2020, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcBodySpatialJacobian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2020, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2021, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body_point_position), __pyx_ptype_5numpy_ndarray, 1, "body_point_position", 0))) __PYX_ERR(0, 2023, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_5numpy_ndarray, 1, "G", 0))) __PYX_ERR(0, 2024, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_20CalcBodySpatialJacobian(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_body_id, __pyx_v_body_point_position, __pyx_v_G, __pyx_v_update_kinematics);

  /* "rbdl.pyx":2020
 *             )
 * 
 * def CalcBodySpatialJacobian(Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_20CalcBodySpatialJacobian(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, unsigned int __pyx_v_body_id, CYTHON_UNUSED PyArrayObject *__pyx_v_body_point_position, PyArrayObject *__pyx_v_G, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_G;
  __Pyx_Buffer __pyx_pybuffer_G;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_body_point_position;
  __Pyx_Buffer __pyx_pybuffer_body_point_position;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  __Pyx_RefNannySetupContext("CalcBodySpatialJacobian", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_body_point_position.pybuffer.buf = NULL;
  __pyx_pybuffer_body_point_position.refcount = 0;
  __pyx_pybuffernd_body_point_position.data = NULL;
  __pyx_pybuffernd_body_point_position.rcbuffer = &__pyx_pybuffer_body_point_position;
  __pyx_pybuffer_G.pybuffer.buf = NULL;
  __pyx_pybuffer_G.refcount = 0;
  __pyx_pybuffernd_G.data = NULL;
  __pyx_pybuffernd_G.rcbuffer = &__pyx_pybuffer_G;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2020, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer, (PyObject*)__pyx_v_body_point_position, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2020, __pyx_L1_error)
  }
  __pyx_pybuffernd_body_point_position.diminfo[0].strides = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_body_point_position.diminfo[0].shape = __pyx_pybuffernd_body_point_position.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_G.rcbuffer->pybuffer, (PyObject*)__pyx_v_G, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2020, __pyx_L1_error)
  }
  __pyx_pybuffernd_G.diminfo[0].strides = __pyx_pybuffernd_G.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_G.diminfo[0].shape = __pyx_pybuffernd_G.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_G.diminfo[1].strides = __pyx_pybuffernd_G.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_G.diminfo[1].shape = __pyx_pybuffernd_G.rcbuffer->pybuffer.shape[1];

  /* "rbdl.pyx":2032
 *             <double*>G.data,
 *             update_kinematics
 *             )             # <<<<<<<<<<<<<<
 * 
 * ##############################
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2032, __pyx_L1_error)

  /* "rbdl.pyx":2026
 *         np.ndarray[double, ndim=2, mode="c"] G,
 *         update_kinematics=True):
 *     crbdl.CalcBodySpatialJacobianPtr(             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             <double*>q.data,
 */
  RigidBodyDynamics::CalcBodySpatialJacobianPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), __pyx_v_body_id, ((double *)__pyx_v_G->data), __pyx_t_1);

  /* "rbdl.pyx":2020
 *             )
 * 
 * def CalcBodySpatialJacobian(Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_G.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcBodySpatialJacobian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_G.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_body_point_position.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2040
 * ##############################
 * 
 * def CalcCenterOfMass (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_23CalcCenterOfMass(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_22CalcCenterOfMass[] = "CalcCenterOfMass(Model model, ndarray q, ndarray qdot, ndarray qddot, ndarray com, ndarray com_velocity=None, ndarray com_acceleration=None, ndarray angular_momentum=None, ndarray change_of_angular_momentum=None, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_23CalcCenterOfMass = {"CalcCenterOfMass", (PyCFunction)__pyx_pw_4rbdl_23CalcCenterOfMass, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_22CalcCenterOfMass};
static PyObject *__pyx_pw_4rbdl_23CalcCenterOfMass(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  PyArrayObject *__pyx_v_com = 0;
  PyArrayObject *__pyx_v_com_velocity = 0;
  PyArrayObject *__pyx_v_com_acceleration = 0;
  PyArrayObject *__pyx_v_angular_momentum = 0;
  PyArrayObject *__pyx_v_change_of_angular_momentum = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcCenterOfMass (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_qddot,&__pyx_n_s_com,&__pyx_n_s_com_velocity,&__pyx_n_s_com_acceleration,&__pyx_n_s_angular_momentum,&__pyx_n_s_change_of_angular_momentum,&__pyx_n_s_update_kinematics,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};

    /* "rbdl.pyx":2045
 *         np.ndarray[double, ndim=1, mode="c"] qddot,
 *         np.ndarray[double, ndim=1, mode="c"] com,
 *         np.ndarray[double, ndim=1, mode="c"] com_velocity=None,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] com_acceleration=None,
 *         np.ndarray[double, ndim=1, mode="c"] angular_momentum=None,
 */
    values[5] = (PyObject *)((PyArrayObject *)Py_None);

    /* "rbdl.pyx":2046
 *         np.ndarray[double, ndim=1, mode="c"] com,
 *         np.ndarray[double, ndim=1, mode="c"] com_velocity=None,
 *         np.ndarray[double, ndim=1, mode="c"] com_acceleration=None,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] angular_momentum=None,
 *         np.ndarray[double, ndim=1, mode="c"] change_of_angular_momentum=None,
 */
    values[6] = (PyObject *)((PyArrayObject *)Py_None);

    /* "rbdl.pyx":2047
 *         np.ndarray[double, ndim=1, mode="c"] com_velocity=None,
 *         np.ndarray[double, ndim=1, mode="c"] com_acceleration=None,
 *         np.ndarray[double, ndim=1, mode="c"] angular_momentum=None,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] change_of_angular_momentum=None,
 *         update_kinematics=True):
 */
    values[7] = (PyObject *)((PyArrayObject *)Py_None);

    /* "rbdl.pyx":2048
 *         np.ndarray[double, ndim=1, mode="c"] com_acceleration=None,
 *         np.ndarray[double, ndim=1, mode="c"] angular_momentum=None,
 *         np.ndarray[double, ndim=1, mode="c"] change_of_angular_momentum=None,             # <<<<<<<<<<<<<<
 *         update_kinematics=True):
 *     cdef double cmass
 */
    values[8] = (PyObject *)((PyArrayObject *)Py_None);

    /* "rbdl.pyx":2049
 *         np.ndarray[double, ndim=1, mode="c"] angular_momentum=None,
 *         np.ndarray[double, ndim=1, mode="c"] change_of_angular_momentum=None,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     cdef double cmass
 *     cdef crbdl.Vector3d c_com = crbdl.Vector3d()
 */
    values[9] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcCenterOfMass", 0, 5, 10, 1); __PYX_ERR(0, 2040, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcCenterOfMass", 0, 5, 10, 2); __PYX_ERR(0, 2040, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcCenterOfMass", 0, 5, 10, 3); __PYX_ERR(0, 2040, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_com)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcCenterOfMass", 0, 5, 10, 4); __PYX_ERR(0, 2040, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_com_velocity);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_com_acceleration);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_angular_momentum);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_change_of_angular_momentum);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[9] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcCenterOfMass") < 0)) __PYX_ERR(0, 2040, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_qddot = ((PyArrayObject *)values[3]);
    __pyx_v_com = ((PyArrayObject *)values[4]);
    __pyx_v_com_velocity = ((PyArrayObject *)values[5]);
    __pyx_v_com_acceleration = ((PyArrayObject *)values[6]);
    __pyx_v_angular_momentum = ((PyArrayObject *)values[7]);
    __pyx_v_change_of_angular_momentum = ((PyArrayObject *)values[8]);
    __pyx_v_update_kinematics = values[9];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcCenterOfMass", 0, 5, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2040, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcCenterOfMass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2040, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2041, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 2042, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 2043, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_com), __pyx_ptype_5numpy_ndarray, 1, "com", 0))) __PYX_ERR(0, 2044, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_com_velocity), __pyx_ptype_5numpy_ndarray, 1, "com_velocity", 0))) __PYX_ERR(0, 2045, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_com_acceleration), __pyx_ptype_5numpy_ndarray, 1, "com_acceleration", 0))) __PYX_ERR(0, 2046, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_angular_momentum), __pyx_ptype_5numpy_ndarray, 1, "angular_momentum", 0))) __PYX_ERR(0, 2047, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_change_of_angular_momentum), __pyx_ptype_5numpy_ndarray, 1, "change_of_angular_momentum", 0))) __PYX_ERR(0, 2048, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_22CalcCenterOfMass(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_qddot, __pyx_v_com, __pyx_v_com_velocity, __pyx_v_com_acceleration, __pyx_v_angular_momentum, __pyx_v_change_of_angular_momentum, __pyx_v_update_kinematics);

  /* "rbdl.pyx":2040
 * ##############################
 * 
 * def CalcCenterOfMass (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_22CalcCenterOfMass(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, PyArrayObject *__pyx_v_com, PyArrayObject *__pyx_v_com_velocity, PyArrayObject *__pyx_v_com_acceleration, PyArrayObject *__pyx_v_angular_momentum, PyArrayObject *__pyx_v_change_of_angular_momentum, PyObject *__pyx_v_update_kinematics) {
  double __pyx_v_cmass;
  RigidBodyDynamics::Math::Vector3d __pyx_v_c_com;
  RigidBodyDynamics::Math::Vector3d *__pyx_v_c_com_vel_ptr;
  RigidBodyDynamics::Math::Vector3d *__pyx_v_c_com_accel_ptr;
  RigidBodyDynamics::Math::Vector3d *__pyx_v_c_ang_momentum_ptr;
  RigidBodyDynamics::Math::Vector3d *__pyx_v_c_change_of_ang_momentum_ptr;
  RigidBodyDynamics::Math::VectorNd __pyx_v_qddot_vectornd;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_angular_momentum;
  __Pyx_Buffer __pyx_pybuffer_angular_momentum;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_change_of_angular_momentum;
  __Pyx_Buffer __pyx_pybuffer_change_of_angular_momentum;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_com;
  __Pyx_Buffer __pyx_pybuffer_com;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_com_acceleration;
  __Pyx_Buffer __pyx_pybuffer_com_acceleration;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_com_velocity;
  __Pyx_Buffer __pyx_pybuffer_com_velocity;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  RigidBodyDynamics::Math::VectorNd *__pyx_t_3;
  bool __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  PyObject *__pyx_t_20 = NULL;
  __Pyx_RefNannySetupContext("CalcCenterOfMass", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  __pyx_pybuffer_com.pybuffer.buf = NULL;
  __pyx_pybuffer_com.refcount = 0;
  __pyx_pybuffernd_com.data = NULL;
  __pyx_pybuffernd_com.rcbuffer = &__pyx_pybuffer_com;
  __pyx_pybuffer_com_velocity.pybuffer.buf = NULL;
  __pyx_pybuffer_com_velocity.refcount = 0;
  __pyx_pybuffernd_com_velocity.data = NULL;
  __pyx_pybuffernd_com_velocity.rcbuffer = &__pyx_pybuffer_com_velocity;
  __pyx_pybuffer_com_acceleration.pybuffer.buf = NULL;
  __pyx_pybuffer_com_acceleration.refcount = 0;
  __pyx_pybuffernd_com_acceleration.data = NULL;
  __pyx_pybuffernd_com_acceleration.rcbuffer = &__pyx_pybuffer_com_acceleration;
  __pyx_pybuffer_angular_momentum.pybuffer.buf = NULL;
  __pyx_pybuffer_angular_momentum.refcount = 0;
  __pyx_pybuffernd_angular_momentum.data = NULL;
  __pyx_pybuffernd_angular_momentum.rcbuffer = &__pyx_pybuffer_angular_momentum;
  __pyx_pybuffer_change_of_angular_momentum.pybuffer.buf = NULL;
  __pyx_pybuffer_change_of_angular_momentum.refcount = 0;
  __pyx_pybuffernd_change_of_angular_momentum.data = NULL;
  __pyx_pybuffernd_change_of_angular_momentum.rcbuffer = &__pyx_pybuffer_change_of_angular_momentum;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_com.rcbuffer->pybuffer, (PyObject*)__pyx_v_com, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_com.diminfo[0].strides = __pyx_pybuffernd_com.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_com.diminfo[0].shape = __pyx_pybuffernd_com.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_com_velocity.rcbuffer->pybuffer, (PyObject*)__pyx_v_com_velocity, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_com_velocity.diminfo[0].strides = __pyx_pybuffernd_com_velocity.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_com_velocity.diminfo[0].shape = __pyx_pybuffernd_com_velocity.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer, (PyObject*)__pyx_v_com_acceleration, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_com_acceleration.diminfo[0].strides = __pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_com_acceleration.diminfo[0].shape = __pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer, (PyObject*)__pyx_v_angular_momentum, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_angular_momentum.diminfo[0].strides = __pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_angular_momentum.diminfo[0].shape = __pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer, (PyObject*)__pyx_v_change_of_angular_momentum, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].strides = __pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].shape = __pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":2051
 *         update_kinematics=True):
 *     cdef double cmass
 *     cdef crbdl.Vector3d c_com = crbdl.Vector3d()             # <<<<<<<<<<<<<<
 *     cdef crbdl.Vector3d* c_com_vel_ptr # = crbdl.Vector3d()
 *     cdef crbdl.Vector3d* c_com_accel_ptr # = crbdl.Vector3d()
 */
  __pyx_v_c_com = RigidBodyDynamics::Math::Vector3d();

  /* "rbdl.pyx":2057
 *     cdef crbdl.Vector3d* c_change_of_ang_momentum_ptr # = crbdl.Vector3d()
 * 
 *     c_com_vel_ptr = <crbdl.Vector3d*> NULL             # <<<<<<<<<<<<<<
 *     c_com_accel_ptr = <crbdl.Vector3d*> NULL
 *     c_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 */
  __pyx_v_c_com_vel_ptr = ((RigidBodyDynamics::Math::Vector3d *)NULL);

  /* "rbdl.pyx":2058
 * 
 *     c_com_vel_ptr = <crbdl.Vector3d*> NULL
 *     c_com_accel_ptr = <crbdl.Vector3d*> NULL             # <<<<<<<<<<<<<<
 *     c_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 *     c_change_of_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 */
  __pyx_v_c_com_accel_ptr = ((RigidBodyDynamics::Math::Vector3d *)NULL);

  /* "rbdl.pyx":2059
 *     c_com_vel_ptr = <crbdl.Vector3d*> NULL
 *     c_com_accel_ptr = <crbdl.Vector3d*> NULL
 *     c_ang_momentum_ptr = <crbdl.Vector3d*> NULL             # <<<<<<<<<<<<<<
 *     c_change_of_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 * 
 */
  __pyx_v_c_ang_momentum_ptr = ((RigidBodyDynamics::Math::Vector3d *)NULL);

  /* "rbdl.pyx":2060
 *     c_com_accel_ptr = <crbdl.Vector3d*> NULL
 *     c_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 *     c_change_of_ang_momentum_ptr = <crbdl.Vector3d*> NULL             # <<<<<<<<<<<<<<
 * 
 *     if com_velocity is not None:
 */
  __pyx_v_c_change_of_ang_momentum_ptr = ((RigidBodyDynamics::Math::Vector3d *)NULL);

  /* "rbdl.pyx":2062
 *     c_change_of_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 * 
 *     if com_velocity is not None:             # <<<<<<<<<<<<<<
 *         c_com_vel_ptr = new crbdl.Vector3d()
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_com_velocity) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2063
 * 
 *     if com_velocity is not None:
 *         c_com_vel_ptr = new crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *     if com_acceleration is not None:
 */
    __pyx_v_c_com_vel_ptr = new RigidBodyDynamics::Math::Vector3d();

    /* "rbdl.pyx":2062
 *     c_change_of_ang_momentum_ptr = <crbdl.Vector3d*> NULL
 * 
 *     if com_velocity is not None:             # <<<<<<<<<<<<<<
 *         c_com_vel_ptr = new crbdl.Vector3d()
 * 
 */
  }

  /* "rbdl.pyx":2065
 *         c_com_vel_ptr = new crbdl.Vector3d()
 * 
 *     if com_acceleration is not None:             # <<<<<<<<<<<<<<
 *         c_com_accel_ptr = new crbdl.Vector3d()
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_com_acceleration) != Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":2066
 * 
 *     if com_acceleration is not None:
 *         c_com_accel_ptr = new crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *     if angular_momentum is not None:
 */
    __pyx_v_c_com_accel_ptr = new RigidBodyDynamics::Math::Vector3d();

    /* "rbdl.pyx":2065
 *         c_com_vel_ptr = new crbdl.Vector3d()
 * 
 *     if com_acceleration is not None:             # <<<<<<<<<<<<<<
 *         c_com_accel_ptr = new crbdl.Vector3d()
 * 
 */
  }

  /* "rbdl.pyx":2068
 *         c_com_accel_ptr = new crbdl.Vector3d()
 * 
 *     if angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         c_ang_momentum_ptr = new crbdl.Vector3d()
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_angular_momentum) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2069
 * 
 *     if angular_momentum is not None:
 *         c_ang_momentum_ptr = new crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *     if change_of_angular_momentum is not None:
 */
    __pyx_v_c_ang_momentum_ptr = new RigidBodyDynamics::Math::Vector3d();

    /* "rbdl.pyx":2068
 *         c_com_accel_ptr = new crbdl.Vector3d()
 * 
 *     if angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         c_ang_momentum_ptr = new crbdl.Vector3d()
 * 
 */
  }

  /* "rbdl.pyx":2071
 *         c_ang_momentum_ptr = new crbdl.Vector3d()
 * 
 *     if change_of_angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         c_change_of_ang_momentum_ptr = new crbdl.Vector3d()
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_change_of_angular_momentum) != Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":2072
 * 
 *     if change_of_angular_momentum is not None:
 *         c_change_of_ang_momentum_ptr = new crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *     cdef crbdl.VectorNd qddot_vectornd
 */
    __pyx_v_c_change_of_ang_momentum_ptr = new RigidBodyDynamics::Math::Vector3d();

    /* "rbdl.pyx":2071
 *         c_ang_momentum_ptr = new crbdl.Vector3d()
 * 
 *     if change_of_angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         c_change_of_ang_momentum_ptr = new crbdl.Vector3d()
 * 
 */
  }

  /* "rbdl.pyx":2075
 * 
 *     cdef crbdl.VectorNd qddot_vectornd
 *     if qddot is not None:             # <<<<<<<<<<<<<<
 *         qddot_vectornd = NumpyToVectorNd(qddot)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_qddot) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2076
 *     cdef crbdl.VectorNd qddot_vectornd
 *     if qddot is not None:
 *         qddot_vectornd = NumpyToVectorNd(qddot)             # <<<<<<<<<<<<<<
 * 
 *     cmass = 0.0
 */
    __pyx_v_qddot_vectornd = __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qddot));

    /* "rbdl.pyx":2075
 * 
 *     cdef crbdl.VectorNd qddot_vectornd
 *     if qddot is not None:             # <<<<<<<<<<<<<<
 *         qddot_vectornd = NumpyToVectorNd(qddot)
 * 
 */
  }

  /* "rbdl.pyx":2078
 *         qddot_vectornd = NumpyToVectorNd(qddot)
 * 
 *     cmass = 0.0             # <<<<<<<<<<<<<<
 *     crbdl.CalcCenterOfMass (
 *             model.thisptr[0],
 */
  __pyx_v_cmass = 0.0;

  /* "rbdl.pyx":2083
 *             NumpyToVectorNd (q),
 *             NumpyToVectorNd (qdot),
 *             <crbdl.VectorNd*> NULL if qddot is None else &qddot_vectornd,             # <<<<<<<<<<<<<<
 *             cmass,
 *             c_com,
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_qddot) == Py_None);
  if ((__pyx_t_2 != 0)) {
    __pyx_t_3 = ((RigidBodyDynamics::Math::VectorNd *)NULL);
  } else {
    __pyx_t_3 = (&__pyx_v_qddot_vectornd);
  }

  /* "rbdl.pyx":2090
 *             c_ang_momentum_ptr,
 *             c_change_of_ang_momentum_ptr,
 *             update_kinematics)             # <<<<<<<<<<<<<<
 * 
 *     assert com is not None, "Parameter com for call to CalcCenterOfMass() is not provided (value is 'None')."
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_4 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2090, __pyx_L1_error)

  /* "rbdl.pyx":2079
 * 
 *     cmass = 0.0
 *     crbdl.CalcCenterOfMass (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  RigidBodyDynamics::Utils::CalcCenterOfMass((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_t_3, __pyx_v_cmass, __pyx_v_c_com, __pyx_v_c_com_vel_ptr, __pyx_v_c_com_accel_ptr, __pyx_v_c_ang_momentum_ptr, __pyx_v_c_change_of_ang_momentum_ptr, __pyx_t_4);

  /* "rbdl.pyx":2092
 *             update_kinematics)
 * 
 *     assert com is not None, "Parameter com for call to CalcCenterOfMass() is not provided (value is 'None')."             # <<<<<<<<<<<<<<
 * 
 *     com[0] = c_com[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = (((PyObject *)__pyx_v_com) != Py_None);
    if (unlikely(!(__pyx_t_2 != 0))) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_Parameter_com_for_call_to_CalcCe);
      __PYX_ERR(0, 2092, __pyx_L1_error)
    }
  }
  #endif

  /* "rbdl.pyx":2094
 *     assert com is not None, "Parameter com for call to CalcCenterOfMass() is not provided (value is 'None')."
 * 
 *     com[0] = c_com[0]             # <<<<<<<<<<<<<<
 *     com[1] = c_com[1]
 *     com[2] = c_com[2]
 */
  __pyx_t_5 = 0;
  if (__pyx_t_5 < 0) __pyx_t_5 += __pyx_pybuffernd_com.diminfo[0].shape;
  *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_com.diminfo[0].strides) = (__pyx_v_c_com[0]);

  /* "rbdl.pyx":2095
 * 
 *     com[0] = c_com[0]
 *     com[1] = c_com[1]             # <<<<<<<<<<<<<<
 *     com[2] = c_com[2]
 * 
 */
  __pyx_t_6 = 1;
  if (__pyx_t_6 < 0) __pyx_t_6 += __pyx_pybuffernd_com.diminfo[0].shape;
  *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_com.diminfo[0].strides) = (__pyx_v_c_com[1]);

  /* "rbdl.pyx":2096
 *     com[0] = c_com[0]
 *     com[1] = c_com[1]
 *     com[2] = c_com[2]             # <<<<<<<<<<<<<<
 * 
 *     if com_velocity is not None:
 */
  __pyx_t_7 = 2;
  if (__pyx_t_7 < 0) __pyx_t_7 += __pyx_pybuffernd_com.diminfo[0].shape;
  *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com.rcbuffer->pybuffer.buf, __pyx_t_7, __pyx_pybuffernd_com.diminfo[0].strides) = (__pyx_v_c_com[2]);

  /* "rbdl.pyx":2098
 *     com[2] = c_com[2]
 * 
 *     if com_velocity is not None:             # <<<<<<<<<<<<<<
 *         com_velocity[0] = c_com_vel_ptr.data()[0]
 *         com_velocity[1] = c_com_vel_ptr.data()[1]
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_com_velocity) != Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":2099
 * 
 *     if com_velocity is not None:
 *         com_velocity[0] = c_com_vel_ptr.data()[0]             # <<<<<<<<<<<<<<
 *         com_velocity[1] = c_com_vel_ptr.data()[1]
 *         com_velocity[2] = c_com_vel_ptr.data()[2]
 */
    __pyx_t_8 = 0;
    if (__pyx_t_8 < 0) __pyx_t_8 += __pyx_pybuffernd_com_velocity.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com_velocity.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_com_velocity.diminfo[0].strides) = (__pyx_v_c_com_vel_ptr->data()[0]);

    /* "rbdl.pyx":2100
 *     if com_velocity is not None:
 *         com_velocity[0] = c_com_vel_ptr.data()[0]
 *         com_velocity[1] = c_com_vel_ptr.data()[1]             # <<<<<<<<<<<<<<
 *         com_velocity[2] = c_com_vel_ptr.data()[2]
 *         del c_com_vel_ptr
 */
    __pyx_t_9 = 1;
    if (__pyx_t_9 < 0) __pyx_t_9 += __pyx_pybuffernd_com_velocity.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com_velocity.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_com_velocity.diminfo[0].strides) = (__pyx_v_c_com_vel_ptr->data()[1]);

    /* "rbdl.pyx":2101
 *         com_velocity[0] = c_com_vel_ptr.data()[0]
 *         com_velocity[1] = c_com_vel_ptr.data()[1]
 *         com_velocity[2] = c_com_vel_ptr.data()[2]             # <<<<<<<<<<<<<<
 *         del c_com_vel_ptr
 * 
 */
    __pyx_t_10 = 2;
    if (__pyx_t_10 < 0) __pyx_t_10 += __pyx_pybuffernd_com_velocity.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com_velocity.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_com_velocity.diminfo[0].strides) = (__pyx_v_c_com_vel_ptr->data()[2]);

    /* "rbdl.pyx":2102
 *         com_velocity[1] = c_com_vel_ptr.data()[1]
 *         com_velocity[2] = c_com_vel_ptr.data()[2]
 *         del c_com_vel_ptr             # <<<<<<<<<<<<<<
 * 
 *     if com_acceleration is not None:
 */
    delete __pyx_v_c_com_vel_ptr;

    /* "rbdl.pyx":2098
 *     com[2] = c_com[2]
 * 
 *     if com_velocity is not None:             # <<<<<<<<<<<<<<
 *         com_velocity[0] = c_com_vel_ptr.data()[0]
 *         com_velocity[1] = c_com_vel_ptr.data()[1]
 */
  }

  /* "rbdl.pyx":2104
 *         del c_com_vel_ptr
 * 
 *     if com_acceleration is not None:             # <<<<<<<<<<<<<<
 *         com_acceleration[0] = c_com_accel_ptr.data()[0]
 *         com_acceleration[1] = c_com_accel_ptr.data()[1]
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_com_acceleration) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2105
 * 
 *     if com_acceleration is not None:
 *         com_acceleration[0] = c_com_accel_ptr.data()[0]             # <<<<<<<<<<<<<<
 *         com_acceleration[1] = c_com_accel_ptr.data()[1]
 *         com_acceleration[2] = c_com_accel_ptr.data()[2]
 */
    __pyx_t_11 = 0;
    if (__pyx_t_11 < 0) __pyx_t_11 += __pyx_pybuffernd_com_acceleration.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer.buf, __pyx_t_11, __pyx_pybuffernd_com_acceleration.diminfo[0].strides) = (__pyx_v_c_com_accel_ptr->data()[0]);

    /* "rbdl.pyx":2106
 *     if com_acceleration is not None:
 *         com_acceleration[0] = c_com_accel_ptr.data()[0]
 *         com_acceleration[1] = c_com_accel_ptr.data()[1]             # <<<<<<<<<<<<<<
 *         com_acceleration[2] = c_com_accel_ptr.data()[2]
 *         del c_com_accel_ptr
 */
    __pyx_t_12 = 1;
    if (__pyx_t_12 < 0) __pyx_t_12 += __pyx_pybuffernd_com_acceleration.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_com_acceleration.diminfo[0].strides) = (__pyx_v_c_com_accel_ptr->data()[1]);

    /* "rbdl.pyx":2107
 *         com_acceleration[0] = c_com_accel_ptr.data()[0]
 *         com_acceleration[1] = c_com_accel_ptr.data()[1]
 *         com_acceleration[2] = c_com_accel_ptr.data()[2]             # <<<<<<<<<<<<<<
 *         del c_com_accel_ptr
 * 
 */
    __pyx_t_13 = 2;
    if (__pyx_t_13 < 0) __pyx_t_13 += __pyx_pybuffernd_com_acceleration.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_com_acceleration.diminfo[0].strides) = (__pyx_v_c_com_accel_ptr->data()[2]);

    /* "rbdl.pyx":2108
 *         com_acceleration[1] = c_com_accel_ptr.data()[1]
 *         com_acceleration[2] = c_com_accel_ptr.data()[2]
 *         del c_com_accel_ptr             # <<<<<<<<<<<<<<
 * 
 *     if angular_momentum is not None:
 */
    delete __pyx_v_c_com_accel_ptr;

    /* "rbdl.pyx":2104
 *         del c_com_vel_ptr
 * 
 *     if com_acceleration is not None:             # <<<<<<<<<<<<<<
 *         com_acceleration[0] = c_com_accel_ptr.data()[0]
 *         com_acceleration[1] = c_com_accel_ptr.data()[1]
 */
  }

  /* "rbdl.pyx":2110
 *         del c_com_accel_ptr
 * 
 *     if angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         angular_momentum[0] = c_ang_momentum_ptr.data()[0]
 *         angular_momentum[1] = c_ang_momentum_ptr.data()[1]
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_angular_momentum) != Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":2111
 * 
 *     if angular_momentum is not None:
 *         angular_momentum[0] = c_ang_momentum_ptr.data()[0]             # <<<<<<<<<<<<<<
 *         angular_momentum[1] = c_ang_momentum_ptr.data()[1]
 *         angular_momentum[2] = c_ang_momentum_ptr.data()[2]
 */
    __pyx_t_14 = 0;
    if (__pyx_t_14 < 0) __pyx_t_14 += __pyx_pybuffernd_angular_momentum.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer.buf, __pyx_t_14, __pyx_pybuffernd_angular_momentum.diminfo[0].strides) = (__pyx_v_c_ang_momentum_ptr->data()[0]);

    /* "rbdl.pyx":2112
 *     if angular_momentum is not None:
 *         angular_momentum[0] = c_ang_momentum_ptr.data()[0]
 *         angular_momentum[1] = c_ang_momentum_ptr.data()[1]             # <<<<<<<<<<<<<<
 *         angular_momentum[2] = c_ang_momentum_ptr.data()[2]
 *         del c_ang_momentum_ptr
 */
    __pyx_t_15 = 1;
    if (__pyx_t_15 < 0) __pyx_t_15 += __pyx_pybuffernd_angular_momentum.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_angular_momentum.diminfo[0].strides) = (__pyx_v_c_ang_momentum_ptr->data()[1]);

    /* "rbdl.pyx":2113
 *         angular_momentum[0] = c_ang_momentum_ptr.data()[0]
 *         angular_momentum[1] = c_ang_momentum_ptr.data()[1]
 *         angular_momentum[2] = c_ang_momentum_ptr.data()[2]             # <<<<<<<<<<<<<<
 *         del c_ang_momentum_ptr
 * 
 */
    __pyx_t_16 = 2;
    if (__pyx_t_16 < 0) __pyx_t_16 += __pyx_pybuffernd_angular_momentum.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer.buf, __pyx_t_16, __pyx_pybuffernd_angular_momentum.diminfo[0].strides) = (__pyx_v_c_ang_momentum_ptr->data()[2]);

    /* "rbdl.pyx":2114
 *         angular_momentum[1] = c_ang_momentum_ptr.data()[1]
 *         angular_momentum[2] = c_ang_momentum_ptr.data()[2]
 *         del c_ang_momentum_ptr             # <<<<<<<<<<<<<<
 * 
 *     if change_of_angular_momentum is not None:
 */
    delete __pyx_v_c_ang_momentum_ptr;

    /* "rbdl.pyx":2110
 *         del c_com_accel_ptr
 * 
 *     if angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         angular_momentum[0] = c_ang_momentum_ptr.data()[0]
 *         angular_momentum[1] = c_ang_momentum_ptr.data()[1]
 */
  }

  /* "rbdl.pyx":2116
 *         del c_ang_momentum_ptr
 * 
 *     if change_of_angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         change_of_angular_momentum[0] = c_change_of_ang_momentum_ptr.data()[0]
 *         change_of_angular_momentum[1] = c_change_of_ang_momentum_ptr.data()[1]
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_change_of_angular_momentum) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2117
 * 
 *     if change_of_angular_momentum is not None:
 *         change_of_angular_momentum[0] = c_change_of_ang_momentum_ptr.data()[0]             # <<<<<<<<<<<<<<
 *         change_of_angular_momentum[1] = c_change_of_ang_momentum_ptr.data()[1]
 *         change_of_angular_momentum[2] = c_change_of_ang_momentum_ptr.data()[2]
 */
    __pyx_t_17 = 0;
    if (__pyx_t_17 < 0) __pyx_t_17 += __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].strides) = (__pyx_v_c_change_of_ang_momentum_ptr->data()[0]);

    /* "rbdl.pyx":2118
 *     if change_of_angular_momentum is not None:
 *         change_of_angular_momentum[0] = c_change_of_ang_momentum_ptr.data()[0]
 *         change_of_angular_momentum[1] = c_change_of_ang_momentum_ptr.data()[1]             # <<<<<<<<<<<<<<
 *         change_of_angular_momentum[2] = c_change_of_ang_momentum_ptr.data()[2]
 *         del c_change_of_ang_momentum_ptr
 */
    __pyx_t_18 = 1;
    if (__pyx_t_18 < 0) __pyx_t_18 += __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer.buf, __pyx_t_18, __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].strides) = (__pyx_v_c_change_of_ang_momentum_ptr->data()[1]);

    /* "rbdl.pyx":2119
 *         change_of_angular_momentum[0] = c_change_of_ang_momentum_ptr.data()[0]
 *         change_of_angular_momentum[1] = c_change_of_ang_momentum_ptr.data()[1]
 *         change_of_angular_momentum[2] = c_change_of_ang_momentum_ptr.data()[2]             # <<<<<<<<<<<<<<
 *         del c_change_of_ang_momentum_ptr
 * 
 */
    __pyx_t_19 = 2;
    if (__pyx_t_19 < 0) __pyx_t_19 += __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].shape;
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer.buf, __pyx_t_19, __pyx_pybuffernd_change_of_angular_momentum.diminfo[0].strides) = (__pyx_v_c_change_of_ang_momentum_ptr->data()[2]);

    /* "rbdl.pyx":2120
 *         change_of_angular_momentum[1] = c_change_of_ang_momentum_ptr.data()[1]
 *         change_of_angular_momentum[2] = c_change_of_ang_momentum_ptr.data()[2]
 *         del c_change_of_ang_momentum_ptr             # <<<<<<<<<<<<<<
 * 
 *     return cmass
 */
    delete __pyx_v_c_change_of_ang_momentum_ptr;

    /* "rbdl.pyx":2116
 *         del c_ang_momentum_ptr
 * 
 *     if change_of_angular_momentum is not None:             # <<<<<<<<<<<<<<
 *         change_of_angular_momentum[0] = c_change_of_ang_momentum_ptr.data()[0]
 *         change_of_angular_momentum[1] = c_change_of_ang_momentum_ptr.data()[1]
 */
  }

  /* "rbdl.pyx":2122
 *         del c_change_of_ang_momentum_ptr
 * 
 *     return cmass             # <<<<<<<<<<<<<<
 * 
 * def CalcZeroMomentPoint (Model model,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_20 = PyFloat_FromDouble(__pyx_v_cmass); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_20);
  __pyx_r = __pyx_t_20;
  __pyx_t_20 = 0;
  goto __pyx_L0;

  /* "rbdl.pyx":2040
 * ##############################
 * 
 * def CalcCenterOfMass (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_20);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com_velocity.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcCenterOfMass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_angular_momentum.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_change_of_angular_momentum.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com_acceleration.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_com_velocity.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2124
 *     return cmass
 * 
 * def CalcZeroMomentPoint (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_25CalcZeroMomentPoint(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_24CalcZeroMomentPoint[] = "CalcZeroMomentPoint(Model model, ndarray q, ndarray qdot, ndarray qddot, ndarray zmp, ndarray normal=None, ndarray point=None, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_25CalcZeroMomentPoint = {"CalcZeroMomentPoint", (PyCFunction)__pyx_pw_4rbdl_25CalcZeroMomentPoint, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_24CalcZeroMomentPoint};
static PyObject *__pyx_pw_4rbdl_25CalcZeroMomentPoint(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  PyArrayObject *__pyx_v_zmp = 0;
  PyArrayObject *__pyx_v_normal = 0;
  PyArrayObject *__pyx_v_point = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalcZeroMomentPoint (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_qddot,&__pyx_n_s_zmp,&__pyx_n_s_normal,&__pyx_n_s_point,&__pyx_n_s_update_kinematics,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};

    /* "rbdl.pyx":2129
 *         np.ndarray[double, ndim=1, mode="c"] qddot,
 *         np.ndarray[double, ndim=1, mode="c"] zmp,
 *         np.ndarray[double, ndim=1, mode="c"] normal=None,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] point=None,
 *         update_kinematics=True):
 */
    values[5] = (PyObject *)((PyArrayObject *)Py_None);

    /* "rbdl.pyx":2130
 *         np.ndarray[double, ndim=1, mode="c"] zmp,
 *         np.ndarray[double, ndim=1, mode="c"] normal=None,
 *         np.ndarray[double, ndim=1, mode="c"] point=None,             # <<<<<<<<<<<<<<
 *         update_kinematics=True):
 * 
 */
    values[6] = (PyObject *)((PyArrayObject *)Py_None);

    /* "rbdl.pyx":2131
 *         np.ndarray[double, ndim=1, mode="c"] normal=None,
 *         np.ndarray[double, ndim=1, mode="c"] point=None,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 * 
 *     cdef crbdl.Vector3d c_normal = crbdl.Vector3d()
 */
    values[7] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcZeroMomentPoint", 0, 5, 8, 1); __PYX_ERR(0, 2124, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcZeroMomentPoint", 0, 5, 8, 2); __PYX_ERR(0, 2124, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcZeroMomentPoint", 0, 5, 8, 3); __PYX_ERR(0, 2124, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_zmp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CalcZeroMomentPoint", 0, 5, 8, 4); __PYX_ERR(0, 2124, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_normal);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_point);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CalcZeroMomentPoint") < 0)) __PYX_ERR(0, 2124, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_qddot = ((PyArrayObject *)values[3]);
    __pyx_v_zmp = ((PyArrayObject *)values[4]);
    __pyx_v_normal = ((PyArrayObject *)values[5]);
    __pyx_v_point = ((PyArrayObject *)values[6]);
    __pyx_v_update_kinematics = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CalcZeroMomentPoint", 0, 5, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2124, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CalcZeroMomentPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2124, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2125, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 2126, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 2127, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_zmp), __pyx_ptype_5numpy_ndarray, 1, "zmp", 0))) __PYX_ERR(0, 2128, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_normal), __pyx_ptype_5numpy_ndarray, 1, "normal", 0))) __PYX_ERR(0, 2129, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_point), __pyx_ptype_5numpy_ndarray, 1, "point", 0))) __PYX_ERR(0, 2130, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_24CalcZeroMomentPoint(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_qddot, __pyx_v_zmp, __pyx_v_normal, __pyx_v_point, __pyx_v_update_kinematics);

  /* "rbdl.pyx":2124
 *     return cmass
 * 
 * def CalcZeroMomentPoint (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_24CalcZeroMomentPoint(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, PyArrayObject *__pyx_v_zmp, PyArrayObject *__pyx_v_normal, PyArrayObject *__pyx_v_point, PyObject *__pyx_v_update_kinematics) {
  RigidBodyDynamics::Math::Vector3d __pyx_v_c_normal;
  RigidBodyDynamics::Math::Vector3d __pyx_v_c_point;
  RigidBodyDynamics::Math::Vector3d *__pyx_v_c_zmp_ptr;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_normal;
  __Pyx_Buffer __pyx_pybuffer_normal;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_point;
  __Pyx_Buffer __pyx_pybuffer_point;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_zmp;
  __Pyx_Buffer __pyx_pybuffer_zmp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  bool __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  __Pyx_RefNannySetupContext("CalcZeroMomentPoint", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  __pyx_pybuffer_zmp.pybuffer.buf = NULL;
  __pyx_pybuffer_zmp.refcount = 0;
  __pyx_pybuffernd_zmp.data = NULL;
  __pyx_pybuffernd_zmp.rcbuffer = &__pyx_pybuffer_zmp;
  __pyx_pybuffer_normal.pybuffer.buf = NULL;
  __pyx_pybuffer_normal.refcount = 0;
  __pyx_pybuffernd_normal.data = NULL;
  __pyx_pybuffernd_normal.rcbuffer = &__pyx_pybuffer_normal;
  __pyx_pybuffer_point.pybuffer.buf = NULL;
  __pyx_pybuffer_point.refcount = 0;
  __pyx_pybuffernd_point.data = NULL;
  __pyx_pybuffernd_point.rcbuffer = &__pyx_pybuffer_point;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_zmp.rcbuffer->pybuffer, (PyObject*)__pyx_v_zmp, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  }
  __pyx_pybuffernd_zmp.diminfo[0].strides = __pyx_pybuffernd_zmp.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_zmp.diminfo[0].shape = __pyx_pybuffernd_zmp.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_normal.rcbuffer->pybuffer, (PyObject*)__pyx_v_normal, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  }
  __pyx_pybuffernd_normal.diminfo[0].strides = __pyx_pybuffernd_normal.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_normal.diminfo[0].shape = __pyx_pybuffernd_normal.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_point.rcbuffer->pybuffer, (PyObject*)__pyx_v_point, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  }
  __pyx_pybuffernd_point.diminfo[0].strides = __pyx_pybuffernd_point.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_point.diminfo[0].shape = __pyx_pybuffernd_point.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":2133
 *         update_kinematics=True):
 * 
 *     cdef crbdl.Vector3d c_normal = crbdl.Vector3d()             # <<<<<<<<<<<<<<
 *     cdef crbdl.Vector3d c_point = crbdl.Vector3d()
 * 
 */
  __pyx_v_c_normal = RigidBodyDynamics::Math::Vector3d();

  /* "rbdl.pyx":2134
 * 
 *     cdef crbdl.Vector3d c_normal = crbdl.Vector3d()
 *     cdef crbdl.Vector3d c_point = crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *     cdef crbdl.Vector3d* c_zmp_ptr# = crbdl.Vector3d()
 */
  __pyx_v_c_point = RigidBodyDynamics::Math::Vector3d();

  /* "rbdl.pyx":2137
 * 
 *     cdef crbdl.Vector3d* c_zmp_ptr# = crbdl.Vector3d()
 *     c_zmp_ptr = new crbdl.Vector3d()             # <<<<<<<<<<<<<<
 * 
 *     if normal is not None:
 */
  __pyx_v_c_zmp_ptr = new RigidBodyDynamics::Math::Vector3d();

  /* "rbdl.pyx":2139
 *     c_zmp_ptr = new crbdl.Vector3d()
 * 
 *     if normal is not None:             # <<<<<<<<<<<<<<
 *         c_normal[0] = normal[0]
 *         c_normal[1] = normal[1]
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_normal) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2140
 * 
 *     if normal is not None:
 *         c_normal[0] = normal[0]             # <<<<<<<<<<<<<<
 *         c_normal[1] = normal[1]
 *         c_normal[2] = normal[2]
 */
    __pyx_t_3 = 0;
    if (__pyx_t_3 < 0) __pyx_t_3 += __pyx_pybuffernd_normal.diminfo[0].shape;
    (__pyx_v_c_normal[0]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_normal.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_normal.diminfo[0].strides));

    /* "rbdl.pyx":2141
 *     if normal is not None:
 *         c_normal[0] = normal[0]
 *         c_normal[1] = normal[1]             # <<<<<<<<<<<<<<
 *         c_normal[2] = normal[2]
 *     else:
 */
    __pyx_t_4 = 1;
    if (__pyx_t_4 < 0) __pyx_t_4 += __pyx_pybuffernd_normal.diminfo[0].shape;
    (__pyx_v_c_normal[1]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_normal.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_normal.diminfo[0].strides));

    /* "rbdl.pyx":2142
 *         c_normal[0] = normal[0]
 *         c_normal[1] = normal[1]
 *         c_normal[2] = normal[2]             # <<<<<<<<<<<<<<
 *     else:
 *         c_normal[0] = 0
 */
    __pyx_t_5 = 2;
    if (__pyx_t_5 < 0) __pyx_t_5 += __pyx_pybuffernd_normal.diminfo[0].shape;
    (__pyx_v_c_normal[2]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_normal.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_normal.diminfo[0].strides));

    /* "rbdl.pyx":2139
 *     c_zmp_ptr = new crbdl.Vector3d()
 * 
 *     if normal is not None:             # <<<<<<<<<<<<<<
 *         c_normal[0] = normal[0]
 *         c_normal[1] = normal[1]
 */
    goto __pyx_L3;
  }

  /* "rbdl.pyx":2144
 *         c_normal[2] = normal[2]
 *     else:
 *         c_normal[0] = 0             # <<<<<<<<<<<<<<
 *         c_normal[1] = 0
 *         c_normal[2] = 1
 */
  /*else*/ {
    (__pyx_v_c_normal[0]) = 0.0;

    /* "rbdl.pyx":2145
 *     else:
 *         c_normal[0] = 0
 *         c_normal[1] = 0             # <<<<<<<<<<<<<<
 *         c_normal[2] = 1
 * 
 */
    (__pyx_v_c_normal[1]) = 0.0;

    /* "rbdl.pyx":2146
 *         c_normal[0] = 0
 *         c_normal[1] = 0
 *         c_normal[2] = 1             # <<<<<<<<<<<<<<
 * 
 *     if point is not None:
 */
    (__pyx_v_c_normal[2]) = 1.0;
  }
  __pyx_L3:;

  /* "rbdl.pyx":2148
 *         c_normal[2] = 1
 * 
 *     if point is not None:             # <<<<<<<<<<<<<<
 *         c_point[0] = point[0]
 *         c_point[1] = point[1]
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_point) != Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "rbdl.pyx":2149
 * 
 *     if point is not None:
 *         c_point[0] = point[0]             # <<<<<<<<<<<<<<
 *         c_point[1] = point[1]
 *         c_point[2] = point[2]
 */
    __pyx_t_6 = 0;
    if (__pyx_t_6 < 0) __pyx_t_6 += __pyx_pybuffernd_point.diminfo[0].shape;
    (__pyx_v_c_point[0]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_point.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_point.diminfo[0].strides));

    /* "rbdl.pyx":2150
 *     if point is not None:
 *         c_point[0] = point[0]
 *         c_point[1] = point[1]             # <<<<<<<<<<<<<<
 *         c_point[2] = point[2]
 * 
 */
    __pyx_t_7 = 1;
    if (__pyx_t_7 < 0) __pyx_t_7 += __pyx_pybuffernd_point.diminfo[0].shape;
    (__pyx_v_c_point[1]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_point.rcbuffer->pybuffer.buf, __pyx_t_7, __pyx_pybuffernd_point.diminfo[0].strides));

    /* "rbdl.pyx":2151
 *         c_point[0] = point[0]
 *         c_point[1] = point[1]
 *         c_point[2] = point[2]             # <<<<<<<<<<<<<<
 * 
 *     crbdl.CalcZeroMomentPoint (
 */
    __pyx_t_8 = 2;
    if (__pyx_t_8 < 0) __pyx_t_8 += __pyx_pybuffernd_point.diminfo[0].shape;
    (__pyx_v_c_point[2]) = (*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_point.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_point.diminfo[0].strides));

    /* "rbdl.pyx":2148
 *         c_normal[2] = 1
 * 
 *     if point is not None:             # <<<<<<<<<<<<<<
 *         c_point[0] = point[0]
 *         c_point[1] = point[1]
 */
  }

  /* "rbdl.pyx":2161
 *             c_normal,
 *             c_point,
 *             update_kinematics)             # <<<<<<<<<<<<<<
 * 
 *     zmp[0] = c_zmp_ptr.data()[0]
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_9 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2161, __pyx_L1_error)

  /* "rbdl.pyx":2153
 *         c_point[2] = point[2]
 * 
 *     crbdl.CalcZeroMomentPoint (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             NumpyToVectorNd (q),
 */
  RigidBodyDynamics::Utils::CalcZeroMomentPoint((__pyx_v_model->thisptr[0]), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_q)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qdot)), __pyx_f_4rbdl_NumpyToVectorNd(((PyArrayObject *)__pyx_v_qddot)), __pyx_v_c_zmp_ptr, __pyx_v_c_normal, __pyx_v_c_point, __pyx_t_9);

  /* "rbdl.pyx":2163
 *             update_kinematics)
 * 
 *     zmp[0] = c_zmp_ptr.data()[0]             # <<<<<<<<<<<<<<
 *     zmp[1] = c_zmp_ptr.data()[1]
 *     zmp[2] = c_zmp_ptr.data()[2]
 */
  __pyx_t_10 = 0;
  if (__pyx_t_10 < 0) __pyx_t_10 += __pyx_pybuffernd_zmp.diminfo[0].shape;
  *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_zmp.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_zmp.diminfo[0].strides) = (__pyx_v_c_zmp_ptr->data()[0]);

  /* "rbdl.pyx":2164
 * 
 *     zmp[0] = c_zmp_ptr.data()[0]
 *     zmp[1] = c_zmp_ptr.data()[1]             # <<<<<<<<<<<<<<
 *     zmp[2] = c_zmp_ptr.data()[2]
 * 
 */
  __pyx_t_11 = 1;
  if (__pyx_t_11 < 0) __pyx_t_11 += __pyx_pybuffernd_zmp.diminfo[0].shape;
  *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_zmp.rcbuffer->pybuffer.buf, __pyx_t_11, __pyx_pybuffernd_zmp.diminfo[0].strides) = (__pyx_v_c_zmp_ptr->data()[1]);

  /* "rbdl.pyx":2165
 *     zmp[0] = c_zmp_ptr.data()[0]
 *     zmp[1] = c_zmp_ptr.data()[1]
 *     zmp[2] = c_zmp_ptr.data()[2]             # <<<<<<<<<<<<<<
 * 
 *     return zmp
 */
  __pyx_t_12 = 2;
  if (__pyx_t_12 < 0) __pyx_t_12 += __pyx_pybuffernd_zmp.diminfo[0].shape;
  *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_zmp.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_zmp.diminfo[0].strides) = (__pyx_v_c_zmp_ptr->data()[2]);

  /* "rbdl.pyx":2167
 *     zmp[2] = c_zmp_ptr.data()[2]
 * 
 *     return zmp             # <<<<<<<<<<<<<<
 * ##############################
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_zmp));
  __pyx_r = ((PyObject *)__pyx_v_zmp);
  goto __pyx_L0;

  /* "rbdl.pyx":2124
 *     return cmass
 * 
 * def CalcZeroMomentPoint (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_normal.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_point.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_zmp.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CalcZeroMomentPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_normal.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_point.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_zmp.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2174
 * ##############################
 * 
 * def InverseDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_27InverseDynamics(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_26InverseDynamics[] = "InverseDynamics(Model model, ndarray q, ndarray qdot, ndarray qddot, ndarray tau)";
static PyMethodDef __pyx_mdef_4rbdl_27InverseDynamics = {"InverseDynamics", (PyCFunction)__pyx_pw_4rbdl_27InverseDynamics, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_26InverseDynamics};
static PyObject *__pyx_pw_4rbdl_27InverseDynamics(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  PyArrayObject *__pyx_v_tau = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InverseDynamics (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_qddot,&__pyx_n_s_tau,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("InverseDynamics", 1, 5, 5, 1); __PYX_ERR(0, 2174, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("InverseDynamics", 1, 5, 5, 2); __PYX_ERR(0, 2174, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("InverseDynamics", 1, 5, 5, 3); __PYX_ERR(0, 2174, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tau)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("InverseDynamics", 1, 5, 5, 4); __PYX_ERR(0, 2174, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "InverseDynamics") < 0)) __PYX_ERR(0, 2174, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_qddot = ((PyArrayObject *)values[3]);
    __pyx_v_tau = ((PyArrayObject *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("InverseDynamics", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2174, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.InverseDynamics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2174, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2175, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 2176, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 2177, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tau), __pyx_ptype_5numpy_ndarray, 1, "tau", 0))) __PYX_ERR(0, 2178, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_26InverseDynamics(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_qddot, __pyx_v_tau);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_26InverseDynamics(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_qddot, PyArrayObject *__pyx_v_tau) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_tau;
  __Pyx_Buffer __pyx_pybuffer_tau;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InverseDynamics", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  __pyx_pybuffer_tau.pybuffer.buf = NULL;
  __pyx_pybuffer_tau.refcount = 0;
  __pyx_pybuffernd_tau.data = NULL;
  __pyx_pybuffernd_tau.rcbuffer = &__pyx_pybuffer_tau;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_tau.rcbuffer->pybuffer, (PyObject*)__pyx_v_tau, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  }
  __pyx_pybuffernd_tau.diminfo[0].strides = __pyx_pybuffernd_tau.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_tau.diminfo[0].shape = __pyx_pybuffernd_tau.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":2179
 *         np.ndarray[double, ndim=1, mode="c"] qddot,
 *         np.ndarray[double, ndim=1, mode="c"] tau):
 *     crbdl.InverseDynamicsPtr (model.thisptr[0],             # <<<<<<<<<<<<<<
 *             <double*>q.data,
 *             <double*>qdot.data,
 */
  RigidBodyDynamics::InverseDynamicsPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), ((double *)__pyx_v_qdot->data), ((double *)__pyx_v_qddot->data), ((double *)__pyx_v_tau->data), NULL);

  /* "rbdl.pyx":2174
 * ##############################
 * 
 * def InverseDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.InverseDynamics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2187
 *             )
 * 
 * def NonlinearEffects (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_29NonlinearEffects(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_28NonlinearEffects[] = "NonlinearEffects(Model model, ndarray q, ndarray qdot, ndarray tau)";
static PyMethodDef __pyx_mdef_4rbdl_29NonlinearEffects = {"NonlinearEffects", (PyCFunction)__pyx_pw_4rbdl_29NonlinearEffects, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_28NonlinearEffects};
static PyObject *__pyx_pw_4rbdl_29NonlinearEffects(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_tau = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NonlinearEffects (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_tau,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("NonlinearEffects", 1, 4, 4, 1); __PYX_ERR(0, 2187, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("NonlinearEffects", 1, 4, 4, 2); __PYX_ERR(0, 2187, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tau)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("NonlinearEffects", 1, 4, 4, 3); __PYX_ERR(0, 2187, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "NonlinearEffects") < 0)) __PYX_ERR(0, 2187, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_tau = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("NonlinearEffects", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2187, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.NonlinearEffects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2187, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2188, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 2189, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tau), __pyx_ptype_5numpy_ndarray, 1, "tau", 0))) __PYX_ERR(0, 2190, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_28NonlinearEffects(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_tau);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_28NonlinearEffects(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_tau) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_tau;
  __Pyx_Buffer __pyx_pybuffer_tau;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NonlinearEffects", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_tau.pybuffer.buf = NULL;
  __pyx_pybuffer_tau.refcount = 0;
  __pyx_pybuffernd_tau.data = NULL;
  __pyx_pybuffernd_tau.rcbuffer = &__pyx_pybuffer_tau;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2187, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2187, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_tau.rcbuffer->pybuffer, (PyObject*)__pyx_v_tau, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2187, __pyx_L1_error)
  }
  __pyx_pybuffernd_tau.diminfo[0].strides = __pyx_pybuffernd_tau.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_tau.diminfo[0].shape = __pyx_pybuffernd_tau.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":2191
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 *         np.ndarray[double, ndim=1, mode="c"] tau):
 *     crbdl.NonlinearEffectsPtr (model.thisptr[0],             # <<<<<<<<<<<<<<
 *             <double*>q.data,
 *             <double*>qdot.data,
 */
  RigidBodyDynamics::NonlinearEffectsPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), ((double *)__pyx_v_qdot->data), ((double *)__pyx_v_tau->data));

  /* "rbdl.pyx":2187
 *             )
 * 
 * def NonlinearEffects (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.NonlinearEffects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2197
 *             )
 * 
 * def CompositeRigidBodyAlgorithm (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=2, mode="c"] H,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_31CompositeRigidBodyAlgorithm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_30CompositeRigidBodyAlgorithm[] = "CompositeRigidBodyAlgorithm(Model model, ndarray q, ndarray H, update_kinematics=True)";
static PyMethodDef __pyx_mdef_4rbdl_31CompositeRigidBodyAlgorithm = {"CompositeRigidBodyAlgorithm", (PyCFunction)__pyx_pw_4rbdl_31CompositeRigidBodyAlgorithm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_30CompositeRigidBodyAlgorithm};
static PyObject *__pyx_pw_4rbdl_31CompositeRigidBodyAlgorithm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_H = 0;
  PyObject *__pyx_v_update_kinematics = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CompositeRigidBodyAlgorithm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_H,&__pyx_n_s_update_kinematics,0};
    PyObject* values[4] = {0,0,0,0};

    /* "rbdl.pyx":2200
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=2, mode="c"] H,
 *         update_kinematics=True):             # <<<<<<<<<<<<<<
 *     crbdl.CompositeRigidBodyAlgorithmPtr (model.thisptr[0],
 *             <double*>q.data,
 */
    values[3] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CompositeRigidBodyAlgorithm", 0, 3, 4, 1); __PYX_ERR(0, 2197, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_H)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("CompositeRigidBodyAlgorithm", 0, 3, 4, 2); __PYX_ERR(0, 2197, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update_kinematics);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "CompositeRigidBodyAlgorithm") < 0)) __PYX_ERR(0, 2197, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_H = ((PyArrayObject *)values[2]);
    __pyx_v_update_kinematics = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("CompositeRigidBodyAlgorithm", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2197, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.CompositeRigidBodyAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2197, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2198, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_H), __pyx_ptype_5numpy_ndarray, 1, "H", 0))) __PYX_ERR(0, 2199, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_30CompositeRigidBodyAlgorithm(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_H, __pyx_v_update_kinematics);

  /* "rbdl.pyx":2197
 *             )
 * 
 * def CompositeRigidBodyAlgorithm (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=2, mode="c"] H,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_30CompositeRigidBodyAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_H, PyObject *__pyx_v_update_kinematics) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_H;
  __Pyx_Buffer __pyx_pybuffer_H;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  __Pyx_RefNannySetupContext("CompositeRigidBodyAlgorithm", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_H.pybuffer.buf = NULL;
  __pyx_pybuffer_H.refcount = 0;
  __pyx_pybuffernd_H.data = NULL;
  __pyx_pybuffernd_H.rcbuffer = &__pyx_pybuffer_H;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2197, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_H.rcbuffer->pybuffer, (PyObject*)__pyx_v_H, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2197, __pyx_L1_error)
  }
  __pyx_pybuffernd_H.diminfo[0].strides = __pyx_pybuffernd_H.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_H.diminfo[0].shape = __pyx_pybuffernd_H.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_H.diminfo[1].strides = __pyx_pybuffernd_H.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_H.diminfo[1].shape = __pyx_pybuffernd_H.rcbuffer->pybuffer.shape[1];

  /* "rbdl.pyx":2204
 *             <double*>q.data,
 *             <double*>H.data,
 *             update_kinematics);             # <<<<<<<<<<<<<<
 * 
 * def ForwardDynamics (Model model,
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_update_kinematics); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2204, __pyx_L1_error)

  /* "rbdl.pyx":2201
 *         np.ndarray[double, ndim=2, mode="c"] H,
 *         update_kinematics=True):
 *     crbdl.CompositeRigidBodyAlgorithmPtr (model.thisptr[0],             # <<<<<<<<<<<<<<
 *             <double*>q.data,
 *             <double*>H.data,
 */
  RigidBodyDynamics::CompositeRigidBodyAlgorithmPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), ((double *)__pyx_v_H->data), __pyx_t_1);

  /* "rbdl.pyx":2197
 *             )
 * 
 * def CompositeRigidBodyAlgorithm (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=2, mode="c"] H,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_H.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.CompositeRigidBodyAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_H.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2206
 *             update_kinematics);
 * 
 * def ForwardDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_33ForwardDynamics(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_32ForwardDynamics[] = "ForwardDynamics(Model model, ndarray q, ndarray qdot, ndarray tau, ndarray qddot)";
static PyMethodDef __pyx_mdef_4rbdl_33ForwardDynamics = {"ForwardDynamics", (PyCFunction)__pyx_pw_4rbdl_33ForwardDynamics, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_32ForwardDynamics};
static PyObject *__pyx_pw_4rbdl_33ForwardDynamics(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_tau = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ForwardDynamics (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_tau,&__pyx_n_s_qddot,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamics", 1, 5, 5, 1); __PYX_ERR(0, 2206, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamics", 1, 5, 5, 2); __PYX_ERR(0, 2206, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tau)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamics", 1, 5, 5, 3); __PYX_ERR(0, 2206, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamics", 1, 5, 5, 4); __PYX_ERR(0, 2206, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ForwardDynamics") < 0)) __PYX_ERR(0, 2206, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_tau = ((PyArrayObject *)values[3]);
    __pyx_v_qddot = ((PyArrayObject *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ForwardDynamics", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2206, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.ForwardDynamics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2206, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2207, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 2208, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tau), __pyx_ptype_5numpy_ndarray, 1, "tau", 0))) __PYX_ERR(0, 2209, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 2210, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_32ForwardDynamics(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_tau, __pyx_v_qddot);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_32ForwardDynamics(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_tau, PyArrayObject *__pyx_v_qddot) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_tau;
  __Pyx_Buffer __pyx_pybuffer_tau;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ForwardDynamics", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_tau.pybuffer.buf = NULL;
  __pyx_pybuffer_tau.refcount = 0;
  __pyx_pybuffernd_tau.data = NULL;
  __pyx_pybuffernd_tau.rcbuffer = &__pyx_pybuffer_tau;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2206, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2206, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_tau.rcbuffer->pybuffer, (PyObject*)__pyx_v_tau, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2206, __pyx_L1_error)
  }
  __pyx_pybuffernd_tau.diminfo[0].strides = __pyx_pybuffernd_tau.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_tau.diminfo[0].shape = __pyx_pybuffernd_tau.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2206, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":2211
 *         np.ndarray[double, ndim=1, mode="c"] tau,
 *         np.ndarray[double, ndim=1, mode="c"] qddot):
 *     crbdl.ForwardDynamicsPtr (model.thisptr[0],             # <<<<<<<<<<<<<<
 *             <double*>q.data,
 *             <double*>qdot.data,
 */
  RigidBodyDynamics::ForwardDynamicsPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), ((double *)__pyx_v_qdot->data), ((double *)__pyx_v_tau->data), ((double *)__pyx_v_qddot->data), NULL);

  /* "rbdl.pyx":2206
 *             update_kinematics);
 * 
 * def ForwardDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.ForwardDynamics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2224
 * ##############################
 * 
 * def ForwardDynamicsConstraintsDirect (             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_35ForwardDynamicsConstraintsDirect(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_34ForwardDynamicsConstraintsDirect[] = "ForwardDynamicsConstraintsDirect(Model model, ndarray q, ndarray qdot, ndarray tau, ConstraintSet CS, ndarray qddot)";
static PyMethodDef __pyx_mdef_4rbdl_35ForwardDynamicsConstraintsDirect = {"ForwardDynamicsConstraintsDirect", (PyCFunction)__pyx_pw_4rbdl_35ForwardDynamicsConstraintsDirect, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_34ForwardDynamicsConstraintsDirect};
static PyObject *__pyx_pw_4rbdl_35ForwardDynamicsConstraintsDirect(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4rbdl_Model *__pyx_v_model = 0;
  PyArrayObject *__pyx_v_q = 0;
  PyArrayObject *__pyx_v_qdot = 0;
  PyArrayObject *__pyx_v_tau = 0;
  struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_CS = 0;
  PyArrayObject *__pyx_v_qddot = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ForwardDynamicsConstraintsDirect (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_model,&__pyx_n_s_q,&__pyx_n_s_qdot,&__pyx_n_s_tau,&__pyx_n_s_CS,&__pyx_n_s_qddot,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamicsConstraintsDirect", 1, 6, 6, 1); __PYX_ERR(0, 2224, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qdot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamicsConstraintsDirect", 1, 6, 6, 2); __PYX_ERR(0, 2224, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tau)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamicsConstraintsDirect", 1, 6, 6, 3); __PYX_ERR(0, 2224, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_CS)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamicsConstraintsDirect", 1, 6, 6, 4); __PYX_ERR(0, 2224, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_qddot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ForwardDynamicsConstraintsDirect", 1, 6, 6, 5); __PYX_ERR(0, 2224, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ForwardDynamicsConstraintsDirect") < 0)) __PYX_ERR(0, 2224, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_model = ((struct __pyx_obj_4rbdl_Model *)values[0]);
    __pyx_v_q = ((PyArrayObject *)values[1]);
    __pyx_v_qdot = ((PyArrayObject *)values[2]);
    __pyx_v_tau = ((PyArrayObject *)values[3]);
    __pyx_v_CS = ((struct __pyx_obj_4rbdl_ConstraintSet *)values[4]);
    __pyx_v_qddot = ((PyArrayObject *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ForwardDynamicsConstraintsDirect", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2224, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("rbdl.ForwardDynamicsConstraintsDirect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_4rbdl_Model, 1, "model", 0))) __PYX_ERR(0, 2225, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_5numpy_ndarray, 1, "q", 0))) __PYX_ERR(0, 2226, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qdot), __pyx_ptype_5numpy_ndarray, 1, "qdot", 0))) __PYX_ERR(0, 2227, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tau), __pyx_ptype_5numpy_ndarray, 1, "tau", 0))) __PYX_ERR(0, 2228, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_CS), __pyx_ptype_4rbdl_ConstraintSet, 1, "CS", 0))) __PYX_ERR(0, 2229, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_qddot), __pyx_ptype_5numpy_ndarray, 1, "qddot", 0))) __PYX_ERR(0, 2230, __pyx_L1_error)
  __pyx_r = __pyx_pf_4rbdl_34ForwardDynamicsConstraintsDirect(__pyx_self, __pyx_v_model, __pyx_v_q, __pyx_v_qdot, __pyx_v_tau, __pyx_v_CS, __pyx_v_qddot);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_34ForwardDynamicsConstraintsDirect(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4rbdl_Model *__pyx_v_model, PyArrayObject *__pyx_v_q, PyArrayObject *__pyx_v_qdot, PyArrayObject *__pyx_v_tau, struct __pyx_obj_4rbdl_ConstraintSet *__pyx_v_CS, PyArrayObject *__pyx_v_qddot) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_q;
  __Pyx_Buffer __pyx_pybuffer_q;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qddot;
  __Pyx_Buffer __pyx_pybuffer_qddot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_qdot;
  __Pyx_Buffer __pyx_pybuffer_qdot;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_tau;
  __Pyx_Buffer __pyx_pybuffer_tau;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ForwardDynamicsConstraintsDirect", 0);
  __pyx_pybuffer_q.pybuffer.buf = NULL;
  __pyx_pybuffer_q.refcount = 0;
  __pyx_pybuffernd_q.data = NULL;
  __pyx_pybuffernd_q.rcbuffer = &__pyx_pybuffer_q;
  __pyx_pybuffer_qdot.pybuffer.buf = NULL;
  __pyx_pybuffer_qdot.refcount = 0;
  __pyx_pybuffernd_qdot.data = NULL;
  __pyx_pybuffernd_qdot.rcbuffer = &__pyx_pybuffer_qdot;
  __pyx_pybuffer_tau.pybuffer.buf = NULL;
  __pyx_pybuffer_tau.refcount = 0;
  __pyx_pybuffernd_tau.data = NULL;
  __pyx_pybuffernd_tau.rcbuffer = &__pyx_pybuffer_tau;
  __pyx_pybuffer_qddot.pybuffer.buf = NULL;
  __pyx_pybuffer_qddot.refcount = 0;
  __pyx_pybuffernd_qddot.data = NULL;
  __pyx_pybuffernd_qddot.rcbuffer = &__pyx_pybuffer_qddot;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_q.rcbuffer->pybuffer, (PyObject*)__pyx_v_q, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2224, __pyx_L1_error)
  }
  __pyx_pybuffernd_q.diminfo[0].strides = __pyx_pybuffernd_q.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_q.diminfo[0].shape = __pyx_pybuffernd_q.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qdot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2224, __pyx_L1_error)
  }
  __pyx_pybuffernd_qdot.diminfo[0].strides = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qdot.diminfo[0].shape = __pyx_pybuffernd_qdot.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_tau.rcbuffer->pybuffer, (PyObject*)__pyx_v_tau, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2224, __pyx_L1_error)
  }
  __pyx_pybuffernd_tau.diminfo[0].strides = __pyx_pybuffernd_tau.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_tau.diminfo[0].shape = __pyx_pybuffernd_tau.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer, (PyObject*)__pyx_v_qddot, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2224, __pyx_L1_error)
  }
  __pyx_pybuffernd_qddot.diminfo[0].strides = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_qddot.diminfo[0].shape = __pyx_pybuffernd_qddot.rcbuffer->pybuffer.shape[0];

  /* "rbdl.pyx":2231
 *         ConstraintSet CS,
 *         np.ndarray[double, ndim=1, mode="c"] qddot):
 *     crbdl.ForwardDynamicsConstraintsDirectPtr (             # <<<<<<<<<<<<<<
 *             model.thisptr[0],
 *             <double*>q.data,
 */
  RigidBodyDynamics::ForwardDynamicsConstraintsDirectPtr((__pyx_v_model->thisptr[0]), ((double *)__pyx_v_q->data), ((double *)__pyx_v_qdot->data), ((double *)__pyx_v_tau->data), (__pyx_v_CS->thisptr[0]), ((double *)__pyx_v_qddot->data));

  /* "rbdl.pyx":2224
 * ##############################
 * 
 * def ForwardDynamicsConstraintsDirect (             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("rbdl.ForwardDynamicsConstraintsDirect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_q.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qddot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_qdot.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tau.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "rbdl.pyx":2246
 * ##############################
 * 
 * def loadModel (             # <<<<<<<<<<<<<<
 *         filename,
 *         **kwargs
 */

/* Python wrapper */
static PyObject *__pyx_pw_4rbdl_37loadModel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4rbdl_36loadModel[] = "loadModel(filename, **kwargs)";
static PyMethodDef __pyx_mdef_4rbdl_37loadModel = {"loadModel", (PyCFunction)__pyx_pw_4rbdl_37loadModel, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_36loadModel};
static PyObject *__pyx_pw_4rbdl_37loadModel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loadModel (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_filename)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "loadModel") < 0)) __PYX_ERR(0, 2246, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_filename = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("loadModel", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2246, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("rbdl.loadModel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4rbdl_36loadModel(__pyx_self, __pyx_v_filename, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4rbdl_36loadModel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_verbose = NULL;
  PyObject *__pyx_v_floating_base = NULL;
  struct __pyx_obj_4rbdl_Model *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  char const *__pyx_t_4;
  bool __pyx_t_5;
  bool __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("loadModel", 0);

  /* "rbdl.pyx":2250
 *         **kwargs
 *         ):
 *     verbose = False             # <<<<<<<<<<<<<<
 *     if "verbose" in kwargs.keys():
 *         verbose=kwargs["verbose"]
 */
  __Pyx_INCREF(Py_False);
  __pyx_v_verbose = Py_False;

  /* "rbdl.pyx":2251
 *         ):
 *     verbose = False
 *     if "verbose" in kwargs.keys():             # <<<<<<<<<<<<<<
 *         verbose=kwargs["verbose"]
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_verbose, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "rbdl.pyx":2252
 *     verbose = False
 *     if "verbose" in kwargs.keys():
 *         verbose=kwargs["verbose"]             # <<<<<<<<<<<<<<
 * 
 *     floating_base = False
 */
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_n_s_verbose); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_verbose, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "rbdl.pyx":2251
 *         ):
 *     verbose = False
 *     if "verbose" in kwargs.keys():             # <<<<<<<<<<<<<<
 *         verbose=kwargs["verbose"]
 * 
 */
  }

  /* "rbdl.pyx":2254
 *         verbose=kwargs["verbose"]
 * 
 *     floating_base = False             # <<<<<<<<<<<<<<
 *     if "floating_base" in kwargs.keys():
 *         floating_base=kwargs["floating_base"]
 */
  __Pyx_INCREF(Py_False);
  __pyx_v_floating_base = Py_False;

  /* "rbdl.pyx":2255
 * 
 *     floating_base = False
 *     if "floating_base" in kwargs.keys():             # <<<<<<<<<<<<<<
 *         floating_base=kwargs["floating_base"]
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_floating_base, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 2255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2256
 *     floating_base = False
 *     if "floating_base" in kwargs.keys():
 *         floating_base=kwargs["floating_base"]             # <<<<<<<<<<<<<<
 * 
 *     result = Model()
 */
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_n_s_floating_base); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_floating_base, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "rbdl.pyx":2255
 * 
 *     floating_base = False
 *     if "floating_base" in kwargs.keys():             # <<<<<<<<<<<<<<
 *         floating_base=kwargs["floating_base"]
 * 
 */
  }

  /* "rbdl.pyx":2258
 *         floating_base=kwargs["floating_base"]
 * 
 *     result = Model()             # <<<<<<<<<<<<<<
 *     if crbdl.rbdl_loadmodel (filename, result.thisptr, floating_base, verbose):
 *         return result
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4rbdl_Model), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((struct __pyx_obj_4rbdl_Model *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "rbdl.pyx":2259
 * 
 *     result = Model()
 *     if crbdl.rbdl_loadmodel (filename, result.thisptr, floating_base, verbose):             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_AsString(__pyx_v_filename); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 2259, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_floating_base); if (unlikely((__pyx_t_5 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2259, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_verbose); if (unlikely((__pyx_t_6 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2259, __pyx_L1_error)
  __pyx_t_2 = (rbdl_loadmodel(__pyx_t_4, __pyx_v_result->thisptr, __pyx_t_5, __pyx_t_6) != 0);
  if (__pyx_t_2) {

    /* "rbdl.pyx":2260
 *     result = Model()
 *     if crbdl.rbdl_loadmodel (filename, result.thisptr, floating_base, verbose):
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     print ("Error loading model {}!".format (filename))
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_result));
    __pyx_r = ((PyObject *)__pyx_v_result);
    goto __pyx_L0;

    /* "rbdl.pyx":2259
 * 
 *     result = Model()
 *     if crbdl.rbdl_loadmodel (filename, result.thisptr, floating_base, verbose):             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  }

  /* "rbdl.pyx":2262
 *         return result
 * 
 *     print ("Error loading model {}!".format (filename))             # <<<<<<<<<<<<<<
 *     return None
 * 
 */
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Error_loading_model, __pyx_n_s_format); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (!__pyx_t_8) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_7)) {
      PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_v_filename};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
      PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_v_filename};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
      __Pyx_INCREF(__pyx_v_filename);
      __Pyx_GIVEREF(__pyx_v_filename);
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_v_filename);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 2262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2263
 * 
 *     print ("Error loading model {}!".format (filename))
 *     return None             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_None);
  __pyx_r = Py_None;
  goto __pyx_L0;

  /* "rbdl.pyx":2246
 * ##############################
 * 
 * def loadModel (             # <<<<<<<<<<<<<<
 *         filename,
 *         **kwargs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("rbdl.loadModel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_verbose);
  __Pyx_XDECREF(__pyx_v_floating_base);
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
    goto __pyx_L4;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  /*else*/ {
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__85, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 218, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 218, __pyx_L1_error)

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 222, __pyx_L1_error)

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L11;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":246
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":250
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
    goto __pyx_L14;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":253
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":256
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":258
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_1) {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__87, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 259, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 259, __pyx_L1_error)

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":260
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":261
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = ((char *)"B");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":262
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = ((char *)"h");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = ((char *)"H");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = ((char *)"i");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = ((char *)"I");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = ((char *)"l");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = ((char *)"L");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = ((char *)"q");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = ((char *)"Q");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = ((char *)"f");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = ((char *)"d");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = ((char *)"g");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = ((char *)"Zf");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = ((char *)"Zd");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = ((char *)"Zg");
      break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(2, 278, __pyx_L1_error)
      break;
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":280
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)malloc(0xFF));

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":283
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(2, 285, __pyx_L1_error)
    __pyx_v_f = __pyx_t_7;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":288
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":292
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":771
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":790
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":791
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(2, 794, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 794, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 795, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(2, 795, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if !CYTHON_COMPILING_IN_PYPY
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(2, 796, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 796, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(2, 796, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 798, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__88, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 799, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 799, __pyx_L1_error)

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_6) {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 803, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 803, __pyx_L1_error)

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 813, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 813, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 813, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 821, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__90, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 823, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 823, __pyx_L1_error)

        /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 826, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 826, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 826, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 828, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 829, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 833, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 833, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 833, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 836, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 836, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 836, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __PYX_ERR(2, 844, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(2, 849, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":969
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":971
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":972
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":973
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":974
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":978
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":980
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":985
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":987
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(2, 987, __pyx_L3_error)

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":988
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 988, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":989
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__91, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 989, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 989, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":985
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":991
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":993
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(2, 993, __pyx_L3_error)

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":994
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 994, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":995
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__92, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 995, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 995, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":991
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":999
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(2, 999, __pyx_L3_error)

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":1000
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1000, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":1001
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__93, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1001, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1001, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_unsigned_int(const std::vector<unsigned int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_unsigned_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = __Pyx_PyInt_From_unsigned_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_unsigned_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_4rbdl_Vector3d(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_Vector3d *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_Vector3d *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_8Vector3d_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_Vector3d(PyObject *o) {
  struct __pyx_obj_4rbdl_Vector3d *p = (struct __pyx_obj_4rbdl_Vector3d *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_8Vector3d_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_Vector3d(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_Vector3d *p = (struct __pyx_obj_4rbdl_Vector3d *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_Vector3d(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_Vector3d *p = (struct __pyx_obj_4rbdl_Vector3d *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_4rbdl_Vector3d(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl_Vector3d(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_8Vector3d_9__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_Vector3d[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_8Vector3d_13fromPointer, METH_O, __pyx_doc_4rbdl_8Vector3d_12fromPointer},
  {"fromPythonArray", (PyCFunction)__pyx_pw_4rbdl_8Vector3d_15fromPythonArray, METH_O, __pyx_doc_4rbdl_8Vector3d_14fromPythonArray},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_8Vector3d_17__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_8Vector3d_16__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_8Vector3d_19__setstate_cython__, METH_O, __pyx_doc_4rbdl_8Vector3d_18__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Vector3d = {
  __pyx_pw_4rbdl_8Vector3d_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl_Vector3d, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Vector3d = {
  __pyx_pw_4rbdl_8Vector3d_11__len__, /*mp_length*/
  __pyx_pw_4rbdl_8Vector3d_7__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl_Vector3d, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl_Vector3d = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.Vector3d", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_Vector3d), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_Vector3d, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_8Vector3d_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Vector3d, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Vector3d, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_Vector3d, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_Vector3d, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_Vector3d, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_Vector3d, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_Matrix3d(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_Matrix3d *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_Matrix3d *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_8Matrix3d_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_Matrix3d(PyObject *o) {
  struct __pyx_obj_4rbdl_Matrix3d *p = (struct __pyx_obj_4rbdl_Matrix3d *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_8Matrix3d_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_Matrix3d(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_Matrix3d *p = (struct __pyx_obj_4rbdl_Matrix3d *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_Matrix3d(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_Matrix3d *p = (struct __pyx_obj_4rbdl_Matrix3d *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_4rbdl_Matrix3d(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl_Matrix3d(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_8Matrix3d_9__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_Matrix3d[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_8Matrix3d_13fromPointer, METH_O, __pyx_doc_4rbdl_8Matrix3d_12fromPointer},
  {"fromPythonArray", (PyCFunction)__pyx_pw_4rbdl_8Matrix3d_15fromPythonArray, METH_O, __pyx_doc_4rbdl_8Matrix3d_14fromPythonArray},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_8Matrix3d_17__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_8Matrix3d_16__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_8Matrix3d_19__setstate_cython__, METH_O, __pyx_doc_4rbdl_8Matrix3d_18__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Matrix3d = {
  __pyx_pw_4rbdl_8Matrix3d_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl_Matrix3d, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Matrix3d = {
  __pyx_pw_4rbdl_8Matrix3d_11__len__, /*mp_length*/
  __pyx_pw_4rbdl_8Matrix3d_7__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl_Matrix3d, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl_Matrix3d = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.Matrix3d", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_Matrix3d), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_Matrix3d, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_8Matrix3d_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Matrix3d, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Matrix3d, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_Matrix3d, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_Matrix3d, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_Matrix3d, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_Matrix3d, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_VectorNd(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_VectorNd *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_VectorNd *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_8VectorNd_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_VectorNd(PyObject *o) {
  struct __pyx_obj_4rbdl_VectorNd *p = (struct __pyx_obj_4rbdl_VectorNd *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_8VectorNd_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_VectorNd(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_VectorNd *p = (struct __pyx_obj_4rbdl_VectorNd *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_VectorNd(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_VectorNd *p = (struct __pyx_obj_4rbdl_VectorNd *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_4rbdl_VectorNd(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl_VectorNd(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_8VectorNd_7__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_VectorNd[] = {
  {"toNumpy", (PyCFunction)__pyx_pw_4rbdl_8VectorNd_11toNumpy, METH_NOARGS, __pyx_doc_4rbdl_8VectorNd_10toNumpy},
  {"fromPythonArray", (PyCFunction)__pyx_pw_4rbdl_8VectorNd_13fromPythonArray, METH_O, __pyx_doc_4rbdl_8VectorNd_12fromPythonArray},
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_8VectorNd_15fromPointer, METH_O, __pyx_doc_4rbdl_8VectorNd_14fromPointer},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_8VectorNd_17__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_8VectorNd_16__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_8VectorNd_19__setstate_cython__, METH_O, __pyx_doc_4rbdl_8VectorNd_18__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_VectorNd = {
  __pyx_pw_4rbdl_8VectorNd_9__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl_VectorNd, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_VectorNd = {
  __pyx_pw_4rbdl_8VectorNd_9__len__, /*mp_length*/
  __pyx_pw_4rbdl_8VectorNd_5__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl_VectorNd, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl_VectorNd = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.VectorNd", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_VectorNd), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_VectorNd, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_VectorNd, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_VectorNd, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_VectorNd, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_VectorNd, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_VectorNd, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_VectorNd, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_Quaternion(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_Quaternion *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_Quaternion *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_10Quaternion_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_Quaternion(PyObject *o) {
  struct __pyx_obj_4rbdl_Quaternion *p = (struct __pyx_obj_4rbdl_Quaternion *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_10Quaternion_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_Quaternion(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_Quaternion *p = (struct __pyx_obj_4rbdl_Quaternion *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_Quaternion(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_Quaternion *p = (struct __pyx_obj_4rbdl_Quaternion *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_4rbdl_Quaternion(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl_Quaternion(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_10Quaternion_9__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_Quaternion[] = {
  {"toMatrix", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_13toMatrix, METH_NOARGS, __pyx_doc_4rbdl_10Quaternion_12toMatrix},
  {"toNumpy", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_15toNumpy, METH_NOARGS, __pyx_doc_4rbdl_10Quaternion_14toNumpy},
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_17fromPointer, METH_O, __pyx_doc_4rbdl_10Quaternion_16fromPointer},
  {"fromPythonArray", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_19fromPythonArray, METH_O, __pyx_doc_4rbdl_10Quaternion_18fromPythonArray},
  {"fromPythonMatrix", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_21fromPythonMatrix, METH_O, __pyx_doc_4rbdl_10Quaternion_20fromPythonMatrix},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_23__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_10Quaternion_22__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_10Quaternion_25__setstate_cython__, METH_O, __pyx_doc_4rbdl_10Quaternion_24__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Quaternion = {
  __pyx_pw_4rbdl_10Quaternion_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl_Quaternion, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Quaternion = {
  __pyx_pw_4rbdl_10Quaternion_11__len__, /*mp_length*/
  __pyx_pw_4rbdl_10Quaternion_7__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl_Quaternion, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl_Quaternion = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.Quaternion", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_Quaternion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_Quaternion, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_10Quaternion_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Quaternion, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Quaternion, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_Quaternion, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_Quaternion, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_Quaternion, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_Quaternion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_SpatialVector(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_SpatialVector *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_SpatialVector *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_13SpatialVector_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_SpatialVector(PyObject *o) {
  struct __pyx_obj_4rbdl_SpatialVector *p = (struct __pyx_obj_4rbdl_SpatialVector *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_13SpatialVector_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_SpatialVector(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_SpatialVector *p = (struct __pyx_obj_4rbdl_SpatialVector *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_SpatialVector(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_SpatialVector *p = (struct __pyx_obj_4rbdl_SpatialVector *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_4rbdl_SpatialVector(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl_SpatialVector(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_13SpatialVector_9__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_SpatialVector[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_13SpatialVector_13fromPointer, METH_O, __pyx_doc_4rbdl_13SpatialVector_12fromPointer},
  {"fromPythonArray", (PyCFunction)__pyx_pw_4rbdl_13SpatialVector_15fromPythonArray, METH_O, __pyx_doc_4rbdl_13SpatialVector_14fromPythonArray},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_13SpatialVector_17__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_13SpatialVector_16__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_13SpatialVector_19__setstate_cython__, METH_O, __pyx_doc_4rbdl_13SpatialVector_18__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_SpatialVector = {
  __pyx_pw_4rbdl_13SpatialVector_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl_SpatialVector, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SpatialVector = {
  __pyx_pw_4rbdl_13SpatialVector_11__len__, /*mp_length*/
  __pyx_pw_4rbdl_13SpatialVector_7__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl_SpatialVector, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl_SpatialVector = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.SpatialVector", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_SpatialVector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_SpatialVector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_13SpatialVector_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_SpatialVector, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SpatialVector, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_SpatialVector, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_SpatialVector, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_SpatialVector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_SpatialVector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_SpatialMatrix(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_SpatialMatrix *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_SpatialMatrix *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_13SpatialMatrix_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_SpatialMatrix(PyObject *o) {
  struct __pyx_obj_4rbdl_SpatialMatrix *p = (struct __pyx_obj_4rbdl_SpatialMatrix *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_13SpatialMatrix_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_SpatialMatrix(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_SpatialMatrix *p = (struct __pyx_obj_4rbdl_SpatialMatrix *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_SpatialMatrix(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_SpatialMatrix *p = (struct __pyx_obj_4rbdl_SpatialMatrix *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_4rbdl_SpatialMatrix(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl_SpatialMatrix(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_13SpatialMatrix_9__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_SpatialMatrix[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_13SpatialMatrix_13fromPointer, METH_O, __pyx_doc_4rbdl_13SpatialMatrix_12fromPointer},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_13SpatialMatrix_15__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_13SpatialMatrix_14__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_13SpatialMatrix_17__setstate_cython__, METH_O, __pyx_doc_4rbdl_13SpatialMatrix_16__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_SpatialMatrix = {
  __pyx_pw_4rbdl_13SpatialMatrix_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl_SpatialMatrix, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SpatialMatrix = {
  __pyx_pw_4rbdl_13SpatialMatrix_11__len__, /*mp_length*/
  __pyx_pw_4rbdl_13SpatialMatrix_7__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl_SpatialMatrix, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl_SpatialMatrix = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.SpatialMatrix", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_SpatialMatrix), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_SpatialMatrix, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_13SpatialMatrix_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_SpatialMatrix, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SpatialMatrix, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_SpatialMatrix, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_SpatialMatrix, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_SpatialMatrix, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_SpatialMatrix, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_SpatialTransform(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_SpatialTransform *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_SpatialTransform *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_16SpatialTransform_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_SpatialTransform(PyObject *o) {
  struct __pyx_obj_4rbdl_SpatialTransform *p = (struct __pyx_obj_4rbdl_SpatialTransform *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_16SpatialTransform_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_SpatialTransform(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_SpatialTransform *p = (struct __pyx_obj_4rbdl_SpatialTransform *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_SpatialTransform(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_SpatialTransform *p = (struct __pyx_obj_4rbdl_SpatialTransform *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_16SpatialTransform_E(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_16SpatialTransform_1E_1__get__(o);
}

static int __pyx_setprop_4rbdl_16SpatialTransform_E(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_16SpatialTransform_1E_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_16SpatialTransform_r(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_16SpatialTransform_1r_1__get__(o);
}

static int __pyx_setprop_4rbdl_16SpatialTransform_r(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_16SpatialTransform_1r_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_SpatialTransform[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_16SpatialTransform_7fromPointer, METH_O, __pyx_doc_4rbdl_16SpatialTransform_6fromPointer},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_16SpatialTransform_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_16SpatialTransform_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_16SpatialTransform_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_16SpatialTransform_10__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_SpatialTransform[] = {
  {(char *)"E", __pyx_getprop_4rbdl_16SpatialTransform_E, __pyx_setprop_4rbdl_16SpatialTransform_E, (char *)" Rotational part of the SpatialTransform. ", 0},
  {(char *)"r", __pyx_getprop_4rbdl_16SpatialTransform_r, __pyx_setprop_4rbdl_16SpatialTransform_r, (char *)" Translational part of the SpatialTransform. ", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_SpatialTransform = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.SpatialTransform", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_SpatialTransform), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_SpatialTransform, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_16SpatialTransform_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_SpatialTransform, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_SpatialTransform, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_SpatialTransform, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_SpatialTransform, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_SpatialTransform, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_SpatialRigidBodyInertia(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_23SpatialRigidBodyInertia_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_SpatialRigidBodyInertia(PyObject *o) {
  struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *p = (struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_SpatialRigidBodyInertia(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *p = (struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_SpatialRigidBodyInertia(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *p = (struct __pyx_obj_4rbdl_SpatialRigidBodyInertia *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_m(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1m_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_m(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1m_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_h(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1h_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_h(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_1h_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Ixx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Ixx_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Ixx(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Ixx_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Iyx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyx_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Iyx(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyx_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Iyy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyy_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Iyy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Iyy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Izx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izx_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Izx(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izx_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Izy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izy_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Izy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Izz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izz_1__get__(o);
}

static int __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Izz(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_23SpatialRigidBodyInertia_3Izz_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_SpatialRigidBodyInertia[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_23SpatialRigidBodyInertia_7fromPointer, METH_O, __pyx_doc_4rbdl_23SpatialRigidBodyInertia_6fromPointer},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_23SpatialRigidBodyInertia_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_23SpatialRigidBodyInertia_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_23SpatialRigidBodyInertia_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_23SpatialRigidBodyInertia_10__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_SpatialRigidBodyInertia[] = {
  {(char *)"m", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_m, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_m, (char *)0, 0},
  {(char *)"h", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_h, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_h, (char *)" Translational part of the SpatialRigidBodyInertia. ", 0},
  {(char *)"Ixx", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Ixx, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Ixx, (char *)0, 0},
  {(char *)"Iyx", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Iyx, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Iyx, (char *)0, 0},
  {(char *)"Iyy", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Iyy, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Iyy, (char *)0, 0},
  {(char *)"Izx", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Izx, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Izx, (char *)0, 0},
  {(char *)"Izy", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Izy, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Izy, (char *)0, 0},
  {(char *)"Izz", __pyx_getprop_4rbdl_23SpatialRigidBodyInertia_Izz, __pyx_setprop_4rbdl_23SpatialRigidBodyInertia_Izz, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_SpatialRigidBodyInertia = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.SpatialRigidBodyInertia", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_SpatialRigidBodyInertia), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_SpatialRigidBodyInertia, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_23SpatialRigidBodyInertia_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_SpatialRigidBodyInertia, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_SpatialRigidBodyInertia, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_SpatialRigidBodyInertia, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_SpatialRigidBodyInertia, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_SpatialRigidBodyInertia, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_Body(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_Body *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_Body *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_4Body_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_Body(PyObject *o) {
  struct __pyx_obj_4rbdl_Body *p = (struct __pyx_obj_4rbdl_Body *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_4Body_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_Body(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_Body *p = (struct __pyx_obj_4rbdl_Body *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_Body(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_Body *p = (struct __pyx_obj_4rbdl_Body *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_4Body_mMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_4Body_5mMass_1__get__(o);
}

static int __pyx_setprop_4rbdl_4Body_mMass(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_4Body_5mMass_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_4Body_mCenterOfMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_4Body_13mCenterOfMass_1__get__(o);
}

static int __pyx_setprop_4rbdl_4Body_mCenterOfMass(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_4Body_13mCenterOfMass_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_4Body_mInertia(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_4Body_8mInertia_1__get__(o);
}

static int __pyx_setprop_4rbdl_4Body_mInertia(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_4Body_8mInertia_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_4Body_mIsVirtual(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_4Body_10mIsVirtual_1__get__(o);
}

static int __pyx_setprop_4rbdl_4Body_mIsVirtual(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_4Body_10mIsVirtual_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_Body[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_4Body_7fromPointer, METH_O, __pyx_doc_4rbdl_4Body_6fromPointer},
  {"fromMassComInertia", (PyCFunction)__pyx_pw_4rbdl_4Body_9fromMassComInertia, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_4Body_8fromMassComInertia},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_4Body_11__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_4Body_10__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_4Body_13__setstate_cython__, METH_O, __pyx_doc_4rbdl_4Body_12__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_Body[] = {
  {(char *)"mMass", __pyx_getprop_4rbdl_4Body_mMass, __pyx_setprop_4rbdl_4Body_mMass, (char *)0, 0},
  {(char *)"mCenterOfMass", __pyx_getprop_4rbdl_4Body_mCenterOfMass, __pyx_setprop_4rbdl_4Body_mCenterOfMass, (char *)0, 0},
  {(char *)"mInertia", __pyx_getprop_4rbdl_4Body_mInertia, __pyx_setprop_4rbdl_4Body_mInertia, (char *)0, 0},
  {(char *)"mIsVirtual", __pyx_getprop_4rbdl_4Body_mIsVirtual, __pyx_setprop_4rbdl_4Body_mIsVirtual, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_Body = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.Body", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_Body), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_Body, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_4Body_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_Body, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_Body, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_Body, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_Body, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_Body, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_FixedBody(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_FixedBody *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_FixedBody *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_9FixedBody_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_FixedBody(PyObject *o) {
  struct __pyx_obj_4rbdl_FixedBody *p = (struct __pyx_obj_4rbdl_FixedBody *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_9FixedBody_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_FixedBody(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_FixedBody *p = (struct __pyx_obj_4rbdl_FixedBody *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_FixedBody(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_FixedBody *p = (struct __pyx_obj_4rbdl_FixedBody *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_9FixedBody_mMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_9FixedBody_5mMass_1__get__(o);
}

static int __pyx_setprop_4rbdl_9FixedBody_mMass(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_9FixedBody_5mMass_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_9FixedBody_mCenterOfMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_9FixedBody_13mCenterOfMass_1__get__(o);
}

static int __pyx_setprop_4rbdl_9FixedBody_mCenterOfMass(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_9FixedBody_13mCenterOfMass_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_9FixedBody_mInertia(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_9FixedBody_8mInertia_1__get__(o);
}

static int __pyx_setprop_4rbdl_9FixedBody_mInertia(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_9FixedBody_8mInertia_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl_FixedBody[] = {
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_9FixedBody_7fromPointer, METH_O, __pyx_doc_4rbdl_9FixedBody_6fromPointer},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_9FixedBody_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_9FixedBody_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_9FixedBody_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_9FixedBody_10__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_FixedBody[] = {
  {(char *)"mMass", __pyx_getprop_4rbdl_9FixedBody_mMass, __pyx_setprop_4rbdl_9FixedBody_mMass, (char *)0, 0},
  {(char *)"mCenterOfMass", __pyx_getprop_4rbdl_9FixedBody_mCenterOfMass, __pyx_setprop_4rbdl_9FixedBody_mCenterOfMass, (char *)0, 0},
  {(char *)"mInertia", __pyx_getprop_4rbdl_9FixedBody_mInertia, __pyx_setprop_4rbdl_9FixedBody_mInertia, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_FixedBody = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.FixedBody", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_FixedBody), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_FixedBody, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_9FixedBody_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_FixedBody, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_FixedBody, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_FixedBody, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_FixedBody, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_FixedBody, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_Joint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4rbdl_Joint *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_Joint *)o);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_5Joint_3__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_Joint(PyObject *o) {
  struct __pyx_obj_4rbdl_Joint *p = (struct __pyx_obj_4rbdl_Joint *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_5Joint_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->free_on_dealloc);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_Joint(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_Joint *p = (struct __pyx_obj_4rbdl_Joint *)o;
  if (p->free_on_dealloc) {
    e = (*v)(p->free_on_dealloc, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_Joint(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_Joint *p = (struct __pyx_obj_4rbdl_Joint *)o;
  tmp = ((PyObject*)p->free_on_dealloc);
  p->free_on_dealloc = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_5Joint_mDoFCount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Joint_9mDoFCount_1__get__(o);
}

static int __pyx_setprop_4rbdl_5Joint_mDoFCount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_5Joint_9mDoFCount_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_5Joint_mJointType(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Joint_10mJointType_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Joint_q_index(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Joint_7q_index_1__get__(o);
}

static PyMethodDef __pyx_methods_4rbdl_Joint[] = {
  {"_joint_type_from_str", (PyCFunction)__pyx_pw_4rbdl_5Joint_1_joint_type_from_str, METH_O, __pyx_doc_4rbdl_5Joint__joint_type_from_str},
  {"fromPointer", (PyCFunction)__pyx_pw_4rbdl_5Joint_9fromPointer, METH_O, __pyx_doc_4rbdl_5Joint_8fromPointer},
  {"fromJointType", (PyCFunction)__pyx_pw_4rbdl_5Joint_11fromJointType, METH_O, __pyx_doc_4rbdl_5Joint_10fromJointType},
  {"fromJointAxes", (PyCFunction)__pyx_pw_4rbdl_5Joint_13fromJointAxes, METH_O, __pyx_doc_4rbdl_5Joint_12fromJointAxes},
  {"getJointAxis", (PyCFunction)__pyx_pw_4rbdl_5Joint_15getJointAxis, METH_O, __pyx_doc_4rbdl_5Joint_14getJointAxis},
  {"setJointAxis", (PyCFunction)__pyx_pw_4rbdl_5Joint_17setJointAxis, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_5Joint_16setJointAxis},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_5Joint_19__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_5Joint_18__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_5Joint_21__setstate_cython__, METH_O, __pyx_doc_4rbdl_5Joint_20__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_Joint[] = {
  {(char *)"mDoFCount", __pyx_getprop_4rbdl_5Joint_mDoFCount, __pyx_setprop_4rbdl_5Joint_mDoFCount, (char *)0, 0},
  {(char *)"mJointType", __pyx_getprop_4rbdl_5Joint_mJointType, 0, (char *)0, 0},
  {(char *)"q_index", __pyx_getprop_4rbdl_5Joint_q_index, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_Joint = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.Joint", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_Joint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_Joint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_5Joint_7__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_Joint, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_Joint, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_Joint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_Joint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_Joint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_Model(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_4rbdl_Model *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_Model *)o);
  p->v = ((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->a = ((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->mJoints = ((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->S = ((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->X_J = ((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->v_J = ((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->c_J = ((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->X_T = ((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->c = ((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->IA = ((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->pA = ((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->U = ((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->f = ((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->I = ((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->Ic = ((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->hc = ((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->X_lambda = ((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->X_base = ((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->mFixedBodies = ((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->mBodies = ((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_5Model_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_Model(PyObject *o) {
  struct __pyx_obj_4rbdl_Model *p = (struct __pyx_obj_4rbdl_Model *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_5Model_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->v);
  Py_CLEAR(p->a);
  Py_CLEAR(p->mJoints);
  Py_CLEAR(p->S);
  Py_CLEAR(p->X_J);
  Py_CLEAR(p->v_J);
  Py_CLEAR(p->c_J);
  Py_CLEAR(p->X_T);
  Py_CLEAR(p->c);
  Py_CLEAR(p->IA);
  Py_CLEAR(p->pA);
  Py_CLEAR(p->U);
  Py_CLEAR(p->f);
  Py_CLEAR(p->I);
  Py_CLEAR(p->Ic);
  Py_CLEAR(p->hc);
  Py_CLEAR(p->X_lambda);
  Py_CLEAR(p->X_base);
  Py_CLEAR(p->mFixedBodies);
  Py_CLEAR(p->mBodies);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_Model(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_Model *p = (struct __pyx_obj_4rbdl_Model *)o;
  if (p->v) {
    e = (*v)(((PyObject *)p->v), a); if (e) return e;
  }
  if (p->a) {
    e = (*v)(((PyObject *)p->a), a); if (e) return e;
  }
  if (p->mJoints) {
    e = (*v)(((PyObject *)p->mJoints), a); if (e) return e;
  }
  if (p->S) {
    e = (*v)(((PyObject *)p->S), a); if (e) return e;
  }
  if (p->X_J) {
    e = (*v)(((PyObject *)p->X_J), a); if (e) return e;
  }
  if (p->v_J) {
    e = (*v)(((PyObject *)p->v_J), a); if (e) return e;
  }
  if (p->c_J) {
    e = (*v)(((PyObject *)p->c_J), a); if (e) return e;
  }
  if (p->X_T) {
    e = (*v)(((PyObject *)p->X_T), a); if (e) return e;
  }
  if (p->c) {
    e = (*v)(((PyObject *)p->c), a); if (e) return e;
  }
  if (p->IA) {
    e = (*v)(((PyObject *)p->IA), a); if (e) return e;
  }
  if (p->pA) {
    e = (*v)(((PyObject *)p->pA), a); if (e) return e;
  }
  if (p->U) {
    e = (*v)(((PyObject *)p->U), a); if (e) return e;
  }
  if (p->f) {
    e = (*v)(((PyObject *)p->f), a); if (e) return e;
  }
  if (p->I) {
    e = (*v)(((PyObject *)p->I), a); if (e) return e;
  }
  if (p->Ic) {
    e = (*v)(((PyObject *)p->Ic), a); if (e) return e;
  }
  if (p->hc) {
    e = (*v)(((PyObject *)p->hc), a); if (e) return e;
  }
  if (p->X_lambda) {
    e = (*v)(((PyObject *)p->X_lambda), a); if (e) return e;
  }
  if (p->X_base) {
    e = (*v)(((PyObject *)p->X_base), a); if (e) return e;
  }
  if (p->mFixedBodies) {
    e = (*v)(((PyObject *)p->mFixedBodies), a); if (e) return e;
  }
  if (p->mBodies) {
    e = (*v)(((PyObject *)p->mBodies), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_Model(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_Model *p = (struct __pyx_obj_4rbdl_Model *)o;
  tmp = ((PyObject*)p->v);
  p->v = ((struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->a);
  p->a = ((struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->mJoints);
  p->mJoints = ((struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->S);
  p->S = ((struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->X_J);
  p->X_J = ((struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->v_J);
  p->v_J = ((struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->c_J);
  p->c_J = ((struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->X_T);
  p->X_T = ((struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->c);
  p->c = ((struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->IA);
  p->IA = ((struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->pA);
  p->pA = ((struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->U);
  p->U = ((struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->f);
  p->f = ((struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->I);
  p->I = ((struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->Ic);
  p->Ic = ((struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hc);
  p->hc = ((struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->X_lambda);
  p->X_lambda = ((struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->X_base);
  p->X_base = ((struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->mFixedBodies);
  p->mFixedBodies = ((struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->mBodies);
  p->mBodies = ((struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_5Model_dof_count(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_9dof_count_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_q_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_6q_size_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_qdot_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_9qdot_size_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_previously_added_body_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_24previously_added_body_id_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_gravity(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_7gravity_1__get__(o);
}

static int __pyx_setprop_4rbdl_5Model_gravity(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4rbdl_5Model_7gravity_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4rbdl_5Model_v(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1v_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_a(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1a_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_mJoints(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_7mJoints_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_S(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1S_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_X_J(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_3X_J_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_v_J(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_3v_J_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_c_J(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_3c_J_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_mJointUpdateOrder(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_17mJointUpdateOrder_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_X_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_3X_T_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_mFixedJointCount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_16mFixedJointCount_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_multdof3_w_index(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_16multdof3_w_index_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_c(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1c_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_IA(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_2IA_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_pA(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_2pA_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_U(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1U_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_f(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1f_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_I(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_1I_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_Ic(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_2Ic_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_hc(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_2hc_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_X_lambda(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_8X_lambda_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_X_base(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_6X_base_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_mFixedBodies(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_12mFixedBodies_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_fixed_body_discriminator(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_24fixed_body_discriminator_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_5Model_mBodies(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_5Model_7mBodies_1__get__(o);
}

static PyMethodDef __pyx_methods_4rbdl_Model[] = {
  {"AddBody", (PyCFunction)__pyx_pw_4rbdl_5Model_7AddBody, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_5Model_6AddBody},
  {"AppendBody", (PyCFunction)__pyx_pw_4rbdl_5Model_9AppendBody, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_5Model_8AppendBody},
  {"SetQuaternion", (PyCFunction)__pyx_pw_4rbdl_5Model_11SetQuaternion, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_5Model_10SetQuaternion},
  {"GetQuaternion", (PyCFunction)__pyx_pw_4rbdl_5Model_13GetQuaternion, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_5Model_12GetQuaternion},
  {"GetBody", (PyCFunction)__pyx_pw_4rbdl_5Model_15GetBody, METH_O, __pyx_doc_4rbdl_5Model_14GetBody},
  {"GetParentBodyId", (PyCFunction)__pyx_pw_4rbdl_5Model_17GetParentBodyId, METH_O, __pyx_doc_4rbdl_5Model_16GetParentBodyId},
  {"GetBodyId", (PyCFunction)__pyx_pw_4rbdl_5Model_19GetBodyId, METH_O, __pyx_doc_4rbdl_5Model_18GetBodyId},
  {"GetBodyName", (PyCFunction)__pyx_pw_4rbdl_5Model_21GetBodyName, METH_O, __pyx_doc_4rbdl_5Model_20GetBodyName},
  {"IsBodyId", (PyCFunction)__pyx_pw_4rbdl_5Model_23IsBodyId, METH_O, __pyx_doc_4rbdl_5Model_22IsBodyId},
  {"IsFixedBodyId", (PyCFunction)__pyx_pw_4rbdl_5Model_25IsFixedBodyId, METH_O, __pyx_doc_4rbdl_5Model_24IsFixedBodyId},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_5Model_27__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_5Model_26__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_5Model_29__setstate_cython__, METH_O, __pyx_doc_4rbdl_5Model_28__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_Model[] = {
  {(char *)"dof_count", __pyx_getprop_4rbdl_5Model_dof_count, 0, (char *)0, 0},
  {(char *)"q_size", __pyx_getprop_4rbdl_5Model_q_size, 0, (char *)0, 0},
  {(char *)"qdot_size", __pyx_getprop_4rbdl_5Model_qdot_size, 0, (char *)0, 0},
  {(char *)"previously_added_body_id", __pyx_getprop_4rbdl_5Model_previously_added_body_id, 0, (char *)0, 0},
  {(char *)"gravity", __pyx_getprop_4rbdl_5Model_gravity, __pyx_setprop_4rbdl_5Model_gravity, (char *)0, 0},
  {(char *)"v", __pyx_getprop_4rbdl_5Model_v, 0, (char *)0, 0},
  {(char *)"a", __pyx_getprop_4rbdl_5Model_a, 0, (char *)0, 0},
  {(char *)"mJoints", __pyx_getprop_4rbdl_5Model_mJoints, 0, (char *)0, 0},
  {(char *)"S", __pyx_getprop_4rbdl_5Model_S, 0, (char *)0, 0},
  {(char *)"X_J", __pyx_getprop_4rbdl_5Model_X_J, 0, (char *)0, 0},
  {(char *)"v_J", __pyx_getprop_4rbdl_5Model_v_J, 0, (char *)0, 0},
  {(char *)"c_J", __pyx_getprop_4rbdl_5Model_c_J, 0, (char *)0, 0},
  {(char *)"mJointUpdateOrder", __pyx_getprop_4rbdl_5Model_mJointUpdateOrder, 0, (char *)0, 0},
  {(char *)"X_T", __pyx_getprop_4rbdl_5Model_X_T, 0, (char *)0, 0},
  {(char *)"mFixedJointCount", __pyx_getprop_4rbdl_5Model_mFixedJointCount, 0, (char *)0, 0},
  {(char *)"multdof3_w_index", __pyx_getprop_4rbdl_5Model_multdof3_w_index, 0, (char *)0, 0},
  {(char *)"c", __pyx_getprop_4rbdl_5Model_c, 0, (char *)0, 0},
  {(char *)"IA", __pyx_getprop_4rbdl_5Model_IA, 0, (char *)0, 0},
  {(char *)"pA", __pyx_getprop_4rbdl_5Model_pA, 0, (char *)0, 0},
  {(char *)"U", __pyx_getprop_4rbdl_5Model_U, 0, (char *)0, 0},
  {(char *)"f", __pyx_getprop_4rbdl_5Model_f, 0, (char *)0, 0},
  {(char *)"I", __pyx_getprop_4rbdl_5Model_I, 0, (char *)0, 0},
  {(char *)"Ic", __pyx_getprop_4rbdl_5Model_Ic, 0, (char *)0, 0},
  {(char *)"hc", __pyx_getprop_4rbdl_5Model_hc, 0, (char *)0, 0},
  {(char *)"X_lambda", __pyx_getprop_4rbdl_5Model_X_lambda, 0, (char *)0, 0},
  {(char *)"X_base", __pyx_getprop_4rbdl_5Model_X_base, 0, (char *)0, 0},
  {(char *)"mFixedBodies", __pyx_getprop_4rbdl_5Model_mFixedBodies, 0, (char *)0, 0},
  {(char *)"fixed_body_discriminator", __pyx_getprop_4rbdl_5Model_fixed_body_discriminator, 0, (char *)0, 0},
  {(char *)"mBodies", __pyx_getprop_4rbdl_5Model_mBodies, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_Model = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.Model", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_Model), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_Model, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_5Model_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_Model, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_Model, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_Model, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_Model, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_Model, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_v_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_v_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_v_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_v_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_v_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_36_Model_v_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_36_Model_v_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_v_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_v_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_v_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_36_Model_v_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_v_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_v_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_v_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_v_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_v_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_v_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_v_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_v_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_v_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_a_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_a_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_a_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_a_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_a_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_36_Model_a_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_36_Model_a_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_a_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_a_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_a_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_36_Model_a_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_a_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_a_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_a_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_a_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_a_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_a_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_a_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_a_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_a_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_mJoints_Joint_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_mJoints_Joint_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_mJoints_Joint_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_mJoints_Joint_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_mJoints_Joint_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_34_Model_mJoints_Joint_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_34_Model_mJoints_Joint_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_mJoints_Joint_VectorWrapper = {
  __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_mJoints_Joint_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_mJoints_Joint_VectorWrapper = {
  __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_34_Model_mJoints_Joint_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_mJoints_Joint_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_mJoints_Joint_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_mJoints_Joint_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_mJoints_Joint_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_mJoints_Joint_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_mJoints_Joint_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_mJoints_Joint_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_mJoints_Joint_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_mJoints_Joint_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_S_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_S_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_S_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_S_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_S_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_36_Model_S_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_36_Model_S_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_S_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_S_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_S_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_36_Model_S_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_S_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_S_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_S_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_S_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_S_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_S_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_S_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_S_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_S_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_X_J_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_X_J_SpatialTransform_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_X_J_SpatialTransform_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_X_J_SpatialTransform_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_X_J_SpatialTransform_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_X_J_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_X_J_SpatialTransform_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_X_J_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_41_Model_X_J_SpatialTransform_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_X_J_SpatialTransform_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_X_J_SpatialTransform_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_X_J_SpatialTransform_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_X_J_SpatialTransform_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_X_J_SpatialTransform_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_X_J_SpatialTransform_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_X_J_SpatialTransform_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_X_J_SpatialTransform_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_X_J_SpatialTransform_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_v_J_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_v_J_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_v_J_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_v_J_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_v_J_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_v_J_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_v_J_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_v_J_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_38_Model_v_J_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_v_J_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_v_J_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_v_J_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_v_J_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_v_J_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_v_J_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_v_J_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_v_J_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_v_J_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_c_J_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_c_J_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_c_J_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_c_J_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_c_J_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_c_J_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_c_J_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_c_J_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_38_Model_c_J_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_c_J_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_c_J_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_c_J_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_c_J_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_c_J_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_c_J_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_c_J_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_c_J_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_c_J_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_X_T_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_X_T_SpatialTransform_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_X_T_SpatialTransform_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_X_T_SpatialTransform_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_X_T_SpatialTransform_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_X_T_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_X_T_SpatialTransform_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_X_T_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_41_Model_X_T_SpatialTransform_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_X_T_SpatialTransform_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_X_T_SpatialTransform_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_X_T_SpatialTransform_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_X_T_SpatialTransform_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_X_T_SpatialTransform_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_X_T_SpatialTransform_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_X_T_SpatialTransform_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_X_T_SpatialTransform_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_X_T_SpatialTransform_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_c_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_c_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_c_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_c_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_c_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_36_Model_c_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_36_Model_c_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_c_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_c_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_c_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_36_Model_c_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_c_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_c_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_c_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_c_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_c_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_c_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_c_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_c_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_c_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_IA_SpatialMatrix_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_IA_SpatialMatrix_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_IA_SpatialMatrix_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_IA_SpatialMatrix_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_IA_SpatialMatrix_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_IA_SpatialMatrix_VectorWrapper = {
  __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_IA_SpatialMatrix_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_IA_SpatialMatrix_VectorWrapper = {
  __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_37_Model_IA_SpatialMatrix_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_IA_SpatialMatrix_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_IA_SpatialMatrix_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_IA_SpatialMatrix_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_IA_SpatialMatrix_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_IA_SpatialMatrix_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_IA_SpatialMatrix_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_IA_SpatialMatrix_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_IA_SpatialMatrix_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_IA_SpatialMatrix_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_pA_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_pA_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_pA_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_pA_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_pA_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_pA_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_pA_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_pA_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_37_Model_pA_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_pA_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_pA_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_pA_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_pA_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_pA_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_pA_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_pA_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_pA_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_pA_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_U_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_U_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_U_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_U_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_U_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_36_Model_U_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_36_Model_U_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_U_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_U_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_U_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_36_Model_U_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_U_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_U_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_U_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_U_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_U_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_U_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_U_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_U_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_U_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_f_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_f_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_f_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_f_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_f_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_36_Model_f_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_36_Model_f_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_f_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_f_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_f_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_36_Model_f_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_f_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_f_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_f_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_f_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_f_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_f_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_f_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_f_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_f_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_I_SpatialRigidBodyInertia_VectorWrapper = {
  __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_I_SpatialRigidBodyInertia_VectorWrapper = {
  __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_46_Model_I_SpatialRigidBodyInertia_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_I_SpatialRigidBodyInertia_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_Ic_SpatialRigidBodyInertia_VectorWrapper = {
  __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_Ic_SpatialRigidBodyInertia_VectorWrapper = {
  __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_47_Model_Ic_SpatialRigidBodyInertia_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_Ic_SpatialRigidBodyInertia_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_hc_SpatialVector_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_hc_SpatialVector_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_hc_SpatialVector_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_hc_SpatialVector_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_hc_SpatialVector_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_hc_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_hc_SpatialVector_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_hc_SpatialVector_VectorWrapper = {
  __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_37_Model_hc_SpatialVector_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_hc_SpatialVector_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_hc_SpatialVector_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_hc_SpatialVector_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_hc_SpatialVector_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_hc_SpatialVector_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_hc_SpatialVector_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_hc_SpatialVector_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_hc_SpatialVector_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_hc_SpatialVector_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_X_lambda_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_X_lambda_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_46_Model_X_lambda_SpatialTransform_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_X_lambda_SpatialTransform_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_X_lambda_SpatialTransform_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_X_lambda_SpatialTransform_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_X_base_SpatialTransform_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_X_base_SpatialTransform_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_X_base_SpatialTransform_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_X_base_SpatialTransform_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_X_base_SpatialTransform_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_X_base_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_X_base_SpatialTransform_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_X_base_SpatialTransform_VectorWrapper = {
  __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_44_Model_X_base_SpatialTransform_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_X_base_SpatialTransform_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_X_base_SpatialTransform_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_X_base_SpatialTransform_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_X_base_SpatialTransform_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_X_base_SpatialTransform_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_X_base_SpatialTransform_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_X_base_SpatialTransform_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_X_base_SpatialTransform_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_X_base_SpatialTransform_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_mFixedBodies_FixedBody_VectorWrapper = {
  __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_mFixedBodies_FixedBody_VectorWrapper = {
  __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_43_Model_mFixedBodies_FixedBody_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_mFixedBodies_FixedBody_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_mFixedBodies_FixedBody_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_mFixedBodies_FixedBody_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__Model_mBodies_Body_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__Model_mBodies_Body_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__Model_mBodies_Body_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__Model_mBodies_Body_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__Model_mBodies_Body_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_33_Model_mBodies_Body_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_33_Model_mBodies_Body_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__Model_mBodies_Body_VectorWrapper = {
  __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__Model_mBodies_Body_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__Model_mBodies_Body_VectorWrapper = {
  __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_33_Model_mBodies_Body_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__Model_mBodies_Body_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__Model_mBodies_Body_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._Model_mBodies_Body_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__Model_mBodies_Body_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__Model_mBodies_Body_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__Model_mBodies_Body_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__Model_mBodies_Body_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__Model_mBodies_Body_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__Model_mBodies_Body_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl_ConstraintSet(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_4rbdl_ConstraintSet *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4rbdl_ConstraintSet *)o);
  p->point = ((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  p->normal = ((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4rbdl_13ConstraintSet_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl_ConstraintSet(PyObject *o) {
  struct __pyx_obj_4rbdl_ConstraintSet *p = (struct __pyx_obj_4rbdl_ConstraintSet *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4rbdl_13ConstraintSet_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->point);
  Py_CLEAR(p->normal);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4rbdl_ConstraintSet(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4rbdl_ConstraintSet *p = (struct __pyx_obj_4rbdl_ConstraintSet *)o;
  if (p->point) {
    e = (*v)(((PyObject *)p->point), a); if (e) return e;
  }
  if (p->normal) {
    e = (*v)(((PyObject *)p->normal), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4rbdl_ConstraintSet(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4rbdl_ConstraintSet *p = (struct __pyx_obj_4rbdl_ConstraintSet *)o;
  tmp = ((PyObject*)p->point);
  p->point = ((struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->normal);
  p->normal = ((struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4rbdl_13ConstraintSet_bound(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_13ConstraintSet_5bound_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_13ConstraintSet_point(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_13ConstraintSet_5point_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_13ConstraintSet_normal(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_13ConstraintSet_6normal_1__get__(o);
}

static PyObject *__pyx_getprop_4rbdl_13ConstraintSet_force(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4rbdl_13ConstraintSet_5force_1__get__(o);
}

static PyMethodDef __pyx_methods_4rbdl_ConstraintSet[] = {
  {"AddContactConstraint", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_7AddContactConstraint, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_13ConstraintSet_6AddContactConstraint},
  {"AddLoopConstraint", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_9AddLoopConstraint, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4rbdl_13ConstraintSet_8AddLoopConstraint},
  {"Bind", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_11Bind, METH_O, __pyx_doc_4rbdl_13ConstraintSet_10Bind},
  {"size", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_13size, METH_NOARGS, __pyx_doc_4rbdl_13ConstraintSet_12size},
  {"clear", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_15clear, METH_NOARGS, __pyx_doc_4rbdl_13ConstraintSet_14clear},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_17__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_13ConstraintSet_16__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_13ConstraintSet_19__setstate_cython__, METH_O, __pyx_doc_4rbdl_13ConstraintSet_18__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4rbdl_ConstraintSet[] = {
  {(char *)"bound", __pyx_getprop_4rbdl_13ConstraintSet_bound, 0, (char *)0, 0},
  {(char *)"point", __pyx_getprop_4rbdl_13ConstraintSet_point, 0, (char *)0, 0},
  {(char *)"normal", __pyx_getprop_4rbdl_13ConstraintSet_normal, 0, (char *)0, 0},
  {(char *)"force", __pyx_getprop_4rbdl_13ConstraintSet_force, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4rbdl_ConstraintSet = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl.ConstraintSet", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl_ConstraintSet), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl_ConstraintSet, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4rbdl_13ConstraintSet_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4rbdl_ConstraintSet, /*tp_traverse*/
  __pyx_tp_clear_4rbdl_ConstraintSet, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl_ConstraintSet, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4rbdl_ConstraintSet, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl_ConstraintSet, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__ConstraintSet_point_Vector3d_VectorWrapper = {
  __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__ConstraintSet_point_Vector3d_VectorWrapper = {
  __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_43_ConstraintSet_point_Vector3d_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._ConstraintSet_point_Vector3d_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__ConstraintSet_point_Vector3d_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__ConstraintSet_point_Vector3d_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_5__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_9__reduce_cython__, METH_NOARGS, __pyx_doc_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_8__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_11__setstate_cython__, METH_O, __pyx_doc_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_10__setstate_cython__},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__ConstraintSet_normal_Vector3d_VectorWrapper = {
  __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__ConstraintSet_normal_Vector3d_VectorWrapper = {
  __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_7__len__, /*mp_length*/
  __pyx_pw_4rbdl_44_ConstraintSet_normal_Vector3d_VectorWrapper_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  "rbdl._ConstraintSet_normal_Vector3d_VectorWrapper", /*tp_name*/
  sizeof(struct __pyx_obj_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__ConstraintSet_normal_Vector3d_VectorWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__ConstraintSet_normal_Vector3d_VectorWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "rbdl",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_CS, __pyx_k_CS, sizeof(__pyx_k_CS), 0, 0, 1, 1},
  {&__pyx_n_s_CalcBaseToBodyCoordinates, __pyx_k_CalcBaseToBodyCoordinates, sizeof(__pyx_k_CalcBaseToBodyCoordinates), 0, 0, 1, 1},
  {&__pyx_n_s_CalcBodySpatialJacobian, __pyx_k_CalcBodySpatialJacobian, sizeof(__pyx_k_CalcBodySpatialJacobian), 0, 0, 1, 1},
  {&__pyx_n_s_CalcBodyToBaseCoordinates, __pyx_k_CalcBodyToBaseCoordinates, sizeof(__pyx_k_CalcBodyToBaseCoordinates), 0, 0, 1, 1},
  {&__pyx_n_s_CalcBodyWorldOrientation, __pyx_k_CalcBodyWorldOrientation, sizeof(__pyx_k_CalcBodyWorldOrientation), 0, 0, 1, 1},
  {&__pyx_n_s_CalcCenterOfMass, __pyx_k_CalcCenterOfMass, sizeof(__pyx_k_CalcCenterOfMass), 0, 0, 1, 1},
  {&__pyx_n_s_CalcPointAcceleration, __pyx_k_CalcPointAcceleration, sizeof(__pyx_k_CalcPointAcceleration), 0, 0, 1, 1},
  {&__pyx_n_s_CalcPointAcceleration6D, __pyx_k_CalcPointAcceleration6D, sizeof(__pyx_k_CalcPointAcceleration6D), 0, 0, 1, 1},
  {&__pyx_n_s_CalcPointJacobian, __pyx_k_CalcPointJacobian, sizeof(__pyx_k_CalcPointJacobian), 0, 0, 1, 1},
  {&__pyx_n_s_CalcPointJacobian6D, __pyx_k_CalcPointJacobian6D, sizeof(__pyx_k_CalcPointJacobian6D), 0, 0, 1, 1},
  {&__pyx_n_s_CalcPointVelocity, __pyx_k_CalcPointVelocity, sizeof(__pyx_k_CalcPointVelocity), 0, 0, 1, 1},
  {&__pyx_n_s_CalcPointVelocity6D, __pyx_k_CalcPointVelocity6D, sizeof(__pyx_k_CalcPointVelocity6D), 0, 0, 1, 1},
  {&__pyx_n_s_CalcZeroMomentPoint, __pyx_k_CalcZeroMomentPoint, sizeof(__pyx_k_CalcZeroMomentPoint), 0, 0, 1, 1},
  {&__pyx_n_s_CompositeRigidBodyAlgorithm, __pyx_k_CompositeRigidBodyAlgorithm, sizeof(__pyx_k_CompositeRigidBodyAlgorithm), 0, 0, 1, 1},
  {&__pyx_kp_s_Error_loading_model, __pyx_k_Error_loading_model, sizeof(__pyx_k_Error_loading_model), 0, 0, 1, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_ForwardDynamics, __pyx_k_ForwardDynamics, sizeof(__pyx_k_ForwardDynamics), 0, 0, 1, 1},
  {&__pyx_n_s_ForwardDynamicsConstraintsDirect, __pyx_k_ForwardDynamicsConstraintsDirect, sizeof(__pyx_k_ForwardDynamicsConstraintsDirect), 0, 0, 1, 1},
  {&__pyx_n_s_G, __pyx_k_G, sizeof(__pyx_k_G), 0, 0, 1, 1},
  {&__pyx_n_s_H, __pyx_k_H, sizeof(__pyx_k_H), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_s_Invalid_JointType, __pyx_k_Invalid_JointType, sizeof(__pyx_k_Invalid_JointType), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_joint_axis_index, __pyx_k_Invalid_joint_axis_index, sizeof(__pyx_k_Invalid_joint_axis_index), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_Body_but_g, __pyx_k_Invalid_type_Expected_Body_but_g, sizeof(__pyx_k_Invalid_type_Expected_Body_but_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_FixedBody, __pyx_k_Invalid_type_Expected_FixedBody, sizeof(__pyx_k_Invalid_type_Expected_FixedBody), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_Joint_but, __pyx_k_Invalid_type_Expected_Joint_but, sizeof(__pyx_k_Invalid_type_Expected_Joint_but), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_SpatialMat, __pyx_k_Invalid_type_Expected_SpatialMat, sizeof(__pyx_k_Invalid_type_Expected_SpatialMat), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_SpatialRig, __pyx_k_Invalid_type_Expected_SpatialRig, sizeof(__pyx_k_Invalid_type_Expected_SpatialRig), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_SpatialTra, __pyx_k_Invalid_type_Expected_SpatialTra, sizeof(__pyx_k_Invalid_type_Expected_SpatialTra), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_SpatialVec, __pyx_k_Invalid_type_Expected_SpatialVec, sizeof(__pyx_k_Invalid_type_Expected_SpatialVec), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_type_Expected_Vector3d_b, __pyx_k_Invalid_type_Expected_Vector3d_b, sizeof(__pyx_k_Invalid_type_Expected_Vector3d_b), 0, 0, 1, 0},
  {&__pyx_n_s_InverseDynamics, __pyx_k_InverseDynamics, sizeof(__pyx_k_InverseDynamics), 0, 0, 1, 1},
  {&__pyx_n_s_JointType1DoF, __pyx_k_JointType1DoF, sizeof(__pyx_k_JointType1DoF), 0, 0, 1, 1},
  {&__pyx_n_s_JointType2DoF, __pyx_k_JointType2DoF, sizeof(__pyx_k_JointType2DoF), 0, 0, 1, 1},
  {&__pyx_n_s_JointType3DoF, __pyx_k_JointType3DoF, sizeof(__pyx_k_JointType3DoF), 0, 0, 1, 1},
  {&__pyx_n_s_JointType4DoF, __pyx_k_JointType4DoF, sizeof(__pyx_k_JointType4DoF), 0, 0, 1, 1},
  {&__pyx_n_s_JointType5DoF, __pyx_k_JointType5DoF, sizeof(__pyx_k_JointType5DoF), 0, 0, 1, 1},
  {&__pyx_n_s_JointType6DoF, __pyx_k_JointType6DoF, sizeof(__pyx_k_JointType6DoF), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeCustom, __pyx_k_JointTypeCustom, sizeof(__pyx_k_JointTypeCustom), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeEulerXYZ, __pyx_k_JointTypeEulerXYZ, sizeof(__pyx_k_JointTypeEulerXYZ), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeEulerYXZ, __pyx_k_JointTypeEulerYXZ, sizeof(__pyx_k_JointTypeEulerYXZ), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeEulerZYX, __pyx_k_JointTypeEulerZYX, sizeof(__pyx_k_JointTypeEulerZYX), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeFixed, __pyx_k_JointTypeFixed, sizeof(__pyx_k_JointTypeFixed), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeFloatingBase, __pyx_k_JointTypeFloatingBase, sizeof(__pyx_k_JointTypeFloatingBase), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeHelical, __pyx_k_JointTypeHelical, sizeof(__pyx_k_JointTypeHelical), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypePrismatic, __pyx_k_JointTypePrismatic, sizeof(__pyx_k_JointTypePrismatic), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeRevolute, __pyx_k_JointTypeRevolute, sizeof(__pyx_k_JointTypeRevolute), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeRevoluteX, __pyx_k_JointTypeRevoluteX, sizeof(__pyx_k_JointTypeRevoluteX), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeRevoluteY, __pyx_k_JointTypeRevoluteY, sizeof(__pyx_k_JointTypeRevoluteY), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeRevoluteZ, __pyx_k_JointTypeRevoluteZ, sizeof(__pyx_k_JointTypeRevoluteZ), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeSpherical, __pyx_k_JointTypeSpherical, sizeof(__pyx_k_JointTypeSpherical), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeTranslationXYZ, __pyx_k_JointTypeTranslationXYZ, sizeof(__pyx_k_JointTypeTranslationXYZ), 0, 0, 1, 1},
  {&__pyx_n_s_JointTypeUndefined, __pyx_k_JointTypeUndefined, sizeof(__pyx_k_JointTypeUndefined), 0, 0, 1, 1},
  {&__pyx_kp_s_Matrix3d_3_4f_3_4f_3_4f, __pyx_k_Matrix3d_3_4f_3_4f_3_4f, sizeof(__pyx_k_Matrix3d_3_4f_3_4f_3_4f), 0, 0, 1, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_NonlinearEffects, __pyx_k_NonlinearEffects, sizeof(__pyx_k_NonlinearEffects), 0, 0, 1, 1},
  {&__pyx_kp_s_Parameter_com_for_call_to_CalcCe, __pyx_k_Parameter_com_for_call_to_CalcCe, sizeof(__pyx_k_Parameter_com_for_call_to_CalcCe), 0, 0, 1, 0},
  {&__pyx_kp_s_Quaternion_3_4f_3_4f_3_4f_3_4, __pyx_k_Quaternion_3_4f_3_4f_3_4f_3_4, sizeof(__pyx_k_Quaternion_3_4f_3_4f_3_4f_3_4), 0, 0, 1, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_kp_s_SpatialMatrix_3_4f_3_4f_3_4f_3_4, __pyx_k_SpatialMatrix_3_4f_3_4f_3_4f_3_4, sizeof(__pyx_k_SpatialMatrix_3_4f_3_4f_3_4f_3_4), 0, 0, 1, 0},
  {&__pyx_kp_s_SpatialTransform_E_3_4f_3_4f_3_4, __pyx_k_SpatialTransform_E_3_4f_3_4f_3_4, sizeof(__pyx_k_SpatialTransform_E_3_4f_3_4f_3_4), 0, 0, 1, 0},
  {&__pyx_kp_s_SpatialVector_3_4f_3_4f_3_4f_3_4, __pyx_k_SpatialVector_3_4f_3_4f_3_4f_3_4, sizeof(__pyx_k_SpatialVector_3_4f_3_4f_3_4f_3_4), 0, 0, 1, 0},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_UpdateKinematics, __pyx_k_UpdateKinematics, sizeof(__pyx_k_UpdateKinematics), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_s_Vector3d_3_4f_3_4f_3_4f, __pyx_k_Vector3d_3_4f_3_4f_3_4f, sizeof(__pyx_k_Vector3d_3_4f_3_4f_3_4f), 0, 0, 1, 0},
  {&__pyx_n_s_X_predecessor, __pyx_k_X_predecessor, sizeof(__pyx_k_X_predecessor), 0, 0, 1, 1},
  {&__pyx_n_s_X_successor, __pyx_k_X_successor, sizeof(__pyx_k_X_successor), 0, 0, 1, 1},
  {&__pyx_kp_s__31, __pyx_k__31, sizeof(__pyx_k__31), 0, 0, 1, 0},
  {&__pyx_kp_s__34, __pyx_k__34, sizeof(__pyx_k__34), 0, 0, 1, 0},
  {&__pyx_kp_b__94, __pyx_k__94, sizeof(__pyx_k__94), 0, 0, 0, 0},
  {&__pyx_n_s_address, __pyx_k_address, sizeof(__pyx_k_address), 0, 0, 1, 1},
  {&__pyx_n_s_angular_momentum, __pyx_k_angular_momentum, sizeof(__pyx_k_angular_momentum), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_axis, __pyx_k_axis, sizeof(__pyx_k_axis), 0, 0, 1, 1},
  {&__pyx_n_s_body, __pyx_k_body, sizeof(__pyx_k_body), 0, 0, 1, 1},
  {&__pyx_n_s_body_id, __pyx_k_body_id, sizeof(__pyx_k_body_id), 0, 0, 1, 1},
  {&__pyx_n_s_body_name, __pyx_k_body_name, sizeof(__pyx_k_body_name), 0, 0, 1, 1},
  {&__pyx_n_s_body_point, __pyx_k_body_point, sizeof(__pyx_k_body_point), 0, 0, 1, 1},
  {&__pyx_n_s_body_point_position, __pyx_k_body_point_position, sizeof(__pyx_k_body_point_position), 0, 0, 1, 1},
  {&__pyx_n_s_c_ang_momentum_ptr, __pyx_k_c_ang_momentum_ptr, sizeof(__pyx_k_c_ang_momentum_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_c_change_of_ang_momentum_ptr, __pyx_k_c_change_of_ang_momentum_ptr, sizeof(__pyx_k_c_change_of_ang_momentum_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_c_com, __pyx_k_c_com, sizeof(__pyx_k_c_com), 0, 0, 1, 1},
  {&__pyx_n_s_c_com_accel_ptr, __pyx_k_c_com_accel_ptr, sizeof(__pyx_k_c_com_accel_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_c_com_vel_ptr, __pyx_k_c_com_vel_ptr, sizeof(__pyx_k_c_com_vel_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_c_normal, __pyx_k_c_normal, sizeof(__pyx_k_c_normal), 0, 0, 1, 1},
  {&__pyx_n_s_c_point, __pyx_k_c_point, sizeof(__pyx_k_c_point), 0, 0, 1, 1},
  {&__pyx_n_s_c_zmp_ptr, __pyx_k_c_zmp_ptr, sizeof(__pyx_k_c_zmp_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_change_of_angular_momentum, __pyx_k_change_of_angular_momentum, sizeof(__pyx_k_change_of_angular_momentum), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_cmass, __pyx_k_cmass, sizeof(__pyx_k_cmass), 0, 0, 1, 1},
  {&__pyx_n_s_com, __pyx_k_com, sizeof(__pyx_k_com), 0, 0, 1, 1},
  {&__pyx_n_s_com_acceleration, __pyx_k_com_acceleration, sizeof(__pyx_k_com_acceleration), 0, 0, 1, 1},
  {&__pyx_n_s_com_velocity, __pyx_k_com_velocity, sizeof(__pyx_k_com_velocity), 0, 0, 1, 1},
  {&__pyx_n_s_constraint_name, __pyx_k_constraint_name, sizeof(__pyx_k_constraint_name), 0, 0, 1, 1},
  {&__pyx_n_s_enable_stabilization, __pyx_k_enable_stabilization, sizeof(__pyx_k_enable_stabilization), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {&__pyx_n_s_floating_base, __pyx_k_floating_base, sizeof(__pyx_k_floating_base), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_fromJointAxes, __pyx_k_fromJointAxes, sizeof(__pyx_k_fromJointAxes), 0, 0, 1, 1},
  {&__pyx_n_s_fromJointType, __pyx_k_fromJointType, sizeof(__pyx_k_fromJointType), 0, 0, 1, 1},
  {&__pyx_n_s_fromMassComInertia, __pyx_k_fromMassComInertia, sizeof(__pyx_k_fromMassComInertia), 0, 0, 1, 1},
  {&__pyx_n_s_fromPointer, __pyx_k_fromPointer, sizeof(__pyx_k_fromPointer), 0, 0, 1, 1},
  {&__pyx_n_s_fromPythonArray, __pyx_k_fromPythonArray, sizeof(__pyx_k_fromPythonArray), 0, 0, 1, 1},
  {&__pyx_n_s_fromPythonMatrix, __pyx_k_fromPythonMatrix, sizeof(__pyx_k_fromPythonMatrix), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_k_home_utec_ros_ws_src_rbdl_pytho, sizeof(__pyx_k_home_utec_ros_ws_src_rbdl_pytho), 0, 0, 1, 0},
  {&__pyx_n_s_id_predecessor, __pyx_k_id_predecessor, sizeof(__pyx_k_id_predecessor), 0, 0, 1, 1},
  {&__pyx_n_s_id_successor, __pyx_k_id_successor, sizeof(__pyx_k_id_successor), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_indices, __pyx_k_indices, sizeof(__pyx_k_indices), 0, 0, 1, 1},
  {&__pyx_n_s_inertia, __pyx_k_inertia, sizeof(__pyx_k_inertia), 0, 0, 1, 1},
  {&__pyx_n_s_iteritems, __pyx_k_iteritems, sizeof(__pyx_k_iteritems), 0, 0, 1, 1},
  {&__pyx_n_s_joint, __pyx_k_joint, sizeof(__pyx_k_joint), 0, 0, 1, 1},
  {&__pyx_n_s_joint_frame, __pyx_k_joint_frame, sizeof(__pyx_k_joint_frame), 0, 0, 1, 1},
  {&__pyx_n_s_joint_type, __pyx_k_joint_type, sizeof(__pyx_k_joint_type), 0, 0, 1, 1},
  {&__pyx_n_s_joint_type_from_str, __pyx_k_joint_type_from_str, sizeof(__pyx_k_joint_type_from_str), 0, 0, 1, 1},
  {&__pyx_n_s_joint_type_map, __pyx_k_joint_type_map, sizeof(__pyx_k_joint_type_map), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
  {&__pyx_n_s_loadModel, __pyx_k_loadModel, sizeof(__pyx_k_loadModel), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mass, __pyx_k_mass, sizeof(__pyx_k_mass), 0, 0, 1, 1},
  {&__pyx_n_s_model, __pyx_k_model, sizeof(__pyx_k_model), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_s_normal, __pyx_k_normal, sizeof(__pyx_k_normal), 0, 0, 1, 1},
  {&__pyx_n_s_normal_acceleration, __pyx_k_normal_acceleration, sizeof(__pyx_k_normal_acceleration), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_parent_id, __pyx_k_parent_id, sizeof(__pyx_k_parent_id), 0, 0, 1, 1},
  {&__pyx_n_s_point, __pyx_k_point, sizeof(__pyx_k_point), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_ptr, __pyx_k_ptr, sizeof(__pyx_k_ptr), 0, 0, 1, 1},
  {&__pyx_n_s_pymatvalues, __pyx_k_pymatvalues, sizeof(__pyx_k_pymatvalues), 0, 0, 1, 1},
  {&__pyx_n_s_pyvalues, __pyx_k_pyvalues, sizeof(__pyx_k_pyvalues), 0, 0, 1, 1},
  {&__pyx_n_s_q, __pyx_k_q, sizeof(__pyx_k_q), 0, 0, 1, 1},
  {&__pyx_n_s_qddot, __pyx_k_qddot, sizeof(__pyx_k_qddot), 0, 0, 1, 1},
  {&__pyx_n_s_qddot_vectornd, __pyx_k_qddot_vectornd, sizeof(__pyx_k_qddot_vectornd), 0, 0, 1, 1},
  {&__pyx_n_s_qdot, __pyx_k_qdot, sizeof(__pyx_k_qdot), 0, 0, 1, 1},
  {&__pyx_n_s_quat, __pyx_k_quat, sizeof(__pyx_k_quat), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rbdl, __pyx_k_rbdl, sizeof(__pyx_k_rbdl), 0, 0, 1, 1},
  {&__pyx_kp_s_rbdl_Body_0x_0x, __pyx_k_rbdl_Body_0x_0x, sizeof(__pyx_k_rbdl_Body_0x_0x), 0, 0, 1, 0},
  {&__pyx_kp_s_rbdl_ConstraintSet_0x_0x, __pyx_k_rbdl_ConstraintSet_0x_0x, sizeof(__pyx_k_rbdl_ConstraintSet_0x_0x), 0, 0, 1, 0},
  {&__pyx_kp_s_rbdl_FixedBody_0x_0x, __pyx_k_rbdl_FixedBody_0x_0x, sizeof(__pyx_k_rbdl_FixedBody_0x_0x), 0, 0, 1, 0},
  {&__pyx_kp_s_rbdl_Joint_0x_0x_JointType_s, __pyx_k_rbdl_Joint_0x_0x_JointType_s, sizeof(__pyx_k_rbdl_Joint_0x_0x_JointType_s), 0, 0, 1, 0},
  {&__pyx_kp_s_rbdl_Model_0x_0x, __pyx_k_rbdl_Model_0x_0x, sizeof(__pyx_k_rbdl_Model_0x_0x), 0, 0, 1, 0},
  {&__pyx_kp_s_rbdl_SpatialRigidBodyInertia_0x, __pyx_k_rbdl_SpatialRigidBodyInertia_0x, sizeof(__pyx_k_rbdl_SpatialRigidBodyInertia_0x), 0, 0, 1, 0},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_result, __pyx_k_result, sizeof(__pyx_k_result), 0, 0, 1, 1},
  {&__pyx_n_s_setJointAxis, __pyx_k_setJointAxis, sizeof(__pyx_k_setJointAxis), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_stabilization_param, __pyx_k_stabilization_param, sizeof(__pyx_k_stabilization_param), 0, 0, 1, 1},
  {&__pyx_n_s_tau, __pyx_k_tau, sizeof(__pyx_k_tau), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_update_kinematics, __pyx_k_update_kinematics, sizeof(__pyx_k_update_kinematics), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_verbose, __pyx_k_verbose, sizeof(__pyx_k_verbose), 0, 0, 1, 1},
  {&__pyx_n_s_world_normal, __pyx_k_world_normal, sizeof(__pyx_k_world_normal), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {&__pyx_n_s_zmp, __pyx_k_zmp, sizeof(__pyx_k_zmp), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 31, __pyx_L1_error)
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) __PYX_ERR(0, 48, __pyx_L1_error)
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) __PYX_ERR(0, 48, __pyx_L1_error)
  #endif
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 806, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(2, 799, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 989, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "rbdl.pyx":472
 *         """ Rotational part of the SpatialTransform. """
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */
  __pyx_tuple__13 = PyTuple_Pack(2, __pyx_int_3, __pyx_int_3); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_tuple__13); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "rbdl.pyx":487
 *         """ Translational part of the SpatialTransform. """
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.r[i]
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "rbdl.pyx":536
 *         """ Translational part of the SpatialRigidBodyInertia. """
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.h[i]
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "rbdl.pyx":664
 *     property mCenterOfMass:
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "rbdl.pyx":676
 *     property mInertia:
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */
  __pyx_tuple__22 = PyTuple_Pack(2, __pyx_int_3, __pyx_int_3); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_tuple__22); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "rbdl.pyx":729
 *     property mCenterOfMass:
 *         def __get__ (self):
 *             result = np.ndarray ((3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 result[i] = self.thisptr.mCenterOfMass[i]
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "rbdl.pyx":741
 *     property mInertia:
 *         def __get__ (self):
 *             result = np.ndarray ((3,3))             # <<<<<<<<<<<<<<
 *             for i in range (3):
 *                 for j in range (3):
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_int_3, __pyx_int_3); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_tuple__27); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__43 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__51 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__52 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__53 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__54 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__55 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__56 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__57 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__58 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__59 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__60 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__62 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__63 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__64 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__65 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__66 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__67 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__69 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__70 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__71 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__72 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__73 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__74 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__77 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__78 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__79 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__80 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__81 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__82 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__83 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__84 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__85 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(2, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__86 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(2, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__87 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(2, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__88 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(2, 799, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__89 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(2, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__90 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(2, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":989
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__91 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(2, 989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":995
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__92 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(2, 995, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);

  /* "../../../../../../../usr/lib/python2.7/dist-packages/Cython/Includes/numpy/__init__.pxd":1001
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__93 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(2, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);

  /* "rbdl.pyx":1876
 * ##############################
 * 
 * def UpdateKinematics(             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */
  __pyx_tuple__95 = PyTuple_Pack(4, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_qddot); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(0, 1876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_UpdateKinematics, 1876, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 1876, __pyx_L1_error)

  /* "rbdl.pyx":1889
 *     )
 * 
 * def CalcBodyToBaseCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_tuple__97 = PyTuple_Pack(5, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 1889, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__97, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcBodyToBaseCoordinates, 1889, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(0, 1889, __pyx_L1_error)

  /* "rbdl.pyx":1902
 *             ))
 * 
 * def CalcBaseToBodyCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_tuple__99 = PyTuple_Pack(5, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__99)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__99);
  __Pyx_GIVEREF(__pyx_tuple__99);
  __pyx_codeobj__100 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__99, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcBaseToBodyCoordinates, 1902, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__100)) __PYX_ERR(0, 1902, __pyx_L1_error)

  /* "rbdl.pyx":1915
 *             ))
 * 
 * def CalcBodyWorldOrientation (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_tuple__101 = PyTuple_Pack(4, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_body_id, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 1915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);
  __pyx_codeobj__102 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__101, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcBodyWorldOrientation, 1915, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__102)) __PYX_ERR(0, 1915, __pyx_L1_error)

  /* "rbdl.pyx":1926
 *             ))
 * 
 * def CalcPointVelocity (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__103 = PyTuple_Pack(6, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);
  __pyx_codeobj__104 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__103, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcPointVelocity, 1926, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__104)) __PYX_ERR(0, 1926, __pyx_L1_error)

  /* "rbdl.pyx":1941
 *             ))
 * 
 * def CalcPointAcceleration (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__105 = PyTuple_Pack(7, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_qddot, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);
  __pyx_codeobj__106 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__105, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcPointAcceleration, 1941, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__106)) __PYX_ERR(0, 1941, __pyx_L1_error)

  /* "rbdl.pyx":1958
 *             ))
 * 
 * def CalcPointVelocity6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__107 = PyTuple_Pack(6, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__107, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcPointVelocity6D, 1958, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(0, 1958, __pyx_L1_error)

  /* "rbdl.pyx":1973
 *             ))
 * 
 * def CalcPointAcceleration6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__109 = PyTuple_Pack(7, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_qddot, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__109)) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__109);
  __Pyx_GIVEREF(__pyx_tuple__109);
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__109, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcPointAcceleration6D, 1973, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(0, 1973, __pyx_L1_error)

  /* "rbdl.pyx":1990
 *             ))
 * 
 * def CalcPointJacobian (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_tuple__111 = PyTuple_Pack(6, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_G, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__111, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcPointJacobian, 1990, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 1990, __pyx_L1_error)

  /* "rbdl.pyx":2005
 *             )
 * 
 * def CalcPointJacobian6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_tuple__113 = PyTuple_Pack(6, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_G, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__113)) __PYX_ERR(0, 2005, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__113);
  __Pyx_GIVEREF(__pyx_tuple__113);
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__113, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcPointJacobian6D, 2005, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(0, 2005, __pyx_L1_error)

  /* "rbdl.pyx":2020
 *             )
 * 
 * def CalcBodySpatialJacobian(Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_tuple__115 = PyTuple_Pack(6, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_body_id, __pyx_n_s_body_point_position, __pyx_n_s_G, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(0, 2020, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__115, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcBodySpatialJacobian, 2020, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 2020, __pyx_L1_error)

  /* "rbdl.pyx":2040
 * ##############################
 * 
 * def CalcCenterOfMass (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__117 = PyTuple_Pack(17, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_qddot, __pyx_n_s_com, __pyx_n_s_com_velocity, __pyx_n_s_com_acceleration, __pyx_n_s_angular_momentum, __pyx_n_s_change_of_angular_momentum, __pyx_n_s_update_kinematics, __pyx_n_s_cmass, __pyx_n_s_c_com, __pyx_n_s_c_com_vel_ptr, __pyx_n_s_c_com_accel_ptr, __pyx_n_s_c_ang_momentum_ptr, __pyx_n_s_c_change_of_ang_momentum_ptr, __pyx_n_s_qddot_vectornd); if (unlikely(!__pyx_tuple__117)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__117);
  __Pyx_GIVEREF(__pyx_tuple__117);
  __pyx_codeobj__118 = (PyObject*)__Pyx_PyCode_New(10, 0, 17, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__117, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcCenterOfMass, 2040, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__118)) __PYX_ERR(0, 2040, __pyx_L1_error)

  /* "rbdl.pyx":2124
 *     return cmass
 * 
 * def CalcZeroMomentPoint (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__119 = PyTuple_Pack(11, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_qddot, __pyx_n_s_zmp, __pyx_n_s_normal, __pyx_n_s_point, __pyx_n_s_update_kinematics, __pyx_n_s_c_normal, __pyx_n_s_c_point, __pyx_n_s_c_zmp_ptr); if (unlikely(!__pyx_tuple__119)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__119);
  __Pyx_GIVEREF(__pyx_tuple__119);
  __pyx_codeobj__120 = (PyObject*)__Pyx_PyCode_New(8, 0, 11, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__119, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CalcZeroMomentPoint, 2124, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__120)) __PYX_ERR(0, 2124, __pyx_L1_error)

  /* "rbdl.pyx":2174
 * ##############################
 * 
 * def InverseDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__121 = PyTuple_Pack(5, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_qddot, __pyx_n_s_tau); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__121, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_InverseDynamics, 2174, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(0, 2174, __pyx_L1_error)

  /* "rbdl.pyx":2187
 *             )
 * 
 * def NonlinearEffects (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__123 = PyTuple_Pack(4, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_tau); if (unlikely(!__pyx_tuple__123)) __PYX_ERR(0, 2187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__123);
  __Pyx_GIVEREF(__pyx_tuple__123);
  __pyx_codeobj__124 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__123, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_NonlinearEffects, 2187, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__124)) __PYX_ERR(0, 2187, __pyx_L1_error)

  /* "rbdl.pyx":2197
 *             )
 * 
 * def CompositeRigidBodyAlgorithm (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=2, mode="c"] H,
 */
  __pyx_tuple__125 = PyTuple_Pack(4, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_H, __pyx_n_s_update_kinematics); if (unlikely(!__pyx_tuple__125)) __PYX_ERR(0, 2197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__125);
  __Pyx_GIVEREF(__pyx_tuple__125);
  __pyx_codeobj__126 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__125, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_CompositeRigidBodyAlgorithm, 2197, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__126)) __PYX_ERR(0, 2197, __pyx_L1_error)

  /* "rbdl.pyx":2206
 *             update_kinematics);
 * 
 * def ForwardDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_tuple__127 = PyTuple_Pack(5, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_tau, __pyx_n_s_qddot); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(0, 2206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__127, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_ForwardDynamics, 2206, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(0, 2206, __pyx_L1_error)

  /* "rbdl.pyx":2224
 * ##############################
 * 
 * def ForwardDynamicsConstraintsDirect (             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */
  __pyx_tuple__129 = PyTuple_Pack(6, __pyx_n_s_model, __pyx_n_s_q, __pyx_n_s_qdot, __pyx_n_s_tau, __pyx_n_s_CS, __pyx_n_s_qddot); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);
  __pyx_codeobj__130 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__129, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_ForwardDynamicsConstraintsDirect, 2224, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__130)) __PYX_ERR(0, 2224, __pyx_L1_error)

  /* "rbdl.pyx":2246
 * ##############################
 * 
 * def loadModel (             # <<<<<<<<<<<<<<
 *         filename,
 *         **kwargs
 */
  __pyx_tuple__131 = PyTuple_Pack(5, __pyx_n_s_filename, __pyx_n_s_kwargs, __pyx_n_s_verbose, __pyx_n_s_floating_base, __pyx_n_s_result); if (unlikely(!__pyx_tuple__131)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__131);
  __Pyx_GIVEREF(__pyx_tuple__131);
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(1, 0, 5, 0, CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__131, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_utec_ros_ws_src_rbdl_pytho, __pyx_n_s_loadModel, 2246, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_keys.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_ = PyFloat_FromDouble(0.); if (unlikely(!__pyx_float_0_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_1 = PyFloat_FromDouble(0.1); if (unlikely(!__pyx_float_0_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initrbdl(void); /*proto*/
PyMODINIT_FUNC initrbdl(void)
#else
PyMODINIT_FUNC PyInit_rbdl(void); /*proto*/
PyMODINIT_FUNC PyInit_rbdl(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_rbdl(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("rbdl", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_rbdl) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "rbdl")) {
      if (unlikely(PyDict_SetItemString(modules, "rbdl", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_4rbdl_Vector3d) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  __pyx_type_4rbdl_Vector3d.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Vector3d", (PyObject *)&__pyx_type_4rbdl_Vector3d) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_Vector3d) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  __pyx_ptype_4rbdl_Vector3d = &__pyx_type_4rbdl_Vector3d;
  if (PyType_Ready(&__pyx_type_4rbdl_Matrix3d) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_type_4rbdl_Matrix3d.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Matrix3d", (PyObject *)&__pyx_type_4rbdl_Matrix3d) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_Matrix3d) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_ptype_4rbdl_Matrix3d = &__pyx_type_4rbdl_Matrix3d;
  if (PyType_Ready(&__pyx_type_4rbdl_VectorNd) < 0) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_type_4rbdl_VectorNd.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "VectorNd", (PyObject *)&__pyx_type_4rbdl_VectorNd) < 0) __PYX_ERR(0, 125, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_VectorNd) < 0) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_ptype_4rbdl_VectorNd = &__pyx_type_4rbdl_VectorNd;
  if (PyType_Ready(&__pyx_type_4rbdl_Quaternion) < 0) __PYX_ERR(0, 181, __pyx_L1_error)
  __pyx_type_4rbdl_Quaternion.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Quaternion", (PyObject *)&__pyx_type_4rbdl_Quaternion) < 0) __PYX_ERR(0, 181, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_Quaternion) < 0) __PYX_ERR(0, 181, __pyx_L1_error)
  __pyx_ptype_4rbdl_Quaternion = &__pyx_type_4rbdl_Quaternion;
  if (PyType_Ready(&__pyx_type_4rbdl_SpatialVector) < 0) __PYX_ERR(0, 261, __pyx_L1_error)
  __pyx_type_4rbdl_SpatialVector.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SpatialVector", (PyObject *)&__pyx_type_4rbdl_SpatialVector) < 0) __PYX_ERR(0, 261, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_SpatialVector) < 0) __PYX_ERR(0, 261, __pyx_L1_error)
  __pyx_ptype_4rbdl_SpatialVector = &__pyx_type_4rbdl_SpatialVector;
  if (PyType_Ready(&__pyx_type_4rbdl_SpatialMatrix) < 0) __PYX_ERR(0, 315, __pyx_L1_error)
  __pyx_type_4rbdl_SpatialMatrix.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SpatialMatrix", (PyObject *)&__pyx_type_4rbdl_SpatialMatrix) < 0) __PYX_ERR(0, 315, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_SpatialMatrix) < 0) __PYX_ERR(0, 315, __pyx_L1_error)
  __pyx_ptype_4rbdl_SpatialMatrix = &__pyx_type_4rbdl_SpatialMatrix;
  if (PyType_Ready(&__pyx_type_4rbdl_SpatialTransform) < 0) __PYX_ERR(0, 446, __pyx_L1_error)
  __pyx_type_4rbdl_SpatialTransform.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SpatialTransform", (PyObject *)&__pyx_type_4rbdl_SpatialTransform) < 0) __PYX_ERR(0, 446, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_SpatialTransform) < 0) __PYX_ERR(0, 446, __pyx_L1_error)
  __pyx_ptype_4rbdl_SpatialTransform = &__pyx_type_4rbdl_SpatialTransform;
  if (PyType_Ready(&__pyx_type_4rbdl_SpatialRigidBodyInertia) < 0) __PYX_ERR(0, 502, __pyx_L1_error)
  __pyx_type_4rbdl_SpatialRigidBodyInertia.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SpatialRigidBodyInertia", (PyObject *)&__pyx_type_4rbdl_SpatialRigidBodyInertia) < 0) __PYX_ERR(0, 502, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_SpatialRigidBodyInertia) < 0) __PYX_ERR(0, 502, __pyx_L1_error)
  __pyx_ptype_4rbdl_SpatialRigidBodyInertia = &__pyx_type_4rbdl_SpatialRigidBodyInertia;
  if (PyType_Ready(&__pyx_type_4rbdl_Body) < 0) __PYX_ERR(0, 594, __pyx_L1_error)
  __pyx_type_4rbdl_Body.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Body", (PyObject *)&__pyx_type_4rbdl_Body) < 0) __PYX_ERR(0, 594, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_Body) < 0) __PYX_ERR(0, 594, __pyx_L1_error)
  __pyx_ptype_4rbdl_Body = &__pyx_type_4rbdl_Body;
  if (PyType_Ready(&__pyx_type_4rbdl_FixedBody) < 0) __PYX_ERR(0, 695, __pyx_L1_error)
  __pyx_type_4rbdl_FixedBody.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "FixedBody", (PyObject *)&__pyx_type_4rbdl_FixedBody) < 0) __PYX_ERR(0, 695, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_FixedBody) < 0) __PYX_ERR(0, 695, __pyx_L1_error)
  __pyx_ptype_4rbdl_FixedBody = &__pyx_type_4rbdl_FixedBody;
  if (PyType_Ready(&__pyx_type_4rbdl_Joint) < 0) __PYX_ERR(0, 776, __pyx_L1_error)
  __pyx_type_4rbdl_Joint.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Joint", (PyObject *)&__pyx_type_4rbdl_Joint) < 0) __PYX_ERR(0, 776, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_Joint) < 0) __PYX_ERR(0, 776, __pyx_L1_error)
  __pyx_ptype_4rbdl_Joint = &__pyx_type_4rbdl_Joint;
  if (PyType_Ready(&__pyx_type_4rbdl_Model) < 0) __PYX_ERR(0, 1446, __pyx_L1_error)
  __pyx_type_4rbdl_Model.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Model", (PyObject *)&__pyx_type_4rbdl_Model) < 0) __PYX_ERR(0, 1446, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_Model) < 0) __PYX_ERR(0, 1446, __pyx_L1_error)
  __pyx_ptype_4rbdl_Model = &__pyx_type_4rbdl_Model;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_v_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 885, __pyx_L1_error)
  __pyx_type_4rbdl__Model_v_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_v_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_v_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 885, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_v_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 885, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_v_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_v_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_a_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 913, __pyx_L1_error)
  __pyx_type_4rbdl__Model_a_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_a_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_a_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 913, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_a_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 913, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_a_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_a_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_mJoints_Joint_VectorWrapper) < 0) __PYX_ERR(0, 941, __pyx_L1_error)
  __pyx_type_4rbdl__Model_mJoints_Joint_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_mJoints_Joint_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_mJoints_Joint_VectorWrapper) < 0) __PYX_ERR(0, 941, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_mJoints_Joint_VectorWrapper) < 0) __PYX_ERR(0, 941, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_mJoints_Joint_VectorWrapper = &__pyx_type_4rbdl__Model_mJoints_Joint_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_S_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 969, __pyx_L1_error)
  __pyx_type_4rbdl__Model_S_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_S_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_S_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 969, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_S_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 969, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_S_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_S_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_X_J_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
  __pyx_type_4rbdl__Model_X_J_SpatialTransform_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_X_J_SpatialTransform_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_X_J_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_X_J_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_X_J_SpatialTransform_VectorWrapper = &__pyx_type_4rbdl__Model_X_J_SpatialTransform_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_v_J_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1025, __pyx_L1_error)
  __pyx_type_4rbdl__Model_v_J_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_v_J_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_v_J_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1025, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_v_J_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1025, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_v_J_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_v_J_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_c_J_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1053, __pyx_L1_error)
  __pyx_type_4rbdl__Model_c_J_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_c_J_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_c_J_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1053, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_c_J_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1053, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_c_J_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_c_J_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_X_T_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1081, __pyx_L1_error)
  __pyx_type_4rbdl__Model_X_T_SpatialTransform_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_X_T_SpatialTransform_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_X_T_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1081, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_X_T_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1081, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_X_T_SpatialTransform_VectorWrapper = &__pyx_type_4rbdl__Model_X_T_SpatialTransform_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_c_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1109, __pyx_L1_error)
  __pyx_type_4rbdl__Model_c_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_c_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_c_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1109, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_c_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1109, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_c_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_c_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_IA_SpatialMatrix_VectorWrapper) < 0) __PYX_ERR(0, 1137, __pyx_L1_error)
  __pyx_type_4rbdl__Model_IA_SpatialMatrix_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_IA_SpatialMatrix_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_IA_SpatialMatrix_VectorWrapper) < 0) __PYX_ERR(0, 1137, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_IA_SpatialMatrix_VectorWrapper) < 0) __PYX_ERR(0, 1137, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_IA_SpatialMatrix_VectorWrapper = &__pyx_type_4rbdl__Model_IA_SpatialMatrix_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_pA_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1165, __pyx_L1_error)
  __pyx_type_4rbdl__Model_pA_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_pA_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_pA_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1165, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_pA_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1165, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_pA_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_pA_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_U_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1193, __pyx_L1_error)
  __pyx_type_4rbdl__Model_U_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_U_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_U_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1193, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_U_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1193, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_U_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_U_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_f_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1221, __pyx_L1_error)
  __pyx_type_4rbdl__Model_f_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_f_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_f_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1221, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_f_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1221, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_f_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_f_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper) < 0) __PYX_ERR(0, 1249, __pyx_L1_error)
  __pyx_type_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_I_SpatialRigidBodyInertia_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper) < 0) __PYX_ERR(0, 1249, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper) < 0) __PYX_ERR(0, 1249, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper = &__pyx_type_4rbdl__Model_I_SpatialRigidBodyInertia_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper) < 0) __PYX_ERR(0, 1277, __pyx_L1_error)
  __pyx_type_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_Ic_SpatialRigidBodyInertia_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper) < 0) __PYX_ERR(0, 1277, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper) < 0) __PYX_ERR(0, 1277, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper = &__pyx_type_4rbdl__Model_Ic_SpatialRigidBodyInertia_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_hc_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1305, __pyx_L1_error)
  __pyx_type_4rbdl__Model_hc_SpatialVector_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_hc_SpatialVector_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_hc_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1305, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_hc_SpatialVector_VectorWrapper) < 0) __PYX_ERR(0, 1305, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_hc_SpatialVector_VectorWrapper = &__pyx_type_4rbdl__Model_hc_SpatialVector_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1333, __pyx_L1_error)
  __pyx_type_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_X_lambda_SpatialTransform_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1333, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1333, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper = &__pyx_type_4rbdl__Model_X_lambda_SpatialTransform_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_X_base_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1361, __pyx_L1_error)
  __pyx_type_4rbdl__Model_X_base_SpatialTransform_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_X_base_SpatialTransform_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_X_base_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1361, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_X_base_SpatialTransform_VectorWrapper) < 0) __PYX_ERR(0, 1361, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_X_base_SpatialTransform_VectorWrapper = &__pyx_type_4rbdl__Model_X_base_SpatialTransform_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper) < 0) __PYX_ERR(0, 1389, __pyx_L1_error)
  __pyx_type_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_mFixedBodies_FixedBody_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper) < 0) __PYX_ERR(0, 1389, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper) < 0) __PYX_ERR(0, 1389, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper = &__pyx_type_4rbdl__Model_mFixedBodies_FixedBody_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__Model_mBodies_Body_VectorWrapper) < 0) __PYX_ERR(0, 1417, __pyx_L1_error)
  __pyx_type_4rbdl__Model_mBodies_Body_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_Model_mBodies_Body_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__Model_mBodies_Body_VectorWrapper) < 0) __PYX_ERR(0, 1417, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__Model_mBodies_Body_VectorWrapper) < 0) __PYX_ERR(0, 1417, __pyx_L1_error)
  __pyx_ptype_4rbdl__Model_mBodies_Body_VectorWrapper = &__pyx_type_4rbdl__Model_mBodies_Body_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl_ConstraintSet) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  __pyx_type_4rbdl_ConstraintSet.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "ConstraintSet", (PyObject *)&__pyx_type_4rbdl_ConstraintSet) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl_ConstraintSet) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  __pyx_ptype_4rbdl_ConstraintSet = &__pyx_type_4rbdl_ConstraintSet;
  if (PyType_Ready(&__pyx_type_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper) < 0) __PYX_ERR(0, 1709, __pyx_L1_error)
  __pyx_type_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_ConstraintSet_point_Vector3d_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper) < 0) __PYX_ERR(0, 1709, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper) < 0) __PYX_ERR(0, 1709, __pyx_L1_error)
  __pyx_ptype_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper = &__pyx_type_4rbdl__ConstraintSet_point_Vector3d_VectorWrapper;
  if (PyType_Ready(&__pyx_type_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper) < 0) __PYX_ERR(0, 1737, __pyx_L1_error)
  __pyx_type_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "_ConstraintSet_normal_Vector3d_VectorWrapper", (PyObject *)&__pyx_type_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper) < 0) __PYX_ERR(0, 1737, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper) < 0) __PYX_ERR(0, 1737, __pyx_L1_error)
  __pyx_ptype_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper = &__pyx_type_4rbdl__ConstraintSet_normal_Vector3d_VectorWrapper;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) __PYX_ERR(2, 155, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) __PYX_ERR(2, 168, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) __PYX_ERR(2, 172, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) __PYX_ERR(2, 181, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) __PYX_ERR(2, 861, __pyx_L1_error)
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "rbdl.pyx":8
 * #cython: boundscheck=False, embedsignature=True
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * from libc.stdint cimport uintptr_t
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":67
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Vector3d (address)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Vector3d, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":66
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return Vector3d (address)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Vector3d->tp_dict, __pyx_n_s_fromPointer, __pyx_t_2) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Vector3d);

  /* "rbdl.pyx":71
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Vector3d (0, python_values)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Vector3d, __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":70
 *         return Vector3d (address)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPythonArray (cls, python_values):
 *         return Vector3d (0, python_values)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Vector3d->tp_dict, __pyx_n_s_fromPythonArray, __pyx_t_1) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Vector3d);

  /* "rbdl.pyx":117
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Matrix3d (address)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Matrix3d, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":116
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return Matrix3d (address)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Matrix3d->tp_dict, __pyx_n_s_fromPointer, __pyx_t_2) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Matrix3d);

  /* "rbdl.pyx":121
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Matrix3d (0, python_values)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Matrix3d, __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":120
 *         return Matrix3d (address)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPythonArray (cls, python_values):
 *         return Matrix3d (0, python_values)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Matrix3d->tp_dict, __pyx_n_s_fromPythonArray, __pyx_t_1) < 0) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Matrix3d);

  /* "rbdl.pyx":173
 *     # Constructors
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return VectorNd (len(python_values), 0, python_values)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_VectorNd, __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":172
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPythonArray (cls, python_values):
 *         return VectorNd (len(python_values), 0, python_values)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_VectorNd->tp_dict, __pyx_n_s_fromPythonArray, __pyx_t_2) < 0) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_VectorNd);

  /* "rbdl.pyx":177
 * 
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         cdef crbdl.VectorNd* vector_ptr = <crbdl.VectorNd*> address
 *         return VectorNd (vector_ptr.rows(), <uintptr_t> address)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_VectorNd, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":176
 *         return VectorNd (len(python_values), 0, python_values)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         cdef crbdl.VectorNd* vector_ptr = <crbdl.VectorNd*> address
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_VectorNd->tp_dict, __pyx_n_s_fromPointer, __pyx_t_1) < 0) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_VectorNd);

  /* "rbdl.pyx":250
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Quaternion (address)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Quaternion, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":249
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return Quaternion (address)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Quaternion->tp_dict, __pyx_n_s_fromPointer, __pyx_t_2) < 0) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Quaternion);

  /* "rbdl.pyx":254
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return Quaternion (0, python_values)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Quaternion, __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":253
 *         return Quaternion (address)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPythonArray (cls, python_values):
 *         return Quaternion (0, python_values)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Quaternion->tp_dict, __pyx_n_s_fromPythonArray, __pyx_t_1) < 0) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Quaternion);

  /* "rbdl.pyx":258
 * 
 *     @classmethod
 *     def fromPythonMatrix (cls, python_matrix_values):             # <<<<<<<<<<<<<<
 *         return Quaternion (0, None, python_matrix_values)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Quaternion, __pyx_n_s_fromPythonMatrix); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":257
 *         return Quaternion (0, python_values)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPythonMatrix (cls, python_matrix_values):
 *         return Quaternion (0, None, python_matrix_values)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Quaternion->tp_dict, __pyx_n_s_fromPythonMatrix, __pyx_t_2) < 0) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Quaternion);

  /* "rbdl.pyx":308
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialVector (address)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_SpatialVector, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":307
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialVector (address)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_SpatialVector->tp_dict, __pyx_n_s_fromPointer, __pyx_t_1) < 0) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_SpatialVector);

  /* "rbdl.pyx":312
 * 
 *     @classmethod
 *     def fromPythonArray (cls, python_values):             # <<<<<<<<<<<<<<
 *         return SpatialVector (0, python_values)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_SpatialVector, __pyx_n_s_fromPythonArray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":311
 *         return SpatialVector (address)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPythonArray (cls, python_values):
 *         return SpatialVector (0, python_values)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_SpatialVector->tp_dict, __pyx_n_s_fromPythonArray, __pyx_t_2) < 0) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_SpatialVector);

  /* "rbdl.pyx":354
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialMatrix (address)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_SpatialMatrix, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":353
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialMatrix (address)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_SpatialMatrix->tp_dict, __pyx_n_s_fromPointer, __pyx_t_1) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_SpatialMatrix);

  /* "rbdl.pyx":499
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialTransform (address)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_SpatialTransform, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":498
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialTransform (address)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_SpatialTransform->tp_dict, __pyx_n_s_fromPointer, __pyx_t_2) < 0) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_SpatialTransform);

  /* "rbdl.pyx":523
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return SpatialRigidBodyInertia (address)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":522
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return SpatialRigidBodyInertia (address)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_SpatialRigidBodyInertia->tp_dict, __pyx_n_s_fromPointer, __pyx_t_1) < 0) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_SpatialRigidBodyInertia);

  /* "rbdl.pyx":644
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Body (address=address)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Body, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":643
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return Body (address=address)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Body->tp_dict, __pyx_n_s_fromPointer, __pyx_t_2) < 0) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Body);

  /* "rbdl.pyx":648
 * 
 *     @classmethod
 *     def fromMassComInertia(cls, double mass,             # <<<<<<<<<<<<<<
 *             np.ndarray[double, ndim=1] com,
 *             np.ndarray[double, ndim=2] inertia):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Body, __pyx_n_s_fromMassComInertia); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":647
 *         return Body (address=address)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromMassComInertia(cls, double mass,
 *             np.ndarray[double, ndim=1] com,
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Body->tp_dict, __pyx_n_s_fromMassComInertia, __pyx_t_1) < 0) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Body);

  /* "rbdl.pyx":716
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return FixedBody (address)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_FixedBody, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 716, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":715
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return FixedBody (address)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 715, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_FixedBody->tp_dict, __pyx_n_s_fromPointer, __pyx_t_2) < 0) __PYX_ERR(0, 716, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_FixedBody);

  /* "rbdl.pyx":781
 * 
 *     joint_type_map = {
 *             JointTypeUndefined: "JointTypeUndefined",             # <<<<<<<<<<<<<<
 *             JointTypeRevolute: "JointTypeRevolute",
 *             JointTypePrismatic: "JointTypePrismatic",
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeUndefined); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeUndefined) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":782
 *     joint_type_map = {
 *             JointTypeUndefined: "JointTypeUndefined",
 *             JointTypeRevolute: "JointTypeRevolute",             # <<<<<<<<<<<<<<
 *             JointTypePrismatic: "JointTypePrismatic",
 *             JointTypeRevoluteX: "JointTypeRevoluteX",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeRevolute); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeRevolute) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":783
 *             JointTypeUndefined: "JointTypeUndefined",
 *             JointTypeRevolute: "JointTypeRevolute",
 *             JointTypePrismatic: "JointTypePrismatic",             # <<<<<<<<<<<<<<
 *             JointTypeRevoluteX: "JointTypeRevoluteX",
 *             JointTypeRevoluteY: "JointTypeRevoluteY",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypePrismatic); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypePrismatic) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":784
 *             JointTypeRevolute: "JointTypeRevolute",
 *             JointTypePrismatic: "JointTypePrismatic",
 *             JointTypeRevoluteX: "JointTypeRevoluteX",             # <<<<<<<<<<<<<<
 *             JointTypeRevoluteY: "JointTypeRevoluteY",
 *             JointTypeRevoluteZ: "JointTypeRevoluteZ",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeRevoluteX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeRevoluteX) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":785
 *             JointTypePrismatic: "JointTypePrismatic",
 *             JointTypeRevoluteX: "JointTypeRevoluteX",
 *             JointTypeRevoluteY: "JointTypeRevoluteY",             # <<<<<<<<<<<<<<
 *             JointTypeRevoluteZ: "JointTypeRevoluteZ",
 *             JointTypeSpherical: "JointTypeSpherical",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeRevoluteY); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeRevoluteY) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":786
 *             JointTypeRevoluteX: "JointTypeRevoluteX",
 *             JointTypeRevoluteY: "JointTypeRevoluteY",
 *             JointTypeRevoluteZ: "JointTypeRevoluteZ",             # <<<<<<<<<<<<<<
 *             JointTypeSpherical: "JointTypeSpherical",
 *             JointTypeEulerZYX: "JointTypeEulerZYX",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeRevoluteZ); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeRevoluteZ) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":787
 *             JointTypeRevoluteY: "JointTypeRevoluteY",
 *             JointTypeRevoluteZ: "JointTypeRevoluteZ",
 *             JointTypeSpherical: "JointTypeSpherical",             # <<<<<<<<<<<<<<
 *             JointTypeEulerZYX: "JointTypeEulerZYX",
 *             JointTypeEulerXYZ: "JointTypeEulerXYZ",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeSpherical); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeSpherical) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":788
 *             JointTypeRevoluteZ: "JointTypeRevoluteZ",
 *             JointTypeSpherical: "JointTypeSpherical",
 *             JointTypeEulerZYX: "JointTypeEulerZYX",             # <<<<<<<<<<<<<<
 *             JointTypeEulerXYZ: "JointTypeEulerXYZ",
 *             JointTypeEulerYXZ: "JointTypeEulerYXZ",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeEulerZYX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeEulerZYX) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":789
 *             JointTypeSpherical: "JointTypeSpherical",
 *             JointTypeEulerZYX: "JointTypeEulerZYX",
 *             JointTypeEulerXYZ: "JointTypeEulerXYZ",             # <<<<<<<<<<<<<<
 *             JointTypeEulerYXZ: "JointTypeEulerYXZ",
 *             JointTypeTranslationXYZ: "JointTypeTranslationXYZ",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeEulerXYZ); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeEulerXYZ) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":790
 *             JointTypeEulerZYX: "JointTypeEulerZYX",
 *             JointTypeEulerXYZ: "JointTypeEulerXYZ",
 *             JointTypeEulerYXZ: "JointTypeEulerYXZ",             # <<<<<<<<<<<<<<
 *             JointTypeTranslationXYZ: "JointTypeTranslationXYZ",
 *             JointTypeFloatingBase: "JointTypeFloatingBase",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeEulerYXZ); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeEulerYXZ) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":791
 *             JointTypeEulerXYZ: "JointTypeEulerXYZ",
 *             JointTypeEulerYXZ: "JointTypeEulerYXZ",
 *             JointTypeTranslationXYZ: "JointTypeTranslationXYZ",             # <<<<<<<<<<<<<<
 *             JointTypeFloatingBase: "JointTypeFloatingBase",
 *             JointTypeFixed: "JointTypeFixed",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeTranslationXYZ); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeTranslationXYZ) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":792
 *             JointTypeEulerYXZ: "JointTypeEulerYXZ",
 *             JointTypeTranslationXYZ: "JointTypeTranslationXYZ",
 *             JointTypeFloatingBase: "JointTypeFloatingBase",             # <<<<<<<<<<<<<<
 *             JointTypeFixed: "JointTypeFixed",
 *             JointTypeHelical: "JointTypeHelical",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeFloatingBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeFloatingBase) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":793
 *             JointTypeTranslationXYZ: "JointTypeTranslationXYZ",
 *             JointTypeFloatingBase: "JointTypeFloatingBase",
 *             JointTypeFixed: "JointTypeFixed",             # <<<<<<<<<<<<<<
 *             JointTypeHelical: "JointTypeHelical",
 *             JointType1DoF: "JointType1DoF",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeFixed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeFixed) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":794
 *             JointTypeFloatingBase: "JointTypeFloatingBase",
 *             JointTypeFixed: "JointTypeFixed",
 *             JointTypeHelical: "JointTypeHelical",             # <<<<<<<<<<<<<<
 *             JointType1DoF: "JointType1DoF",
 *             JointType2DoF: "JointType2DoF",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeHelical); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 794, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeHelical) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":795
 *             JointTypeFixed: "JointTypeFixed",
 *             JointTypeHelical: "JointTypeHelical",
 *             JointType1DoF: "JointType1DoF",             # <<<<<<<<<<<<<<
 *             JointType2DoF: "JointType2DoF",
 *             JointType3DoF: "JointType3DoF",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType1DoF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointType1DoF) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":796
 *             JointTypeHelical: "JointTypeHelical",
 *             JointType1DoF: "JointType1DoF",
 *             JointType2DoF: "JointType2DoF",             # <<<<<<<<<<<<<<
 *             JointType3DoF: "JointType3DoF",
 *             JointType4DoF: "JointType4DoF",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType2DoF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointType2DoF) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":797
 *             JointType1DoF: "JointType1DoF",
 *             JointType2DoF: "JointType2DoF",
 *             JointType3DoF: "JointType3DoF",             # <<<<<<<<<<<<<<
 *             JointType4DoF: "JointType4DoF",
 *             JointType5DoF: "JointType5DoF",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType3DoF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointType3DoF) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":798
 *             JointType2DoF: "JointType2DoF",
 *             JointType3DoF: "JointType3DoF",
 *             JointType4DoF: "JointType4DoF",             # <<<<<<<<<<<<<<
 *             JointType5DoF: "JointType5DoF",
 *             JointType6DoF: "JointType6DoF",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType4DoF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointType4DoF) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":799
 *             JointType3DoF: "JointType3DoF",
 *             JointType4DoF: "JointType4DoF",
 *             JointType5DoF: "JointType5DoF",             # <<<<<<<<<<<<<<
 *             JointType6DoF: "JointType6DoF",
 *             JointTypeCustom: "JointTypeCustom",
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType5DoF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 799, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointType5DoF) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":800
 *             JointType4DoF: "JointType4DoF",
 *             JointType5DoF: "JointType5DoF",
 *             JointType6DoF: "JointType6DoF",             # <<<<<<<<<<<<<<
 *             JointTypeCustom: "JointTypeCustom",
 *             }
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointType6DoF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointType6DoF) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":801
 *             JointType5DoF: "JointType5DoF",
 *             JointType6DoF: "JointType6DoF",
 *             JointTypeCustom: "JointTypeCustom",             # <<<<<<<<<<<<<<
 *             }
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(__pyx_e_4rbdl_JointTypeCustom); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_n_s_JointTypeCustom) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Joint->tp_dict, __pyx_n_s_joint_type_map, __pyx_t_2) < 0) __PYX_ERR(0, 780, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Joint);

  /* "rbdl.pyx":837
 *     # Constructors
 *     @classmethod
 *     def fromPointer(cls, uintptr_t address):             # <<<<<<<<<<<<<<
 *         return Joint (address)
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Joint, __pyx_n_s_fromPointer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":836
 * 
 *     # Constructors
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromPointer(cls, uintptr_t address):
 *         return Joint (address)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Joint->tp_dict, __pyx_n_s_fromPointer, __pyx_t_1) < 0) __PYX_ERR(0, 837, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Joint);

  /* "rbdl.pyx":841
 * 
 *     @classmethod
 *     def fromJointType(cls, joint_type):             # <<<<<<<<<<<<<<
 *         return Joint (0, joint_type)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Joint, __pyx_n_s_fromJointType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "rbdl.pyx":840
 *         return Joint (address)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromJointType(cls, joint_type):
 *         return Joint (0, joint_type)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Joint->tp_dict, __pyx_n_s_fromJointType, __pyx_t_2) < 0) __PYX_ERR(0, 841, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Joint);

  /* "rbdl.pyx":845
 * 
 *     @classmethod
 *     def fromJointAxes(cls, axes):             # <<<<<<<<<<<<<<
 *         assert (len(axes) > 0)
 *         assert (len(axes[0]) == 6)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4rbdl_Joint, __pyx_n_s_fromJointAxes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "rbdl.pyx":844
 *         return Joint (0, joint_type)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromJointAxes(cls, axes):
 *         assert (len(axes) > 0)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4rbdl_Joint->tp_dict, __pyx_n_s_fromJointAxes, __pyx_t_1) < 0) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4rbdl_Joint);

  /* "rbdl.pyx":1503
 *             Joint joint not None,
 *             Body body not None,
 *             string body_name = b""):             # <<<<<<<<<<<<<<
 *         return self.thisptr.AddBody (
 *                 parent_id,
 */
  __pyx_t_3 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__94); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1503, __pyx_L1_error)
  __pyx_k__75 = __pyx_t_3;

  /* "rbdl.pyx":1516
 *             Joint joint not None,
 *             Body body not None,
 *             string body_name = b""):             # <<<<<<<<<<<<<<
 *         return self.thisptr.AppendBody (
 *                 joint_frame.thisptr[0],
 */
  __pyx_t_3 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__94); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1516, __pyx_L1_error)
  __pyx_k__76 = __pyx_t_3;

  /* "rbdl.pyx":1876
 * ##############################
 * 
 * def UpdateKinematics(             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_1UpdateKinematics, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UpdateKinematics, __pyx_t_1) < 0) __PYX_ERR(0, 1876, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1889
 *     )
 * 
 * def CalcBodyToBaseCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_3CalcBodyToBaseCoordinates, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1889, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcBodyToBaseCoordinates, __pyx_t_1) < 0) __PYX_ERR(0, 1889, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1902
 *             ))
 * 
 * def CalcBaseToBodyCoordinates (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_5CalcBaseToBodyCoordinates, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcBaseToBodyCoordinates, __pyx_t_1) < 0) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1915
 *             ))
 * 
 * def CalcBodyWorldOrientation (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_7CalcBodyWorldOrientation, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcBodyWorldOrientation, __pyx_t_1) < 0) __PYX_ERR(0, 1915, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1926
 *             ))
 * 
 * def CalcPointVelocity (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_9CalcPointVelocity, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcPointVelocity, __pyx_t_1) < 0) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1941
 *             ))
 * 
 * def CalcPointAcceleration (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_11CalcPointAcceleration, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcPointAcceleration, __pyx_t_1) < 0) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1958
 *             ))
 * 
 * def CalcPointVelocity6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_13CalcPointVelocity6D, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcPointVelocity6D, __pyx_t_1) < 0) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1973
 *             ))
 * 
 * def CalcPointAcceleration6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_15CalcPointAcceleration6D, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcPointAcceleration6D, __pyx_t_1) < 0) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1990
 *             ))
 * 
 * def CalcPointJacobian (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_17CalcPointJacobian, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcPointJacobian, __pyx_t_1) < 0) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2005
 *             )
 * 
 * def CalcPointJacobian6D (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_19CalcPointJacobian6D, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2005, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcPointJacobian6D, __pyx_t_1) < 0) __PYX_ERR(0, 2005, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2020
 *             )
 * 
 * def CalcBodySpatialJacobian(Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         unsigned int body_id,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_21CalcBodySpatialJacobian, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2020, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcBodySpatialJacobian, __pyx_t_1) < 0) __PYX_ERR(0, 2020, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2040
 * ##############################
 * 
 * def CalcCenterOfMass (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_23CalcCenterOfMass, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcCenterOfMass, __pyx_t_1) < 0) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2124
 *     return cmass
 * 
 * def CalcZeroMomentPoint (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_25CalcZeroMomentPoint, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CalcZeroMomentPoint, __pyx_t_1) < 0) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2174
 * ##############################
 * 
 * def InverseDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_27InverseDynamics, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_InverseDynamics, __pyx_t_1) < 0) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2187
 *             )
 * 
 * def NonlinearEffects (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_29NonlinearEffects, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NonlinearEffects, __pyx_t_1) < 0) __PYX_ERR(0, 2187, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2197
 *             )
 * 
 * def CompositeRigidBodyAlgorithm (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=2, mode="c"] H,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_31CompositeRigidBodyAlgorithm, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CompositeRigidBodyAlgorithm, __pyx_t_1) < 0) __PYX_ERR(0, 2197, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2206
 *             update_kinematics);
 * 
 * def ForwardDynamics (Model model,             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] q,
 *         np.ndarray[double, ndim=1, mode="c"] qdot,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_33ForwardDynamics, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ForwardDynamics, __pyx_t_1) < 0) __PYX_ERR(0, 2206, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2224
 * ##############################
 * 
 * def ForwardDynamicsConstraintsDirect (             # <<<<<<<<<<<<<<
 *         Model model,
 *         np.ndarray[double, ndim=1, mode="c"] q,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_35ForwardDynamicsConstraintsDirect, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ForwardDynamicsConstraintsDirect, __pyx_t_1) < 0) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":2246
 * ##############################
 * 
 * def loadModel (             # <<<<<<<<<<<<<<
 *         filename,
 *         **kwargs
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4rbdl_37loadModel, NULL, __pyx_n_s_rbdl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_loadModel, __pyx_t_1) < 0) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "rbdl.pyx":1
 * # WARNING!             # <<<<<<<<<<<<<<
 * #
 * # This file was automatically created from rbdl-wrapper.pyx using wrappergen.py.
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init rbdl", 0, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init rbdl");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* GetItemInt */
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely((0 <= wrapped_i) & (wrapped_i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely((0 <= wrapped_i) & (wrapped_i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
#include "frameobject.h"
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = PyThreadState_GET();
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = f->f_localsplus;
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* SetItemInt */
  static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return -1;
                    PyErr_Clear();
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o))) {
#else
    if (is_list || PySequence_Check(o)) {
#endif
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

/* GetModuleGlobalName */
    static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* IsLittleEndian */
      static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
      static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static CYTHON_INLINE PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}
static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static CYTHON_INLINE int __Pyx_GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  if (obj == Py_None || obj == NULL) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

/* ExtTypeTest */
        static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* KeywordStringCheck */
        static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* UnpackUnboundCMethod */
        static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(PyObject_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST);
    }
#endif
    return 0;
}

/* CallUnboundCMethod0 */
        static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self) {
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_ASSUME_SAFE_MACROS
    args = PyTuple_New(1);
    if (unlikely(!args)) goto bad;
    Py_INCREF(self);
    PyTuple_SET_ITEM(args, 0, self);
#else
    args = PyTuple_Pack(1, self);
    if (unlikely(!args)) goto bad;
#endif
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    Py_DECREF(args);
bad:
    return result;
}

/* py_dict_keys */
        static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_CallUnboundCMethod0(&__pyx_umethod_PyDict_Type_keys, d);
    else
        return PyDict_Keys(d);
}

/* ArgTypeTest */
        static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* PyObjectCallNoArg */
        #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* IterFinish */
          static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* PyObjectCallMethod0 */
          static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *function = PyMethod_GET_FUNCTION(method);
            result = __Pyx_PyObject_CallOneArg(function, self);
            Py_DECREF(method);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNeedMoreValuesToUnpack */
          static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseTooManyValuesToUnpack */
          static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* UnpackItemEndCheck */
          static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* RaiseNoneIterError */
          static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
          static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
          static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                             int is_tuple, int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    if (!is_tuple && unlikely(!PyTuple_Check(tuple))) {
        iternextfunc iternext;
        iter = PyObject_GetIter(tuple);
        if (unlikely(!iter)) goto bad;
        if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
        iternext = Py_TYPE(iter)->tp_iternext;
        value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
        value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
        if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
        Py_DECREF(iter);
    } else {
        if (!has_known_size && unlikely(PyTuple_GET_SIZE(tuple) != 2)) {
            __Pyx_UnpackTupleError(tuple, 2);
            goto bad;
        }
#if CYTHON_COMPILING_IN_PYPY
        value1 = PySequence_ITEM(tuple, 0);
        if (unlikely(!value1)) goto bad;
        value2 = PySequence_ITEM(tuple, 1);
        if (unlikely(!value2)) goto bad;
#else
        value1 = PyTuple_GET_ITEM(tuple, 0);
        value2 = PyTuple_GET_ITEM(tuple, 1);
        Py_INCREF(value1);
        Py_INCREF(value2);
#endif
        if (decref_tuple) { Py_DECREF(tuple); }
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
          static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        const char *name = PyUnicode_AsUTF8(method_name);
        PyObject **pp = NULL;
        if (strcmp(name, "iteritems") == 0) pp = &py_items;
        else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
        else if (strcmp(name, "itervalues") == 0) pp = &py_values;
        if (pp) {
            if (!*pp) {
                *pp = PyUnicode_FromString(name + 4);
                if (!*pp)
                    return NULL;
            }
            method_name = *pp;
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* PyIntBinop */
          #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                #if PyLong_SHIFT < 30 && PyLong_SHIFT != 15
                default: return PyLong_Type.tp_richcompare(op1, op2, Py_EQ);
                #else
                default: Py_RETURN_FALSE;
                #endif
            }
        }
            if (a == b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            if ((double)a == (double)b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    return PyObject_RichCompare(op1, op2, Py_EQ);
}
#endif

/* PyIntBinop */
          #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* SaveResetException */
          #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
          #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    return PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
          #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
#endif
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* SetupReduce */
            static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_COMPILING_IN_CPYTHON
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* Import */
            static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* GetNameInClass */
            static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

/* ClassMethod */
            static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYSTON
    if (PyMethodDescr_Check(method)) {
#else
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (PyObject_TypeCheck(method, methoddescr_type)) {
#endif
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __Pyx_CyFunction_USED
    else if (PyObject_TypeCheck(method, __pyx_CyFunctionType)) {
        return PyClassMethod_New(method);
    }
#endif
    PyErr_SetString(PyExc_TypeError,
                   "Class-level classmethod() can only be called on "
                   "a method_descriptor or instance method.");
    return NULL;
}

/* CLineInTraceback */
              static int __Pyx_CLineForTraceback(int c_line) {
#ifdef CYTHON_CLINE_IN_TRACEBACK
    return ((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0;
#else
    PyObject *use_cline;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
      use_cline = PyDict_GetItem(*cython_runtime_dict, __pyx_n_s_cline_in_traceback);
    } else
#endif
    {
      PyObject *ptype, *pvalue, *ptraceback;
      PyObject *use_cline_obj;
      PyErr_Fetch(&ptype, &pvalue, &ptraceback);
      use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        use_cline = NULL;
      }
      PyErr_Restore(ptype, pvalue, ptraceback);
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (PyObject_Not(use_cline) != 0) {
        c_line = 0;
    }
    return c_line;
#endif
}

/* CodeObjectCache */
              static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
              #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
        else if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view);
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


              /* CIntFromPyVerify */
              #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_4rbdl_JointType(enum __pyx_t_4rbdl_JointType value) {
    const enum __pyx_t_4rbdl_JointType neg_one = (enum __pyx_t_4rbdl_JointType) -1, const_zero = (enum __pyx_t_4rbdl_JointType) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum __pyx_t_4rbdl_JointType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_4rbdl_JointType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum __pyx_t_4rbdl_JointType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum __pyx_t_4rbdl_JointType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum __pyx_t_4rbdl_JointType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum __pyx_t_4rbdl_JointType),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(Py_intptr_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__RigidBodyDynamics_3a__3a_JointType(enum RigidBodyDynamics::JointType value) {
    const enum RigidBodyDynamics::JointType neg_one = (enum RigidBodyDynamics::JointType) -1, const_zero = (enum RigidBodyDynamics::JointType) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum RigidBodyDynamics::JointType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum RigidBodyDynamics::JointType),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
    }
}

/* Print */
              #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

/* Declarations */
              #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
              #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0, -1);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
              #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
              #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
              static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
              static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
              static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntFromPy */
              static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
              static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
              static CYTHON_INLINE Py_intptr_t __Pyx_PyInt_As_Py_intptr_t(PyObject *x) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (Py_intptr_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (Py_intptr_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(Py_intptr_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(Py_intptr_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) >= 2 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((((Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(Py_intptr_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) >= 3 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((((((Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(Py_intptr_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) >= 4 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((((((((Py_intptr_t)digits[3]) << PyLong_SHIFT) | (Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (Py_intptr_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (Py_intptr_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(Py_intptr_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(Py_intptr_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(Py_intptr_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 2 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((Py_intptr_t)-1)*(((((Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(Py_intptr_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 2 * PyLong_SHIFT) {
                            return (Py_intptr_t) ((((((Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(Py_intptr_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 3 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((Py_intptr_t)-1)*(((((((Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(Py_intptr_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 3 * PyLong_SHIFT) {
                            return (Py_intptr_t) ((((((((Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(Py_intptr_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 4 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((Py_intptr_t)-1)*(((((((((Py_intptr_t)digits[3]) << PyLong_SHIFT) | (Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(Py_intptr_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 4 * PyLong_SHIFT) {
                            return (Py_intptr_t) ((((((((((Py_intptr_t)digits[3]) << PyLong_SHIFT) | (Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(Py_intptr_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            Py_intptr_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (Py_intptr_t) -1;
        }
    } else {
        Py_intptr_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (Py_intptr_t) -1;
        val = __Pyx_PyInt_As_Py_intptr_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to Py_intptr_t");
    return (Py_intptr_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to Py_intptr_t");
    return (Py_intptr_t) -1;
}

/* CIntFromPy */
              static CYTHON_INLINE enum RigidBodyDynamics::JointType __Pyx_PyInt_As_enum__RigidBodyDynamics_3a__3a_JointType(PyObject *x) {
    const enum RigidBodyDynamics::JointType neg_one = (enum RigidBodyDynamics::JointType) -1, const_zero = (enum RigidBodyDynamics::JointType) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(enum RigidBodyDynamics::JointType) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (enum RigidBodyDynamics::JointType) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum RigidBodyDynamics::JointType) 0;
                case  1: __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, digit, digits[0])
                case 2:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) >= 2 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) (((((enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) >= 3 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) (((((((enum RigidBodyDynamics::JointType)digits[2]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) >= 4 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) (((((((((enum RigidBodyDynamics::JointType)digits[3]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[2]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (enum RigidBodyDynamics::JointType) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RigidBodyDynamics::JointType, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RigidBodyDynamics::JointType, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum RigidBodyDynamics::JointType) 0;
                case -1: __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 2 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) (((enum RigidBodyDynamics::JointType)-1)*(((((enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 2 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) ((((((enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 3 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) (((enum RigidBodyDynamics::JointType)-1)*(((((((enum RigidBodyDynamics::JointType)digits[2]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 3 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) ((((((((enum RigidBodyDynamics::JointType)digits[2]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 4 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) (((enum RigidBodyDynamics::JointType)-1)*(((((((((enum RigidBodyDynamics::JointType)digits[3]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[2]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum RigidBodyDynamics::JointType) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RigidBodyDynamics::JointType, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RigidBodyDynamics::JointType) - 1 > 4 * PyLong_SHIFT) {
                            return (enum RigidBodyDynamics::JointType) ((((((((((enum RigidBodyDynamics::JointType)digits[3]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[2]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[1]) << PyLong_SHIFT) | (enum RigidBodyDynamics::JointType)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RigidBodyDynamics::JointType, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(enum RigidBodyDynamics::JointType) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RigidBodyDynamics::JointType, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            enum RigidBodyDynamics::JointType val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (enum RigidBodyDynamics::JointType) -1;
        }
    } else {
        enum RigidBodyDynamics::JointType val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (enum RigidBodyDynamics::JointType) -1;
        val = __Pyx_PyInt_As_enum__RigidBodyDynamics_3a__3a_JointType(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to enum RigidBodyDynamics::JointType");
    return (enum RigidBodyDynamics::JointType) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to enum RigidBodyDynamics::JointType");
    return (enum RigidBodyDynamics::JointType) -1;
}

/* PrintOne */
              #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

/* CheckBinaryVersion */
              static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
              #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
              #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
              static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            PyErr_Clear();
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
  #else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
  #endif
#else
  res = PyNumber_Int(x);
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
